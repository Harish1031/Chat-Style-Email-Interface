"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@instantdb";
exports.ids = ["vendor-chunks/@instantdb"];
exports.modules = {

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IndexedDBStorage)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass IndexedDBStorage {\n    constructor(dbName) {\n        this.dbName = dbName;\n        this._storeName = \"kv\";\n        this._dbPromise = this._init();\n    }\n    _init() {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, 1);\n            request.onerror = (event) => {\n                reject(event);\n            };\n            request.onsuccess = (event) => {\n                resolve(event.target.result);\n            };\n            request.onupgradeneeded = (event) => {\n                const db = event.target.result;\n                db.createObjectStore(this._storeName);\n            };\n        });\n    }\n    getItem(k) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield this._dbPromise;\n            return new Promise((resolve, reject) => {\n                const transaction = db.transaction([this._storeName], \"readonly\");\n                const objectStore = transaction.objectStore(this._storeName);\n                const request = objectStore.get(k);\n                request.onerror = (event) => {\n                    reject(event);\n                };\n                request.onsuccess = (_event) => {\n                    if (request.result) {\n                        resolve(request.result);\n                    }\n                    else {\n                        resolve(null);\n                    }\n                };\n            });\n        });\n    }\n    setItem(k, v) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield this._dbPromise;\n            return new Promise((resolve, reject) => {\n                const transaction = db.transaction([this._storeName], \"readwrite\");\n                const objectStore = transaction.objectStore(this._storeName);\n                const request = objectStore.put(v, k);\n                request.onerror = (event) => {\n                    reject(event);\n                };\n                request.onsuccess = (_event) => {\n                    resolve();\n                };\n            });\n        });\n    }\n}\n//# sourceMappingURL=IndexedDBStorage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL0luZGV4ZWREQlN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxJbmRleGVkREJTdG9yYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5kZXhlZERCU3RvcmFnZSB7XG4gICAgY29uc3RydWN0b3IoZGJOYW1lKSB7XG4gICAgICAgIHRoaXMuZGJOYW1lID0gZGJOYW1lO1xuICAgICAgICB0aGlzLl9zdG9yZU5hbWUgPSBcImt2XCI7XG4gICAgICAgIHRoaXMuX2RiUHJvbWlzZSA9IHRoaXMuX2luaXQoKTtcbiAgICB9XG4gICAgX2luaXQoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXF1ZXN0ID0gaW5kZXhlZERCLm9wZW4odGhpcy5kYk5hbWUsIDEpO1xuICAgICAgICAgICAgcmVxdWVzdC5vbmVycm9yID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGV2ZW50KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXF1ZXN0Lm9uc3VjY2VzcyA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoZXZlbnQudGFyZ2V0LnJlc3VsdCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmVxdWVzdC5vbnVwZ3JhZGVuZWVkZWQgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYiA9IGV2ZW50LnRhcmdldC5yZXN1bHQ7XG4gICAgICAgICAgICAgICAgZGIuY3JlYXRlT2JqZWN0U3RvcmUodGhpcy5fc3RvcmVOYW1lKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRJdGVtKGspIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGRiID0geWllbGQgdGhpcy5fZGJQcm9taXNlO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGRiLnRyYW5zYWN0aW9uKFt0aGlzLl9zdG9yZU5hbWVdLCBcInJlYWRvbmx5XCIpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG9iamVjdFN0b3JlID0gdHJhbnNhY3Rpb24ub2JqZWN0U3RvcmUodGhpcy5fc3RvcmVOYW1lKTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0ID0gb2JqZWN0U3RvcmUuZ2V0KGspO1xuICAgICAgICAgICAgICAgIHJlcXVlc3Qub25lcnJvciA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXZlbnQpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5vbnN1Y2Nlc3MgPSAoX2V2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXF1ZXN0LnJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShyZXF1ZXN0LnJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKG51bGwpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2V0SXRlbShrLCB2KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBkYiA9IHlpZWxkIHRoaXMuX2RiUHJvbWlzZTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdHJhbnNhY3Rpb24gPSBkYi50cmFuc2FjdGlvbihbdGhpcy5fc3RvcmVOYW1lXSwgXCJyZWFkd3JpdGVcIik7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqZWN0U3RvcmUgPSB0cmFuc2FjdGlvbi5vYmplY3RTdG9yZSh0aGlzLl9zdG9yZU5hbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlcXVlc3QgPSBvYmplY3RTdG9yZS5wdXQodiwgayk7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5vbmVycm9yID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChldmVudCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICByZXF1ZXN0Lm9uc3VjY2VzcyA9IChfZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5kZXhlZERCU3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/Reactor.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/Reactor.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Reactor)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/log */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/log.js\");\n/* harmony import */ var _utils_weakHash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/weakHash */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js\");\n/* harmony import */ var _instaql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instaql */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instaql.js\");\n/* harmony import */ var _instaml__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instaml */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instaml.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./store */ \"(ssr)/./node_modules/@instantdb/core/dist/module/store.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n/* harmony import */ var _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IndexedDBStorage */ \"(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js\");\n/* harmony import */ var _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WindowNetworkListener */ \"(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js\");\n/* harmony import */ var _authAPI__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./authAPI */ \"(ssr)/./node_modules/@instantdb/core/dist/module/authAPI.js\");\n/* harmony import */ var _StorageAPI__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./StorageAPI */ \"(ssr)/./node_modules/@instantdb/core/dist/module/StorageAPI.js\");\n/* harmony import */ var _presence__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./presence */ \"(ssr)/./node_modules/@instantdb/core/dist/module/presence.js\");\n/* harmony import */ var _utils_Deferred__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/Deferred */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/Deferred.js\");\n/* harmony import */ var _utils_PersistedObject__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/PersistedObject */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js\");\n/* harmony import */ var _model_instaqlResult__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./model/instaqlResult */ \"(ssr)/./node_modules/@instantdb/core/dist/module/model/instaqlResult.js\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n/* harmony import */ var _utils_linkIndex__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/linkIndex */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/linkIndex.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@instantdb/core/dist/module/version.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-check\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst STATUS = {\n    CONNECTING: \"connecting\",\n    OPENED: \"opened\",\n    AUTHENTICATED: \"authenticated\",\n    CLOSED: \"closed\",\n    ERRORED: \"errored\",\n};\nconst QUERY_ONCE_TIMEOUT = 30000;\nconst WS_CONNECTING_STATUS = 0;\nconst WS_OPEN_STATUS = 1;\nconst defaultConfig = {\n    apiURI: \"https://api.instantdb.com\",\n    websocketURI: \"wss://api.instantdb.com/runtime/session\",\n};\n// Param that the backend adds if this is an oauth redirect\nconst OAUTH_REDIRECT_PARAM = \"_instant_oauth_redirect\";\nconst currentUserKey = `currentUser`;\nlet _wsId = 0;\nfunction createWebSocket(uri) {\n    const ws = new WebSocket(uri);\n    // @ts-ignore\n    ws._id = _wsId++;\n    return ws;\n}\nfunction isClient() {\n    const hasWindow = typeof window !== \"undefined\";\n    // this checks if we are running in a chrome extension\n    // @ts-expect-error\n    const isChrome = typeof chrome !== \"undefined\";\n    return hasWindow || isChrome;\n}\nconst ignoreLogging = {\n    \"set-presence\": true,\n    \"set-presence-ok\": true,\n    \"refresh-presence\": true,\n};\nfunction querySubsFromJSON(str) {\n    var _a;\n    const parsed = JSON.parse(str);\n    for (const key in parsed) {\n        const v = parsed[key];\n        if ((_a = v === null || v === void 0 ? void 0 : v.result) === null || _a === void 0 ? void 0 : _a.store) {\n            v.result.store = _store__WEBPACK_IMPORTED_MODULE_4__.fromJSON(v.result.store);\n        }\n    }\n    return parsed;\n}\nfunction querySubsToJSON(querySubs) {\n    var _a;\n    const jsonSubs = {};\n    for (const key in querySubs) {\n        const sub = querySubs[key];\n        const jsonSub = Object.assign({}, sub);\n        if ((_a = sub.result) === null || _a === void 0 ? void 0 : _a.store) {\n            jsonSub.result = Object.assign(Object.assign({}, sub.result), { store: _store__WEBPACK_IMPORTED_MODULE_4__.toJSON(sub.result.store) });\n        }\n        jsonSubs[key] = jsonSub;\n    }\n    return JSON.stringify(jsonSubs);\n}\n/**\n * @template {import('./presence').RoomSchemaShape} [RoomSchema = {}]\n */\nclass Reactor {\n    constructor(config, Storage = _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], NetworkListener = _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_7__[\"default\"], versions) {\n        this._isOnline = true;\n        this._isShutdown = false;\n        this.status = STATUS.CONNECTING;\n        /** @type {Record<string, Array<{ q: any, cb: (data: any) => any }>>} */\n        this.queryCbs = {};\n        /** @type {Record<string, Array<{ q: any, eventId: string, dfd: Deferred }>>} */\n        this.queryOnceDfds = {};\n        this.authCbs = [];\n        this.attrsCbs = [];\n        this.mutationErrorCbs = [];\n        this.connectionStatusCbs = [];\n        this.mutationDeferredStore = new Map();\n        this._reconnectTimeoutId = null;\n        this._reconnectTimeoutMs = 0;\n        this._localIdPromises = {};\n        this._errorMessage = null;\n        /** @type {Promise<null | {error: {message: string}}>}**/\n        this._oauthCallbackResponse = null;\n        /** @type {null | import('./utils/linkIndex').LinkIndex}} */\n        this._linkIndex = null;\n        /** @type {Record<string, {isConnected: boolean; error: any}>} */\n        this._rooms = {};\n        /** @type {Record<string, boolean>} */\n        this._roomsPendingLeave = {};\n        this._presence = {};\n        this._broadcastQueue = [];\n        this._broadcastSubs = {};\n        this._currentUserCached = { isLoading: true, error: undefined, user: undefined };\n        this._beforeUnloadCbs = [];\n        this._dataForQueryCache = {};\n        /**\n         *  merge querySubs from storage and in memory. Has the following side\n         *  effects:\n         *  - We notify all queryCbs because results may been added during merge\n         */\n        this._onMergeQuerySubs = (_storageSubs, inMemorySubs) => {\n            const storageSubs = _storageSubs || {};\n            const ret = Object.assign({}, inMemorySubs);\n            // Consider an inMemorySub with no result;\n            // If we have a result from storageSubs, let's add it\n            Object.entries(inMemorySubs).forEach(([hash, querySub]) => {\n                var _a;\n                const storageResult = (_a = storageSubs === null || storageSubs === void 0 ? void 0 : storageSubs[hash]) === null || _a === void 0 ? void 0 : _a.result;\n                const memoryResult = querySub.result;\n                if (storageResult && !memoryResult) {\n                    ret[hash].result = storageResult;\n                }\n            });\n            // Consider a storageSub with no corresponding inMemorySub\n            // This means that at least at this point,\n            // the user has not asked to subscribe to the query.\n            // We may _still_ want to add it, because in just a\n            // few milliseconds, the user will ask to subscribe to the\n            // query.\n            // For now, we can't really tell if the user will ask to subscribe\n            // or not. So for now let's just add the first 10 queries from storage.\n            // Eventually, we could be smarter about this. For example,\n            // we can keep usage information about which queries are popular.\n            const storageKsToAdd = Object.keys(storageSubs)\n                .filter((k) => !inMemorySubs[k])\n                .slice(0, 10);\n            storageKsToAdd.forEach((k) => {\n                ret[k] = storageSubs[k];\n            });\n            // Okay, now we have merged our querySubs\n            this.querySubs.set((_) => ret);\n            this.loadedNotifyAll();\n        };\n        /**\n         * merge pendingMutations from storage and in memory. Has a side effect of\n         * sending mutations that were stored but not acked\n         */\n        this._onMergePendingMutations = (storageMuts, inMemoryMuts) => {\n            const ret = new Map([...storageMuts.entries(), ...inMemoryMuts.entries()]);\n            this.pendingMutations.set((_) => ret);\n            this.loadedNotifyAll();\n            const rewrittenStorageMuts = this._rewriteMutations(this.attrs, storageMuts);\n            rewrittenStorageMuts.forEach((mut, k) => {\n                if (!inMemoryMuts.has(k) && !mut[\"tx-id\"]) {\n                    this._sendMutation(k, mut);\n                }\n            });\n        };\n        // ---------------------------\n        // Queries\n        this.getPreviousResult = (q) => {\n            const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n            return this.dataForQuery(hash);\n        };\n        /** Re-run instaql and call all callbacks with new data */\n        this.notifyOne = (hash) => {\n            var _a, _b;\n            const cbs = (_a = this.queryCbs[hash]) !== null && _a !== void 0 ? _a : [];\n            const prevData = (_b = this._dataForQueryCache[hash]) === null || _b === void 0 ? void 0 : _b.data;\n            const data = this.dataForQuery(hash);\n            if (!data)\n                return;\n            if ((0,_utils_object__WEBPACK_IMPORTED_MODULE_14__.areObjectsDeepEqual)(data, prevData))\n                return;\n            cbs.forEach((r) => r.cb(data));\n        };\n        this.notifyOneQueryOnce = (hash) => {\n            var _a;\n            const dfds = (_a = this.queryOnceDfds[hash]) !== null && _a !== void 0 ? _a : [];\n            const data = this.dataForQuery(hash);\n            dfds.forEach((r) => {\n                this._completeQueryOnce(r.q, hash, r.dfd);\n                r.dfd.resolve(data);\n            });\n        };\n        this.notifyQueryError = (hash, error) => {\n            const cbs = this.queryCbs[hash] || [];\n            cbs.forEach((r) => r.cb({ error }));\n        };\n        /** Applies transactions locally and sends transact message to server */\n        this.pushTx = (chunks) => {\n            try {\n                const txSteps = _instaml__WEBPACK_IMPORTED_MODULE_3__.transform({ attrs: this.optimisticAttrs(), schema: this.config.schema }, chunks);\n                return this.pushOps(txSteps);\n            }\n            catch (e) {\n                return this.pushOps([], e);\n            }\n        };\n        /**\n         * @param {*} txSteps\n         * @param {*} [error]\n         * @returns\n         */\n        this.pushOps = (txSteps, error) => {\n            const eventId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n            const mutation = {\n                op: \"transact\",\n                \"tx-steps\": txSteps,\n                error,\n            };\n            this.pendingMutations.set((prev) => {\n                prev.set(eventId, mutation);\n                return prev;\n            });\n            const dfd = new _utils_Deferred__WEBPACK_IMPORTED_MODULE_11__.Deferred();\n            this.mutationDeferredStore.set(eventId, dfd);\n            this._sendMutation(eventId, mutation);\n            this.notifyAll();\n            return dfd.promise;\n        };\n        this._wsOnOpen = (e) => {\n            const targetWs = e.target;\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][open]\", targetWs._id, \"skip; this is no longer the current ws\");\n                return;\n            }\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][open]\", this._ws._id);\n            this._setStatus(STATUS.OPENED);\n            this.getCurrentUser().then((resp) => {\n                var _a;\n                this._trySend((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), {\n                    op: \"init\",\n                    \"app-id\": this.config.appId,\n                    \"refresh-token\": (_a = resp.user) === null || _a === void 0 ? void 0 : _a[\"refresh_token\"],\n                    versions: this.versions,\n                    // If an admin token is provided for an app, we will\n                    // skip all permission checks. This is an advanced feature,\n                    // to let users write internal tools\n                    // This option is not exposed in `Config`, as it's\n                    // not ready for prme time\n                    \"__admin-token\": this.config.__adminToken,\n                });\n            });\n        };\n        this._wsOnMessage = (e) => {\n            const targetWs = e.target;\n            const m = JSON.parse(e.data.toString());\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][message]\", targetWs._id, m, \"skip; this is no longer the current ws\");\n                return;\n            }\n            this._handleReceive(targetWs._id, JSON.parse(e.data.toString()));\n        };\n        this._wsOnError = (e) => {\n            const targetWs = e.target;\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][error]\", targetWs._id, \"skip; this is no longer the current ws\");\n                return;\n            }\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"[socket][error]\", targetWs._id, e);\n        };\n        this._wsOnClose = (e) => {\n            const targetWs = e.target;\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"skip; this is no longer the current ws\");\n                return;\n            }\n            this._setStatus(STATUS.CLOSED);\n            for (const room of Object.values(this._rooms)) {\n                room.isConnected = false;\n            }\n            if (this._isShutdown) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"Reactor has been shut down and will not reconnect\");\n                return;\n            }\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"schedule reconnect, ms =\", this._reconnectTimeoutMs);\n            setTimeout(() => {\n                this._reconnectTimeoutMs = Math.min(this._reconnectTimeoutMs + 1000, 10000);\n                if (!this._isOnline) {\n                    _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"we are offline, no need to start socket\");\n                    return;\n                }\n                this._startSocket();\n            }, this._reconnectTimeoutMs);\n        };\n        this.config = Object.assign(Object.assign({}, defaultConfig), config);\n        this.versions = Object.assign(Object.assign({}, (versions || {})), { \"@instantdb/core\": _version__WEBPACK_IMPORTED_MODULE_16__[\"default\"] });\n        if (this.config.schema) {\n            this._linkIndex = (0,_utils_linkIndex__WEBPACK_IMPORTED_MODULE_15__.createLinkIndex)(this.config.schema);\n        }\n        // This is to protect us against running\n        // server-side.\n        if (!isClient()) {\n            return;\n        }\n        if (typeof BroadcastChannel === \"function\") {\n            this._broadcastChannel = new BroadcastChannel(\"@instantdb\");\n            this._broadcastChannel.addEventListener(\"message\", (e) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                if (((_a = e.data) === null || _a === void 0 ? void 0 : _a.type) === \"auth\") {\n                    const res = yield this.getCurrentUser();\n                    this.updateUser(res.user);\n                }\n            }));\n        }\n        this._oauthCallbackResponse = this._oauthLoginInit();\n        this._initStorage(Storage);\n        // kick off a request to cache it\n        this.getCurrentUser();\n        NetworkListener.getIsOnline().then((isOnline) => {\n            this._isOnline = isOnline;\n            this._startSocket();\n            NetworkListener.listen((isOnline) => {\n                // We do this because react native's NetInfo\n                // fires multiple online events.\n                // We only want to handle one state change\n                if (isOnline === this._isOnline) {\n                    return;\n                }\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[network] online =\", isOnline);\n                this._isOnline = isOnline;\n                if (this._isOnline) {\n                    this._startSocket();\n                }\n            });\n        });\n        if (typeof addEventListener !== \"undefined\") {\n            this._beforeUnload = this._beforeUnload.bind(this);\n            addEventListener(\"beforeunload\", this._beforeUnload);\n        }\n    }\n    _initStorage(Storage) {\n        this._persister = new Storage(`instant_${this.config.appId}_5`);\n        this.querySubs = new _utils_PersistedObject__WEBPACK_IMPORTED_MODULE_12__.PersistedObject(this._persister, \"querySubs\", {}, this._onMergeQuerySubs, querySubsToJSON, querySubsFromJSON);\n        this.pendingMutations = new _utils_PersistedObject__WEBPACK_IMPORTED_MODULE_12__.PersistedObject(this._persister, \"pendingMutations\", new Map(), this._onMergePendingMutations, (x) => {\n            return JSON.stringify([...x.entries()]);\n        }, (x) => {\n            return new Map(JSON.parse(x));\n        });\n        this._beforeUnloadCbs.push(() => {\n            this.pendingMutations.flush();\n            this.querySubs.flush();\n        });\n    }\n    _beforeUnload() {\n        for (const cb of this._beforeUnloadCbs) {\n            cb();\n        }\n    }\n    /**\n     * @param {'enqueued' | 'pending' | 'synced' | 'timeout' |  'error' } status\n     * @param string clientId\n     * @param {{message?: string, hint?: string, error?: Error}} [errDetails]\n     */\n    _finishTransaction(status, clientId, errDetails) {\n        const dfd = this.mutationDeferredStore.get(clientId);\n        this.mutationDeferredStore.delete(clientId);\n        const ok = status !== \"error\" && status !== \"timeout\";\n        if (!dfd && !ok) {\n            // console.erroring here, as there are no listeners to let know\n            console.error(\"Mutation failed\", Object.assign({ status, clientId }, errDetails));\n        }\n        if (!dfd) {\n            return;\n        }\n        if (ok) {\n            dfd.resolve({ status, clientId });\n        }\n        else {\n            dfd.reject(Object.assign({ status, clientId }, errDetails));\n        }\n    }\n    _setStatus(status, err) {\n        this.status = status;\n        this._errorMessage = err;\n        this.notifyConnectionStatusSubs(status);\n    }\n    _flushEnqueuedRoomData(roomId) {\n        var _a, _b;\n        const enqueuedUserPresence = (_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b.user;\n        const enqueuedBroadcasts = this._broadcastQueue[roomId];\n        this._broadcastQueue[roomId] = [];\n        if (enqueuedUserPresence) {\n            this._trySetPresence(roomId, enqueuedUserPresence);\n        }\n        if (enqueuedBroadcasts) {\n            for (const item of enqueuedBroadcasts) {\n                const { topic, roomType, data } = item;\n                this._tryBroadcast(roomId, roomType, topic, data);\n            }\n        }\n    }\n    _handleReceive(wsId, msg) {\n        var _a, _b, _c, _d;\n        // opt-out, enabled by default if schema\n        const enableCardinalityInference = Boolean(this.config.schema) &&\n            (\"cardinalityInference\" in this.config\n                ? Boolean(this.config.cardinalityInference)\n                : true);\n        if (!ignoreLogging[msg.op]) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[receive]\", wsId, msg.op, msg);\n        }\n        switch (msg.op) {\n            case \"init-ok\":\n                this._setStatus(STATUS.AUTHENTICATED);\n                this._reconnectTimeoutMs = 0;\n                this._setAttrs(msg.attrs);\n                this._flushPendingMessages();\n                // (EPH): set session-id, so we know\n                // which item is us\n                this._sessionId = msg[\"session-id\"];\n                for (const roomId of Object.keys(this._rooms)) {\n                    this._tryJoinRoom(roomId);\n                }\n                break;\n            case \"add-query-exists\":\n                this.notifyOneQueryOnce((0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(msg.q));\n                break;\n            case \"add-query-ok\":\n                const { q, result } = msg;\n                const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n                const pageInfo = (_b = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[\"page-info\"];\n                const aggregate = (_d = (_c = result === null || result === void 0 ? void 0 : result[0]) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d[\"aggregate\"];\n                const triples = (0,_model_instaqlResult__WEBPACK_IMPORTED_MODULE_13__.extractTriples)(result);\n                const store = _store__WEBPACK_IMPORTED_MODULE_4__.createStore(this.attrs, triples, enableCardinalityInference, this._linkIndex);\n                this.querySubs.set((prev) => {\n                    prev[hash].result = { store, pageInfo, aggregate };\n                    return prev;\n                });\n                this.notifyOne(hash);\n                this.notifyOneQueryOnce(hash);\n                break;\n            case \"refresh-ok\":\n                const { computations, attrs } = msg;\n                this._setAttrs(attrs);\n                const updates = computations.map((x) => {\n                    var _a, _b, _c, _d;\n                    const q = x[\"instaql-query\"];\n                    const result = x[\"instaql-result\"];\n                    const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n                    const triples = (0,_model_instaqlResult__WEBPACK_IMPORTED_MODULE_13__.extractTriples)(result);\n                    const store = _store__WEBPACK_IMPORTED_MODULE_4__.createStore(this.attrs, triples, enableCardinalityInference, this._linkIndex);\n                    const pageInfo = (_b = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[\"page-info\"];\n                    const aggregate = (_d = (_c = result === null || result === void 0 ? void 0 : result[0]) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d[\"aggregate\"];\n                    return { hash, store, pageInfo, aggregate };\n                });\n                updates.forEach(({ hash, store, pageInfo, aggregate }) => {\n                    this.querySubs.set((prev) => {\n                        prev[hash].result = { store, pageInfo, aggregate };\n                        return prev;\n                    });\n                });\n                updates.forEach(({ hash }) => {\n                    this.notifyOne(hash);\n                });\n                break;\n            case \"transact-ok\":\n                const { \"client-event-id\": eventId, \"tx-id\": txId } = msg;\n                const muts = this._rewriteMutations(this.attrs, this.pendingMutations.currentValue);\n                const prevMutation = muts.get(eventId);\n                if (!prevMutation) {\n                    break;\n                }\n                // Now that this transaction is accepted, \n                // We can delete it from our queue. \n                this.pendingMutations.set((prev) => {\n                    prev.delete(eventId);\n                    return prev;\n                });\n                // We apply this transaction to all our existing queries\n                const txStepsToApply = prevMutation[\"tx-steps\"];\n                this.querySubs.set((prev) => {\n                    var _a;\n                    for (const [hash, sub] of Object.entries(prev)) {\n                        const store = (_a = sub === null || sub === void 0 ? void 0 : sub.result) === null || _a === void 0 ? void 0 : _a.store;\n                        if (!store) {\n                            continue;\n                        }\n                        const newStore = _store__WEBPACK_IMPORTED_MODULE_4__.transact(store, txStepsToApply);\n                        prev[hash].result.store = newStore;\n                    }\n                    return prev;\n                });\n                const newAttrs = prevMutation[\"tx-steps\"]\n                    .filter(([action, ..._args]) => action === \"add-attr\")\n                    .map(([_action, attr]) => attr)\n                    .concat(Object.values(this.attrs));\n                this._setAttrs(newAttrs);\n                this._finishTransaction(\"synced\", eventId);\n                break;\n            case \"refresh-presence\":\n                const roomId = msg[\"room-id\"];\n                this._setPresencePeers(roomId, msg.data);\n                this._notifyPresenceSubs(roomId);\n                break;\n            case \"server-broadcast\":\n                const room = msg[\"room-id\"];\n                const topic = msg.topic;\n                this._notifyBroadcastSubs(room, topic, msg);\n                break;\n            case \"join-room-ok\":\n                const loadingRoomId = msg[\"room-id\"];\n                const joinedRoom = this._rooms[loadingRoomId];\n                if (!joinedRoom) {\n                    if (this._roomsPendingLeave[loadingRoomId]) {\n                        this._tryLeaveRoom(loadingRoomId);\n                        delete this._roomsPendingLeave[loadingRoomId];\n                    }\n                    break;\n                }\n                joinedRoom.isConnected = true;\n                this._notifyPresenceSubs(loadingRoomId);\n                this._flushEnqueuedRoomData(loadingRoomId);\n                break;\n            case \"join-room-error\":\n                const errorRoomId = msg[\"room-id\"];\n                const errorRoom = this._rooms[errorRoomId];\n                if (errorRoom) {\n                    errorRoom.error = msg[\"error\"];\n                }\n                this._notifyPresenceSubs(errorRoomId);\n                break;\n            case \"error\":\n                this._handleReceiveError(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * @param {'timeout' | 'error'} status\n     * @param {string} eventId\n     * @param {{message?: string, hint?: string, error?: Error}} errDetails\n     */\n    _handleMutationError(status, eventId, errDetails) {\n        const mut = this.pendingMutations.currentValue.get(eventId);\n        if (mut && (status !== \"timeout\" || !mut[\"tx-id\"])) {\n            this.pendingMutations.set((prev) => {\n                prev.delete(eventId);\n                return prev;\n            });\n            this.notifyAll();\n            this.notifyAttrsSubs();\n            this.notifyMutationErrorSubs(errDetails);\n            this._finishTransaction(status, eventId, errDetails);\n        }\n    }\n    _handleReceiveError(msg) {\n        var _a, _b, _c, _d;\n        const eventId = msg[\"client-event-id\"];\n        const prevMutation = this.pendingMutations.currentValue.get(eventId);\n        const errorMessage = {\n            message: msg.message || \"Uh-oh, something went wrong. Ping Joe & Stopa.\",\n        };\n        if (msg.hint) {\n            errorMessage.hint = msg.hint;\n        }\n        if (prevMutation) {\n            // This must be a transaction error\n            const errDetails = {\n                message: msg.message,\n                hint: msg.hint,\n            };\n            this._handleMutationError(\"error\", eventId, errDetails);\n            return;\n        }\n        const q = (_a = msg[\"original-event\"]) === null || _a === void 0 ? void 0 : _a.q;\n        if (q && ((_b = msg[\"original-event\"]) === null || _b === void 0 ? void 0 : _b.op) === \"add-query\") {\n            const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n            this.notifyQueryError((0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q), errorMessage);\n            this.notifyQueryOnceError(q, hash, eventId, errorMessage);\n            return;\n        }\n        const isInitError = ((_c = msg[\"original-event\"]) === null || _c === void 0 ? void 0 : _c.op) === \"init\";\n        if (isInitError) {\n            if (msg.type === \"record-not-found\" &&\n                ((_d = msg.hint) === null || _d === void 0 ? void 0 : _d[\"record-type\"]) === \"app-user\") {\n                // User has been logged out\n                this.changeCurrentUser(null);\n                return;\n            }\n            // We failed to init\n            this._setStatus(STATUS.ERRORED, errorMessage);\n            this.notifyAll();\n            return;\n        }\n        // We've caught some error which has no corresponding listener.\n        // Let's console.error to let the user know.\n        const errorObj = Object.assign({}, msg);\n        delete errorObj.message;\n        delete errorObj.hint;\n        console.error(msg.message, errorObj);\n        if (msg.hint) {\n            console.error(\"This error comes with some debugging information. Here it is: \\n\", msg.hint);\n        }\n    }\n    notifyQueryOnceError(q, hash, eventId, e) {\n        var _a;\n        const r = (_a = this.queryOnceDfds[hash]) === null || _a === void 0 ? void 0 : _a.find((r) => r.eventId === eventId);\n        if (!r)\n            return;\n        r.dfd.reject(e);\n        this._completeQueryOnce(q, hash, r.dfd);\n    }\n    _setAttrs(attrs) {\n        this.attrs = attrs.reduce((acc, attr) => {\n            acc[attr.id] = attr;\n            return acc;\n        }, {});\n        this.notifyAttrsSubs();\n    }\n    _startQuerySub(q, hash) {\n        const eventId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        this.querySubs.set((prev) => {\n            prev[hash] = prev[hash] || { q, result: null, eventId };\n            return prev;\n        });\n        this._trySendAuthed(eventId, { op: \"add-query\", q });\n        return eventId;\n    }\n    /**\n     *  When a user subscribes to a query the following side effects occur:\n     *\n     *  - We update querySubs to include the new query\n     *  - We update queryCbs to include the new cb\n     *  - If we already have a result for the query we call cb immediately\n     *  - We send the server an `add-query` message\n     *\n     *  Returns an unsubscribe function\n     */\n    subscribeQuery(q, cb) {\n        var _a;\n        const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n        const prevResult = this.getPreviousResult(q);\n        if (prevResult) {\n            cb(prevResult);\n        }\n        this.queryCbs[hash] = (_a = this.queryCbs[hash]) !== null && _a !== void 0 ? _a : [];\n        this.queryCbs[hash].push({ q, cb });\n        this._startQuerySub(q, hash);\n        return () => {\n            this._unsubQuery(q, hash, cb);\n        };\n    }\n    queryOnce(q) {\n        var _a;\n        const dfd = new _utils_Deferred__WEBPACK_IMPORTED_MODULE_11__.Deferred();\n        if (!this._isOnline) {\n            dfd.reject(new Error(\"We can't run `queryOnce`, because the device is offline.\"));\n            return dfd.promise;\n        }\n        if (!this.querySubs) {\n            dfd.reject(new Error(\"We can't run `queryOnce` on the backend. Use adminAPI.query instead: https://www.instantdb.com/docs/backend#query\"));\n            return dfd.promise;\n        }\n        const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n        const eventId = this._startQuerySub(q, hash);\n        this.queryOnceDfds[hash] = (_a = this.queryOnceDfds[hash]) !== null && _a !== void 0 ? _a : [];\n        this.queryOnceDfds[hash].push({ q, dfd, eventId });\n        setTimeout(() => dfd.reject(new Error(\"Query timed out\")), QUERY_ONCE_TIMEOUT);\n        return dfd.promise;\n    }\n    _completeQueryOnce(q, hash, dfd) {\n        if (!this.queryOnceDfds[hash])\n            return;\n        this.queryOnceDfds[hash] = this.queryOnceDfds[hash].filter((r) => r.dfd !== dfd);\n        this._cleanupQuery(q, hash);\n    }\n    _unsubQuery(q, hash, cb) {\n        if (!this.queryCbs[hash])\n            return;\n        this.queryCbs[hash] = this.queryCbs[hash].filter((r) => r.cb !== cb);\n        this._cleanupQuery(q, hash);\n    }\n    _cleanupQuery(q, hash) {\n        var _a, _b;\n        const hasListeners = ((_a = this.queryCbs[hash]) === null || _a === void 0 ? void 0 : _a.length) || ((_b = this.queryOnceDfds[hash]) === null || _b === void 0 ? void 0 : _b.length);\n        if (hasListeners)\n            return;\n        delete this.queryCbs[hash];\n        delete this.queryOnceDfds[hash];\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), { op: \"remove-query\", q });\n    }\n    // When we `pushTx`, it's possible that we don't yet have `this.attrs`\n    // This means that `tx-steps` in `pendingMutations` will include `add-attr`\n    // commands for attrs that already exist.\n    //\n    // This will also affect `add-triple` and `retract-triple` which\n    // reference attr-ids that do not match the server.\n    //\n    // We fix this by rewriting `tx-steps` in each `pendingMutation`.\n    // We remove `add-attr` commands for attrs that already exist.\n    // We update `add-triple` and `retract-triple` commands to use the\n    // server attr-ids.\n    _rewriteMutations(attrs, muts) {\n        if (!attrs)\n            return muts;\n        const findExistingAttr = (attr) => {\n            const [_, etype, label] = attr[\"forward-identity\"];\n            const existing = _instaml__WEBPACK_IMPORTED_MODULE_3__.getAttrByFwdIdentName(attrs, etype, label);\n            return existing;\n        };\n        const findReverseAttr = (attr) => {\n            const [_, etype, label] = attr[\"forward-identity\"];\n            const revAttr = _instaml__WEBPACK_IMPORTED_MODULE_3__.getAttrByReverseIdentName(attrs, etype, label);\n            return revAttr;\n        };\n        const mapping = { attrIdMap: {}, refSwapAttrIds: new Set() };\n        const rewriteTxSteps = (txSteps) => {\n            const retTxSteps = [];\n            for (const txStep of txSteps) {\n                const [action] = txStep;\n                // Handles add-attr\n                // If existing, we drop it, and track it\n                // to update add/retract triples\n                if (action === \"add-attr\") {\n                    const [_action, attr] = txStep;\n                    const existing = findExistingAttr(attr);\n                    if (existing) {\n                        mapping.attrIdMap[attr.id] = existing.id;\n                        continue;\n                    }\n                    if (attr[\"value-type\"] === \"ref\") {\n                        const revAttr = findReverseAttr(attr);\n                        if (revAttr) {\n                            mapping.attrIdMap[attr.id] = revAttr.id;\n                            mapping.refSwapAttrIds.add(attr.id);\n                            continue;\n                        }\n                    }\n                }\n                // Handles add-triple|retract-triple\n                // If in mapping, we update the attr-id\n                const newTxStep = _instaml__WEBPACK_IMPORTED_MODULE_3__.rewriteStep(mapping, txStep);\n                retTxSteps.push(newTxStep);\n            }\n            return retTxSteps;\n        };\n        const rewritten = new Map();\n        for (const [k, mut] of muts.entries()) {\n            rewritten.set(k, Object.assign(Object.assign({}, mut), { \"tx-steps\": rewriteTxSteps(mut[\"tx-steps\"]) }));\n        }\n        return rewritten;\n    }\n    // ---------------------------\n    // Transact\n    optimisticAttrs() {\n        var _a;\n        const pendingMutationSteps = [\n            ...this.pendingMutations.currentValue.values(),\n        ] // hack due to Map()\n            .flatMap((x) => x[\"tx-steps\"]);\n        const deletedAttrIds = new Set(pendingMutationSteps\n            .filter(([action, _attr]) => action === \"delete-attr\")\n            .map(([_action, id]) => id));\n        const pendingAttrs = [];\n        for (const [_action, attr] of pendingMutationSteps) {\n            if (_action === \"add-attr\") {\n                pendingAttrs.push(attr);\n            }\n            else if (_action === \"update-attr\" &&\n                attr.id &&\n                ((_a = this.attrs) === null || _a === void 0 ? void 0 : _a[attr.id])) {\n                const fullAttr = Object.assign(Object.assign({}, this.attrs[attr.id]), attr);\n                pendingAttrs.push(fullAttr);\n            }\n        }\n        const attrsWithoutDeleted = [\n            ...Object.values(this.attrs || {}),\n            ...pendingAttrs,\n        ].filter((a) => !deletedAttrIds.has(a.id));\n        const attrsRecord = Object.fromEntries(attrsWithoutDeleted.map((a) => [a.id, a]));\n        return attrsRecord;\n    }\n    /** Runs instaql on a query and a store */\n    dataForQuery(hash) {\n        const errorMessage = this._errorMessage;\n        if (errorMessage) {\n            return { error: errorMessage };\n        }\n        if (!this.querySubs)\n            return;\n        if (!this.pendingMutations)\n            return;\n        const querySubVersion = this.querySubs.version();\n        const querySubs = this.querySubs.currentValue;\n        const pendingMutationsVersion = this.pendingMutations.version();\n        const pendingMutations = this.pendingMutations.currentValue;\n        const { q, result } = querySubs[hash] || {};\n        if (!result)\n            return;\n        const cached = this._dataForQueryCache[hash];\n        if (cached &&\n            querySubVersion === cached.querySubVersion &&\n            pendingMutationsVersion === cached.pendingMutationsVersion) {\n            return cached.data;\n        }\n        const { store, pageInfo, aggregate } = result;\n        const muts = this._rewriteMutations(store.attrs, pendingMutations);\n        const txSteps = [...muts.values()].flatMap((x) => x[\"tx-steps\"]);\n        const newStore = _store__WEBPACK_IMPORTED_MODULE_4__.transact(store, txSteps);\n        const resp = (0,_instaql__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({ store: newStore, pageInfo, aggregate }, q);\n        this._dataForQueryCache[hash] = {\n            querySubVersion,\n            pendingMutationsVersion,\n            data: resp,\n        };\n        return resp;\n    }\n    /** Re-compute all subscriptions */\n    notifyAll() {\n        Object.keys(this.queryCbs).forEach((hash) => {\n            this.notifyOne(hash);\n        });\n    }\n    loadedNotifyAll() {\n        if (this.pendingMutations.isLoading() || this.querySubs.isLoading())\n            return;\n        this.notifyAll();\n    }\n    shutdown() {\n        this._isShutdown = true;\n        this._ws.close();\n    }\n    /**\n     * Sends mutation to server and schedules a timeout to cancel it if\n     * we don't hear back in time.\n     * Note: If we're offline we don't schedule a timeout, we'll schedule it\n     * later once we're back online and send the mutation again\n     *\n     */\n    _sendMutation(eventId, mutation) {\n        if (mutation.error) {\n            this._handleMutationError(\"error\", eventId, {\n                error: mutation.error,\n                message: mutation.error.message,\n            });\n            return;\n        }\n        if (this.status !== STATUS.AUTHENTICATED) {\n            this._finishTransaction(\"enqueued\", eventId);\n            return;\n        }\n        const timeoutMs = Math.max(5000, this.pendingMutations.currentValue.size * 5000);\n        if (!this._isOnline) {\n            this._finishTransaction(\"enqueued\", eventId);\n        }\n        else {\n            this._trySend(eventId, mutation);\n            // If a transaction is pending for over 3 seconds,\n            // we want to unblock the UX, so mark it as pending\n            // and keep trying to process the transaction in the background\n            setTimeout(() => {\n                this._finishTransaction(\"pending\", eventId);\n            }, 3000);\n            setTimeout(() => {\n                if (!this._isOnline) {\n                    return;\n                }\n                // If we are here, this means that we have sent this mutation, we are online\n                // but we have not received a response. If it's this long, something must be wrong,\n                // so we error with a timeout.\n                this._handleMutationError(\"timeout\", eventId, {\n                    message: \"transaction timed out\",\n                });\n            }, timeoutMs);\n        }\n    }\n    // ---------------------------\n    // Websocket\n    /** Send messages we accumulated while we were connecting */\n    _flushPendingMessages() {\n        const subs = Object.keys(this.queryCbs).map((hash) => {\n            return this.querySubs.currentValue[hash];\n        });\n        // Note: we should not have any nulls in subs, but we're\n        // doing this defensively just in case.\n        const safeSubs = subs.filter((x) => x);\n        safeSubs.forEach(({ eventId, q }) => {\n            this._trySendAuthed(eventId, { op: \"add-query\", q });\n        });\n        Object.values(this.queryOnceDfds)\n            .flat()\n            .forEach(({ eventId, q }) => {\n            this._trySendAuthed(eventId, { op: \"add-query\", q });\n        });\n        const muts = this._rewriteMutations(this.attrs, this.pendingMutations.currentValue);\n        muts.forEach((mut, eventId) => {\n            if (!mut[\"tx-id\"]) {\n                this._sendMutation(eventId, mut);\n            }\n        });\n    }\n    _trySendAuthed(...args) {\n        if (this.status !== STATUS.AUTHENTICATED) {\n            return;\n        }\n        this._trySend(...args);\n    }\n    _trySend(eventId, msg, opts) {\n        if (this._ws.readyState !== WS_OPEN_STATUS) {\n            return;\n        }\n        if (!ignoreLogging[msg.op]) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[send]\", this._ws._id, msg.op, msg);\n        }\n        this._ws.send(JSON.stringify(Object.assign({ \"client-event-id\": eventId }, msg)));\n    }\n    _startSocket() {\n        if (this._ws && this._ws.readyState == WS_CONNECTING_STATUS) {\n            // Our current websocket is in a 'connecting' state.\n            // There's no need to start another one, as the socket is\n            // effectively fresh.\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][start]\", this._ws._id, \"maintained as current ws, we were still in a connecting state\");\n            return;\n        }\n        const prevWs = this._ws;\n        this._ws = createWebSocket(`${this.config.websocketURI}?app_id=${this.config.appId}`);\n        this._ws.onopen = this._wsOnOpen;\n        this._ws.onmessage = this._wsOnMessage;\n        this._ws.onclose = this._wsOnClose;\n        this._ws.onerror = this._wsOnError;\n        _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][start]\", this._ws._id);\n        if ((prevWs === null || prevWs === void 0 ? void 0 : prevWs.readyState) === WS_OPEN_STATUS) {\n            // When the network dies, it doesn't always mean that our\n            // socket connection will fire a close event.\n            //\n            // We _could_ re-use the old socket, if the network drop was a\n            // few seconds. But, to be safe right now we always create a new socket.\n            //\n            // This means that we have to make sure to kill the previous one ourselves.\n            // c.f https://issues.chromium.org/issues/41343684\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][start]\", this._ws._id, \"close previous ws id = \", prevWs._id);\n            prevWs.close();\n        }\n    }\n    /**\n     * Given a key, returns a stable local id, unique to this device and app.\n     *\n     * This can be useful if you want to create guest ids for example.\n     *\n     * Note: If the user deletes their local storage, this id will change.\n     *\n     * We use this._localIdPromises to ensure that we only generate a local\n     * id once, even if multiple callers call this function concurrently.\n     */\n    getLocalId(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const k = `localToken_${name}`;\n            const id = yield this._persister.getItem(k);\n            if (id)\n                return id;\n            if (this._localIdPromises[k]) {\n                return this._localIdPromises[k];\n            }\n            const newId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n            this._localIdPromises[k] = this._persister\n                .setItem(k, newId)\n                .then(() => newId);\n            return this._localIdPromises[k];\n        });\n    }\n    // ----\n    // Auth\n    _replaceUrlAfterOAuth() {\n        if (typeof URL === \"undefined\") {\n            return;\n        }\n        const url = new URL(window.location.href);\n        if (url.searchParams.get(OAUTH_REDIRECT_PARAM)) {\n            const startUrl = url.toString();\n            url.searchParams.delete(OAUTH_REDIRECT_PARAM);\n            url.searchParams.delete(\"code\");\n            url.searchParams.delete(\"error\");\n            const newPath = url.pathname +\n                (url.searchParams.size ? \"?\" + url.searchParams : \"\") +\n                url.hash;\n            // Note: In next.js, this will revert to the old state if user navigates\n            //       back. We would need to allow framework specific routing to work\n            //       around that problem.\n            history.replaceState(history.state, \"\", newPath);\n            // navigation is part of the HTML spec, but not supported by Safari\n            // or Firefox yet:\n            // https://developer.mozilla.org/en-US/docs/Web/API/Navigation_API#browser_compatibility\n            if (\n            // @ts-ignore (waiting for ts support)\n            typeof navigation === \"object\" &&\n                // @ts-ignore (waiting for ts support)\n                typeof navigation.addEventListener === \"function\" &&\n                // @ts-ignore (waiting for ts support)\n                typeof navigation.removeEventListener === \"function\") {\n                let ran = false;\n                // The next.js app router will reset the URL when the router loads.\n                // This puts it back after the router loads.\n                const listener = (e) => {\n                    var _a;\n                    if (!ran) {\n                        ran = true;\n                        // @ts-ignore (waiting for ts support)\n                        navigation.removeEventListener(\"navigate\", listener);\n                        if (!e.userInitiated &&\n                            e.navigationType === \"replace\" &&\n                            ((_a = e.destination) === null || _a === void 0 ? void 0 : _a.url) === startUrl) {\n                            history.replaceState(history.state, \"\", newPath);\n                        }\n                    }\n                };\n                // @ts-ignore (waiting for ts support)\n                navigation.addEventListener(\"navigate\", listener);\n            }\n        }\n    }\n    /**\n     *\n     * @returns Promise<null | {error: {message: string}}>\n     */\n    _oauthLoginInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            if (typeof window === \"undefined\" ||\n                typeof window.location === \"undefined\" ||\n                typeof URLSearchParams === \"undefined\") {\n                return null;\n            }\n            const params = new URLSearchParams(window.location.search);\n            if (!params.get(OAUTH_REDIRECT_PARAM)) {\n                return null;\n            }\n            const error = params.get(\"error\");\n            if (error) {\n                this._replaceUrlAfterOAuth();\n                return { error: { message: error } };\n            }\n            const code = params.get(\"code\");\n            if (!code) {\n                return null;\n            }\n            this._replaceUrlAfterOAuth();\n            try {\n                const { user } = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.exchangeCodeForToken({\n                    apiURI: this.config.apiURI,\n                    appId: this.config.appId,\n                    code,\n                });\n                this.setCurrentUser(user);\n                return null;\n            }\n            catch (e) {\n                if (((_a = e === null || e === void 0 ? void 0 : e.body) === null || _a === void 0 ? void 0 : _a.type) === \"record-not-found\" &&\n                    ((_c = (_b = e === null || e === void 0 ? void 0 : e.body) === null || _b === void 0 ? void 0 : _b.hint) === null || _c === void 0 ? void 0 : _c[\"record-type\"]) === \"app-oauth-code\" &&\n                    (yield this._hasCurrentUser())) {\n                    // We probably just weren't able to clean up the URL, so\n                    // let's just ignore this error\n                    return null;\n                }\n                const message = ((_d = e === null || e === void 0 ? void 0 : e.body) === null || _d === void 0 ? void 0 : _d.message) || \"Error logging in.\";\n                return { error: { message } };\n            }\n        });\n    }\n    _waitForOAuthCallbackResponse() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this._oauthCallbackResponse;\n        });\n    }\n    __subscribeMutationErrors(cb) {\n        this.mutationErrorCbs.push(cb);\n        return () => {\n            this.mutationErrorCbs = this.mutationErrorCbs.filter((x) => x !== cb);\n        };\n    }\n    subscribeAuth(cb) {\n        this.authCbs.push(cb);\n        const currUserCached = this._currentUserCached;\n        if (!currUserCached.isLoading) {\n            cb(this._currentUserCached);\n        }\n        let unsubbed = false;\n        this.getCurrentUser().then((resp) => {\n            if (unsubbed)\n                return;\n            if ((0,_utils_object__WEBPACK_IMPORTED_MODULE_14__.areObjectsDeepEqual)(resp, currUserCached))\n                return;\n            cb(resp);\n        });\n        return () => {\n            unsubbed = true;\n            this.authCbs = this.authCbs.filter((x) => x !== cb);\n        };\n    }\n    subscribeConnectionStatus(cb) {\n        this.connectionStatusCbs.push(cb);\n        return () => {\n            this.connectionStatusCbs = this.connectionStatusCbs.filter((x) => x !== cb);\n        };\n    }\n    subscribeAttrs(cb) {\n        this.attrsCbs.push(cb);\n        if (this.attrs) {\n            cb(this.attrs);\n        }\n        return () => {\n            this.attrsCbs = this.attrsCbs.filter((x) => x !== cb);\n        };\n    }\n    notifyAuthSubs(user) {\n        this.authCbs.forEach((cb) => cb(user));\n    }\n    notifyMutationErrorSubs(error) {\n        this.mutationErrorCbs.forEach((cb) => cb(error));\n    }\n    notifyAttrsSubs() {\n        if (!this.attrs)\n            return;\n        const oas = this.optimisticAttrs();\n        this.attrsCbs.forEach((cb) => cb(oas));\n    }\n    notifyConnectionStatusSubs(status) {\n        this.connectionStatusCbs.forEach((cb) => cb(status));\n    }\n    setCurrentUser(user) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._persister.setItem(currentUserKey, JSON.stringify(user));\n        });\n    }\n    getCurrentUserCached() {\n        return this._currentUserCached;\n    }\n    getCurrentUser() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const oauthResp = yield this._waitForOAuthCallbackResponse();\n            if (oauthResp === null || oauthResp === void 0 ? void 0 : oauthResp.error) {\n                const errorV = { error: oauthResp.error, user: undefined };\n                this._currentUserCached = Object.assign({ isLoading: false }, errorV);\n                return errorV;\n            }\n            const user = yield this._persister.getItem(currentUserKey);\n            const userV = { user: JSON.parse(user), error: undefined };\n            this._currentUserCached = Object.assign({ isLoading: false }, userV);\n            return userV;\n        });\n    }\n    _hasCurrentUser() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const user = yield this._persister.getItem(currentUserKey);\n            return JSON.parse(user) != null;\n        });\n    }\n    changeCurrentUser(newUser) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const { user: oldUser } = yield this.getCurrentUser();\n            if ((0,_utils_object__WEBPACK_IMPORTED_MODULE_14__.areObjectsDeepEqual)(oldUser, newUser)) {\n                // We were already logged in as the newUser, don't\n                // bother updating\n                return;\n            }\n            yield this.setCurrentUser(newUser);\n            // We need to remove all `result` from querySubs,\n            // as they are no longer valid for the new user\n            this.updateUser(newUser);\n            try {\n                (_a = this._broadcastChannel) === null || _a === void 0 ? void 0 : _a.postMessage({ type: \"auth\" });\n            }\n            catch (error) {\n                console.error(\"Error posting message to broadcast channel\", error);\n            }\n        });\n    }\n    updateUser(newUser) {\n        const newV = { error: undefined, user: newUser };\n        this._currentUserCached = Object.assign({ isLoading: false }, newV);\n        this._dataForQueryCache = {};\n        this.querySubs.set((prev) => {\n            Object.keys(prev).forEach((k) => {\n                delete prev[k].result;\n            });\n            return prev;\n        });\n        this._reconnectTimeoutMs = 0;\n        this._ws.close();\n        this._oauthCallbackResponse = null;\n        this.notifyAuthSubs(newV);\n    }\n    sendMagicCode({ email }) {\n        return _authAPI__WEBPACK_IMPORTED_MODULE_8__.sendMagicCode({\n            apiURI: this.config.apiURI,\n            appId: this.config.appId,\n            email: email,\n        });\n    }\n    signInWithMagicCode(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ email, code }) {\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.verifyMagicCode({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                email,\n                code,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    signInWithCustomToken(authToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.verifyRefreshToken({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                refreshToken: authToken,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    signOut() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            if (refreshToken) {\n                try {\n                    yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.signOut({\n                        apiURI: this.config.apiURI,\n                        appId: this.config.appId,\n                        refreshToken,\n                    });\n                }\n                catch (e) { }\n            }\n            yield this.changeCurrentUser(null);\n        });\n    }\n    /**\n     * Creates an OAuth authorization URL.\n     * @param {Object} params - The parameters to create the authorization URL.\n     * @param {string} params.clientName - The name of the client requesting authorization.\n     * @param {string} params.redirectURL - The URL to redirect users to after authorization.\n     * @returns {string} The created authorization URL.\n     */\n    createAuthorizationURL({ clientName, redirectURL }) {\n        const { apiURI, appId } = this.config;\n        return `${apiURI}/runtime/oauth/start?app_id=${appId}&client_name=${clientName}&redirect_uri=${redirectURL}`;\n    }\n    exchangeCodeForToken(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ code, codeVerifier }) {\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.exchangeCodeForToken({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                code: code,\n                codeVerifier,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    issuerURI() {\n        const { apiURI, appId } = this.config;\n        return `${apiURI}/runtime/${appId}`;\n    }\n    /**\n     * @param {Object} params\n     * @param {string} params.clientName - The name of the client requesting authorization.\n     * @param {string} params.idToken - The id_token from the external service\n     * @param {string | null | undefined} [params.nonce] - The nonce used when requesting the id_token from the external service\n     */\n    signInWithIdToken(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ idToken, clientName, nonce }) {\n            var _b;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_b = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _b === void 0 ? void 0 : _b.refresh_token;\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.signInWithIdToken({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                idToken,\n                clientName,\n                nonce,\n                refreshToken,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    // --------\n    // Rooms\n    joinRoom(roomId) {\n        if (!this._rooms[roomId]) {\n            this._rooms[roomId] = {\n                isConnected: false,\n                error: undefined,\n            };\n        }\n        this._presence[roomId] = this._presence[roomId] || {};\n        this._tryJoinRoom(roomId);\n        return () => {\n            this._cleanupRoom(roomId);\n        };\n    }\n    _cleanupRoom(roomId) {\n        var _a, _b, _c, _d;\n        if (!((_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.handlers) === null || _b === void 0 ? void 0 : _b.length) &&\n            !Object.keys((_c = this._broadcastSubs[roomId]) !== null && _c !== void 0 ? _c : {}).length) {\n            const isConnected = (_d = this._rooms[roomId]) === null || _d === void 0 ? void 0 : _d.isConnected;\n            delete this._rooms[roomId];\n            delete this._presence[roomId];\n            delete this._broadcastSubs[roomId];\n            if (isConnected) {\n                this._tryLeaveRoom(roomId);\n            }\n            else {\n                this._roomsPendingLeave[roomId] = true;\n            }\n        }\n    }\n    // --------\n    // Presence\n    // TODO: look into typing again\n    getPresence(roomType, roomId, opts = {}) {\n        const room = this._rooms[roomId];\n        const presence = this._presence[roomId];\n        if (!room || !presence || !presence.result)\n            return null;\n        return Object.assign(Object.assign({}, (0,_presence__WEBPACK_IMPORTED_MODULE_10__.buildPresenceSlice)(presence.result, opts, this._sessionId)), { isLoading: !room.isConnected, error: room.error });\n    }\n    // TODO: look into typing again\n    publishPresence(roomType, roomId, partialData) {\n        const room = this._rooms[roomId];\n        const presence = this._presence[roomId];\n        if (!room || !presence) {\n            return;\n        }\n        presence.result = presence.result || {};\n        const data = Object.assign(Object.assign({}, presence.result.user), partialData);\n        presence.result.user = data;\n        if (!room.isConnected) {\n            return;\n        }\n        this._trySetPresence(roomId, data);\n        this._notifyPresenceSubs(roomId);\n    }\n    _trySetPresence(roomId, data) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), {\n            op: \"set-presence\",\n            \"room-id\": roomId,\n            data,\n        });\n    }\n    _tryJoinRoom(roomId) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), { op: \"join-room\", \"room-id\": roomId });\n        delete this._roomsPendingLeave[roomId];\n    }\n    _tryLeaveRoom(roomId) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), { op: \"leave-room\", \"room-id\": roomId });\n    }\n    // TODO: look into typing again\n    subscribePresence(roomType, roomId, opts, cb) {\n        const leaveRoom = this.joinRoom(roomId);\n        const handler = Object.assign(Object.assign({}, opts), { roomId, cb, prev: null });\n        this._presence[roomId] = this._presence[roomId] || {};\n        this._presence[roomId].handlers = this._presence[roomId].handlers || [];\n        this._presence[roomId].handlers.push(handler);\n        this._notifyPresenceSub(roomId, handler);\n        return () => {\n            var _a, _b, _c;\n            this._presence[roomId].handlers =\n                (_c = (_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.handlers) === null || _b === void 0 ? void 0 : _b.filter((x) => x !== handler)) !== null && _c !== void 0 ? _c : [];\n            leaveRoom();\n        };\n    }\n    _notifyPresenceSubs(roomId) {\n        var _a, _b;\n        (_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.handlers) === null || _b === void 0 ? void 0 : _b.forEach((handler) => {\n            this._notifyPresenceSub(roomId, handler);\n        });\n    }\n    _notifyPresenceSub(roomId, handler) {\n        const slice = this.getPresence(\"\", roomId, handler);\n        if (!slice) {\n            return;\n        }\n        if (handler.prev && !(0,_presence__WEBPACK_IMPORTED_MODULE_10__.hasPresenceResponseChanged)(slice, handler.prev)) {\n            return;\n        }\n        handler.prev = slice;\n        handler.cb(slice);\n    }\n    _setPresencePeers(roomId, data) {\n        const sessions = Object.assign({}, data);\n        // no need to keep track of `user`\n        delete sessions[this._sessionId];\n        const peers = Object.fromEntries(Object.entries(sessions).map(([k, v]) => [k, v.data]));\n        this._presence[roomId] = this._presence[roomId] || {};\n        this._presence[roomId].result = this._presence[roomId].result || {};\n        this._presence[roomId].result.peers = peers;\n    }\n    // --------\n    // Broadcast\n    publishTopic({ roomType, roomId, topic, data }) {\n        var _a;\n        const room = this._rooms[roomId];\n        if (!room) {\n            return;\n        }\n        if (!room.isConnected) {\n            this._broadcastQueue[roomId] = (_a = this._broadcastQueue[roomId]) !== null && _a !== void 0 ? _a : [];\n            this._broadcastQueue[roomId].push({ topic, roomType, data });\n            return;\n        }\n        this._tryBroadcast(roomId, roomType, topic, data);\n    }\n    _tryBroadcast(roomId, roomType, topic, data) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), {\n            op: \"client-broadcast\",\n            \"room-id\": roomId,\n            roomType,\n            topic,\n            data,\n        });\n    }\n    subscribeTopic(roomId, topic, cb) {\n        const leaveRoom = this.joinRoom(roomId);\n        this._broadcastSubs[roomId] = this._broadcastSubs[roomId] || {};\n        this._broadcastSubs[roomId][topic] =\n            this._broadcastSubs[roomId][topic] || [];\n        this._broadcastSubs[roomId][topic].push(cb);\n        this._presence[roomId] = this._presence[roomId] || {};\n        return () => {\n            this._broadcastSubs[roomId][topic] = this._broadcastSubs[roomId][topic].filter((x) => x !== cb);\n            if (!this._broadcastSubs[roomId][topic].length) {\n                delete this._broadcastSubs[roomId][topic];\n            }\n            leaveRoom();\n        };\n    }\n    _notifyBroadcastSubs(room, topic, msg) {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this._broadcastSubs) === null || _a === void 0 ? void 0 : _a[room]) === null || _b === void 0 ? void 0 : _b[topic]) === null || _c === void 0 ? void 0 : _c.forEach((cb) => {\n            var _a, _b, _c, _d, _e, _f;\n            const data = (_a = msg.data) === null || _a === void 0 ? void 0 : _a.data;\n            const peer = msg.data[\"peer-id\"] === this._sessionId\n                ? (_c = (_b = this._presence[room]) === null || _b === void 0 ? void 0 : _b.result) === null || _c === void 0 ? void 0 : _c.user\n                : (_f = (_e = (_d = this._presence[room]) === null || _d === void 0 ? void 0 : _d.result) === null || _e === void 0 ? void 0 : _e.peers) === null || _f === void 0 ? void 0 : _f[msg.data[\"peer-id\"]];\n            return cb(data, peer);\n        });\n    }\n    // --------\n    // Storage\n    upload(path, file) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            const fileName = path || file.name;\n            const url = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.getSignedUploadUrl({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                fileName: fileName,\n                refreshToken: refreshToken,\n            });\n            const isSuccess = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.upload(url, file);\n            return isSuccess;\n        });\n    }\n    getDownloadUrl(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            const url = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.getDownloadUrl({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                path: path,\n                refreshToken: refreshToken,\n            });\n            return url;\n        });\n    }\n    deleteFile(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            const result = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.deleteFile({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                path: path,\n                refreshToken: refreshToken,\n            });\n            return result;\n        });\n    }\n}\n//# sourceMappingURL=Reactor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/Reactor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/StorageAPI.js":
/*!****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/StorageAPI.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteFile: () => (/* binding */ deleteFile),\n/* harmony export */   getDownloadUrl: () => (/* binding */ getDownloadUrl),\n/* harmony export */   getSignedUploadUrl: () => (/* binding */ getSignedUploadUrl),\n/* harmony export */   upload: () => (/* binding */ upload)\n/* harmony export */ });\n/* harmony import */ var _utils_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/fetch */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction getSignedUploadUrl(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, fileName, refreshToken, metadata = {}, }) {\n        const { data } = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/storage/signed-upload-url`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                authorization: `Bearer ${refreshToken}`,\n            },\n            body: JSON.stringify({\n                app_id: appId,\n                filename: fileName,\n            }),\n        });\n        return data;\n    });\n}\nfunction upload(presignedUrl, file) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield fetch(presignedUrl, {\n            method: \"PUT\",\n            body: file,\n            headers: {\n                \"Content-Type\": file.type,\n            },\n        });\n        return response.ok;\n    });\n}\nfunction getDownloadUrl(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, path, refreshToken, }) {\n        const { data } = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/storage/signed-download-url?app_id=${appId}&filename=${encodeURIComponent(path)}`, {\n            method: \"GET\",\n            headers: {\n                \"content-type\": \"application/json\",\n                authorization: `Bearer ${refreshToken}`,\n            },\n        });\n        return data;\n    });\n}\nfunction deleteFile(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, path, refreshToken, }) {\n        const { data } = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/storage/files?app_id=${appId}&filename=${encodeURIComponent(path)}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n                authorization: `Bearer ${refreshToken}`,\n            },\n        });\n        return data;\n    });\n}\n//# sourceMappingURL=StorageAPI.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL1N0b3JhZ2VBUEkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDMEM7QUFDbkM7QUFDUCwyREFBMkQsb0RBQW9ELEdBQUc7QUFDbEgsZ0JBQWdCLE9BQU8sUUFBUSx1REFBUyxJQUFJLE9BQU87QUFDbkQ7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGFBQWE7QUFDdEQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQLDJEQUEyRCxvQ0FBb0M7QUFDL0YsZ0JBQWdCLE9BQU8sUUFBUSx1REFBUyxJQUFJLE9BQU8sc0NBQXNDLE1BQU0sWUFBWSx5QkFBeUI7QUFDcEk7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGFBQWE7QUFDdEQsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsMkRBQTJELG9DQUFvQztBQUMvRixnQkFBZ0IsT0FBTyxRQUFRLHVEQUFTLElBQUksT0FBTyx3QkFBd0IsTUFBTSxZQUFZLHlCQUF5QjtBQUN0SDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsYUFBYTtBQUN0RCxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxTdG9yYWdlQVBJLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IHsganNvbkZldGNoIH0gZnJvbSBcIi4vdXRpbHMvZmV0Y2hcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZXRTaWduZWRVcGxvYWRVcmwoX2EpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIGFyZ3VtZW50cywgdm9pZCAwLCBmdW5jdGlvbiogKHsgYXBpVVJJLCBhcHBJZCwgZmlsZU5hbWUsIHJlZnJlc2hUb2tlbiwgbWV0YWRhdGEgPSB7fSwgfSkge1xuICAgICAgICBjb25zdCB7IGRhdGEgfSA9IHlpZWxkIGpzb25GZXRjaChgJHthcGlVUkl9L3N0b3JhZ2Uvc2lnbmVkLXVwbG9hZC11cmxgLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtyZWZyZXNoVG9rZW59YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgYXBwX2lkOiBhcHBJZCxcbiAgICAgICAgICAgICAgICBmaWxlbmFtZTogZmlsZU5hbWUsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVwbG9hZChwcmVzaWduZWRVcmwsIGZpbGUpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGZldGNoKHByZXNpZ25lZFVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgICAgICAgYm9keTogZmlsZSxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBmaWxlLnR5cGUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLm9rO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERvd25sb2FkVXJsKF9hKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qICh7IGFwaVVSSSwgYXBwSWQsIHBhdGgsIHJlZnJlc2hUb2tlbiwgfSkge1xuICAgICAgICBjb25zdCB7IGRhdGEgfSA9IHlpZWxkIGpzb25GZXRjaChgJHthcGlVUkl9L3N0b3JhZ2Uvc2lnbmVkLWRvd25sb2FkLXVybD9hcHBfaWQ9JHthcHBJZH0mZmlsZW5hbWU9JHtlbmNvZGVVUklDb21wb25lbnQocGF0aCl9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtyZWZyZXNoVG9rZW59YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVGaWxlKF9hKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qICh7IGFwaVVSSSwgYXBwSWQsIHBhdGgsIHJlZnJlc2hUb2tlbiwgfSkge1xuICAgICAgICBjb25zdCB7IGRhdGEgfSA9IHlpZWxkIGpzb25GZXRjaChgJHthcGlVUkl9L3N0b3JhZ2UvZmlsZXM/YXBwX2lkPSR7YXBwSWR9JmZpbGVuYW1lPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHBhdGgpfWAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICBhdXRob3JpemF0aW9uOiBgQmVhcmVyICR7cmVmcmVzaFRva2VufWAsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdG9yYWdlQVBJLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/StorageAPI.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WindowNetworkListener)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass WindowNetworkListener {\n    static getIsOnline() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return navigator.onLine;\n        });\n    }\n    static listen(f) {\n        const onOnline = () => {\n            f(true);\n        };\n        const onOffline = () => {\n            f(false);\n        };\n        addEventListener(\"online\", onOnline);\n        addEventListener(\"offline\", onOffline);\n        return () => {\n            removeEventListener(\"online\", onOnline);\n            removeEventListener(\"offline\", onOffline);\n        };\n    }\n}\n//# sourceMappingURL=WindowNetworkListener.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL1dpbmRvd05ldHdvcmtMaXN0ZW5lci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXFdpbmRvd05ldHdvcmtMaXN0ZW5lci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdpbmRvd05ldHdvcmtMaXN0ZW5lciB7XG4gICAgc3RhdGljIGdldElzT25saW5lKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5hdmlnYXRvci5vbkxpbmU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgbGlzdGVuKGYpIHtcbiAgICAgICAgY29uc3Qgb25PbmxpbmUgPSAoKSA9PiB7XG4gICAgICAgICAgICBmKHRydWUpO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBvbk9mZmxpbmUgPSAoKSA9PiB7XG4gICAgICAgICAgICBmKGZhbHNlKTtcbiAgICAgICAgfTtcbiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBvbk9ubGluZSk7XG4gICAgICAgIGFkZEV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9uT2ZmbGluZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICByZW1vdmVFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9uT25saW5lKTtcbiAgICAgICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9uT2ZmbGluZSk7XG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9V2luZG93TmV0d29ya0xpc3RlbmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/authAPI.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/authAPI.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exchangeCodeForToken: () => (/* binding */ exchangeCodeForToken),\n/* harmony export */   sendMagicCode: () => (/* binding */ sendMagicCode),\n/* harmony export */   signInWithIdToken: () => (/* binding */ signInWithIdToken),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   verifyMagicCode: () => (/* binding */ verifyMagicCode),\n/* harmony export */   verifyRefreshToken: () => (/* binding */ verifyRefreshToken)\n/* harmony export */ });\n/* harmony import */ var _utils_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/fetch */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction sendMagicCode({ apiURI, appId, email }) {\n    return (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/auth/send_magic_code`, {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({ \"app-id\": appId, email }),\n    });\n}\nfunction verifyMagicCode(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, email, code }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/auth/verify_magic_code`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({ \"app-id\": appId, email, code }),\n        });\n        return res;\n    });\n}\nfunction verifyRefreshToken(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, refreshToken }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/auth/verify_refresh_token`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({\n                \"app-id\": appId,\n                \"refresh-token\": refreshToken,\n            }),\n        });\n        return res;\n    });\n}\n/**\n * @param {Object} params\n * @param {string} params.apiURI\n * @param {string} params.appId\n * @param {string} params.code\n * @param {string | null | undefined} [params.codeVerifier]\n */\nfunction exchangeCodeForToken(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, code, codeVerifier, }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/oauth/token`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({\n                app_id: appId,\n                code: code,\n                code_verifier: codeVerifier,\n            }),\n        });\n        return res;\n    });\n}\n/**\n * @param {Object} params\n * @param {string} params.apiURI\n * @param {string} params.appId\n * @param {string} params.clientName\n * @param {string} params.idToken\n * @param {string | null | undefined} [params.refreshToken]\n * @param {string | null | undefined} [params.nonce]\n */\nfunction signInWithIdToken(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, nonce, idToken, clientName, refreshToken, }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/oauth/id_token`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({\n                app_id: appId,\n                nonce,\n                id_token: idToken,\n                client_name: clientName,\n                refresh_token: refreshToken,\n            }),\n        });\n        return res;\n    });\n}\n/**\n * @param {Object} params\n * @param {string} params.apiURI\n * @param {string} params.appId\n * @param {string} params.refreshToken\n */\nfunction signOut(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, refreshToken }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/signout`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                app_id: appId,\n                refresh_token: refreshToken,\n            }),\n        });\n        return res;\n    });\n}\n//# sourceMappingURL=authAPI.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2F1dGhBUEkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUMwQztBQUNuQyx5QkFBeUIsc0JBQXNCO0FBQ3RELFdBQVcsdURBQVMsSUFBSSxPQUFPO0FBQy9CO0FBQ0EsbUJBQW1CLG9DQUFvQztBQUN2RCwrQkFBK0Isd0JBQXdCO0FBQ3ZELEtBQUs7QUFDTDtBQUNPO0FBQ1AsMkRBQTJELDRCQUE0QjtBQUN2RiwwQkFBMEIsdURBQVMsSUFBSSxPQUFPO0FBQzlDO0FBQ0EsdUJBQXVCLG9DQUFvQztBQUMzRCxtQ0FBbUMsOEJBQThCO0FBQ2pFLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsMkRBQTJELDZCQUE2QjtBQUN4RiwwQkFBMEIsdURBQVMsSUFBSSxPQUFPO0FBQzlDO0FBQ0EsdUJBQXVCLG9DQUFvQztBQUMzRDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVywyQkFBMkI7QUFDdEM7QUFDTztBQUNQLDJEQUEyRCxvQ0FBb0M7QUFDL0YsMEJBQTBCLHVEQUFTLElBQUksT0FBTztBQUM5QztBQUNBLHVCQUF1QixvQ0FBb0M7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsMkJBQTJCO0FBQ3RDLFdBQVcsMkJBQTJCO0FBQ3RDO0FBQ087QUFDUCwyREFBMkQsMERBQTBEO0FBQ3JILDBCQUEwQix1REFBUyxJQUFJLE9BQU87QUFDOUM7QUFDQSx1QkFBdUIsb0NBQW9DO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1AsMkRBQTJELDZCQUE2QjtBQUN4RiwwQkFBMEIsdURBQVMsSUFBSSxPQUFPO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxhdXRoQVBJLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IHsganNvbkZldGNoIH0gZnJvbSBcIi4vdXRpbHMvZmV0Y2hcIjtcbmV4cG9ydCBmdW5jdGlvbiBzZW5kTWFnaWNDb2RlKHsgYXBpVVJJLCBhcHBJZCwgZW1haWwgfSkge1xuICAgIHJldHVybiBqc29uRmV0Y2goYCR7YXBpVVJJfS9ydW50aW1lL2F1dGgvc2VuZF9tYWdpY19jb2RlYCwge1xuICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICBoZWFkZXJzOiB7IFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgXCJhcHAtaWRcIjogYXBwSWQsIGVtYWlsIH0pLFxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZlcmlmeU1hZ2ljQ29kZShfYSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgYXJndW1lbnRzLCB2b2lkIDAsIGZ1bmN0aW9uKiAoeyBhcGlVUkksIGFwcElkLCBlbWFpbCwgY29kZSB9KSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIGpzb25GZXRjaChgJHthcGlVUkl9L3J1bnRpbWUvYXV0aC92ZXJpZnlfbWFnaWNfY29kZWAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IFwiYXBwLWlkXCI6IGFwcElkLCBlbWFpbCwgY29kZSB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5UmVmcmVzaFRva2VuKF9hKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qICh7IGFwaVVSSSwgYXBwSWQsIHJlZnJlc2hUb2tlbiB9KSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIGpzb25GZXRjaChgJHthcGlVUkl9L3J1bnRpbWUvYXV0aC92ZXJpZnlfcmVmcmVzaF90b2tlbmAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgXCJhcHAtaWRcIjogYXBwSWQsXG4gICAgICAgICAgICAgICAgXCJyZWZyZXNoLXRva2VuXCI6IHJlZnJlc2hUb2tlbixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9KTtcbn1cbi8qKlxuICogQHBhcmFtIHtPYmplY3R9IHBhcmFtc1xuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5hcGlVUklcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuYXBwSWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuY29kZVxuICogQHBhcmFtIHtzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkfSBbcGFyYW1zLmNvZGVWZXJpZmllcl1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4Y2hhbmdlQ29kZUZvclRva2VuKF9hKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qICh7IGFwaVVSSSwgYXBwSWQsIGNvZGUsIGNvZGVWZXJpZmllciwgfSkge1xuICAgICAgICBjb25zdCByZXMgPSB5aWVsZCBqc29uRmV0Y2goYCR7YXBpVVJJfS9ydW50aW1lL29hdXRoL3Rva2VuYCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBhcHBfaWQ6IGFwcElkLFxuICAgICAgICAgICAgICAgIGNvZGU6IGNvZGUsXG4gICAgICAgICAgICAgICAgY29kZV92ZXJpZmllcjogY29kZVZlcmlmaWVyLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH0pO1xufVxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmFwaVVSSVxuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5hcHBJZFxuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5jbGllbnROYW1lXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmlkVG9rZW5cbiAqIEBwYXJhbSB7c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3BhcmFtcy5yZWZyZXNoVG9rZW5dXG4gKiBAcGFyYW0ge3N0cmluZyB8IG51bGwgfCB1bmRlZmluZWR9IFtwYXJhbXMubm9uY2VdXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduSW5XaXRoSWRUb2tlbihfYSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgYXJndW1lbnRzLCB2b2lkIDAsIGZ1bmN0aW9uKiAoeyBhcGlVUkksIGFwcElkLCBub25jZSwgaWRUb2tlbiwgY2xpZW50TmFtZSwgcmVmcmVzaFRva2VuLCB9KSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIGpzb25GZXRjaChgJHthcGlVUkl9L3J1bnRpbWUvb2F1dGgvaWRfdG9rZW5gLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczogeyBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIGFwcF9pZDogYXBwSWQsXG4gICAgICAgICAgICAgICAgbm9uY2UsXG4gICAgICAgICAgICAgICAgaWRfdG9rZW46IGlkVG9rZW4sXG4gICAgICAgICAgICAgICAgY2xpZW50X25hbWU6IGNsaWVudE5hbWUsXG4gICAgICAgICAgICAgICAgcmVmcmVzaF90b2tlbjogcmVmcmVzaFRva2VuLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH0pO1xufVxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmFwaVVSSVxuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5hcHBJZFxuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5yZWZyZXNoVG9rZW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25PdXQoX2EpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIGFyZ3VtZW50cywgdm9pZCAwLCBmdW5jdGlvbiogKHsgYXBpVVJJLCBhcHBJZCwgcmVmcmVzaFRva2VuIH0pIHtcbiAgICAgICAgY29uc3QgcmVzID0geWllbGQganNvbkZldGNoKGAke2FwaVVSSX0vcnVudGltZS9zaWdub3V0YCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgYXBwX2lkOiBhcHBJZCxcbiAgICAgICAgICAgICAgICByZWZyZXNoX3Rva2VuOiByZWZyZXNoVG9rZW4sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoQVBJLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/authAPI.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/datalog.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/datalog.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matchPattern: () => (/* binding */ matchPattern),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   querySingle: () => (/* binding */ querySingle),\n/* harmony export */   queryWhere: () => (/* binding */ queryWhere)\n/* harmony export */ });\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@instantdb/core/dist/module/store.js\");\n// 1. patternMatch\n\nfunction isVariable(x) {\n    return typeof x === \"string\" && x.startsWith(\"?\");\n}\nfunction matchVariable(variable, triplePart, context) {\n    if (context.hasOwnProperty(variable)) {\n        const bound = context[variable];\n        return matchPart(bound, triplePart, context);\n    }\n    return Object.assign(Object.assign({}, context), { [variable]: triplePart });\n}\nfunction matchExact(patternPart, triplePart, context) {\n    return patternPart === triplePart ? context : null;\n}\nfunction matcherForPatternPart(patternPart) {\n    switch (typeof patternPart) {\n        case \"string\":\n            return patternPart.startsWith(\"?\") ? matchVariable : matchExact;\n        default:\n            return matchExact;\n    }\n}\nconst validArgMapProps = [\n    \"in\",\n    \"$in\",\n    \"$not\",\n    \"$isNull\",\n    \"$comparator\", // covers all of $gt, $lt, etc.\n];\n// Checks if an object is an args map\nfunction isArgsMap(patternPart) {\n    for (const prop of validArgMapProps) {\n        if (patternPart.hasOwnProperty(prop)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction matchPart(patternPart, triplePart, context) {\n    if (!context)\n        return null;\n    if (typeof patternPart === \"object\") {\n        // This is an args map, so we'll have already fitered the triples\n        // in `getRelevantTriples`\n        if (isArgsMap(patternPart)) {\n            return context;\n        }\n        return null;\n    }\n    const matcher = matcherForPatternPart(patternPart);\n    return matcher(patternPart, triplePart, context);\n}\nfunction matchPattern(pattern, triple, context) {\n    return pattern.reduce((context, patternPart, idx) => {\n        const triplePart = triple[idx];\n        return matchPart(patternPart, triplePart, context);\n    }, context);\n}\n// 2. querySingle\nfunction querySingle(store, pattern, context) {\n    return relevantTriples(store, pattern, context)\n        .map((triple) => matchPattern(pattern, triple, context))\n        .filter((x) => x);\n}\n// 3. queryWhere\nfunction queryPattern(store, pattern, contexts) {\n    if (pattern.or) {\n        return pattern.or.patterns.flatMap((patterns) => {\n            return queryWhere(store, patterns, contexts);\n        });\n    }\n    if (pattern.and) {\n        return pattern.and.patterns.reduce((contexts, patterns) => {\n            return queryWhere(store, patterns, contexts);\n        }, contexts);\n    }\n    return contexts.flatMap((context) => querySingle(store, pattern, context));\n}\nfunction queryWhere(store, patterns, contexts = [{}]) {\n    return patterns.reduce((contexts, pattern) => {\n        return queryPattern(store, pattern, contexts);\n    }, contexts);\n}\n// 4. query\nfunction actualize(context, find) {\n    if (Array.isArray(find)) {\n        return find.map((findPart) => actualize(context, findPart));\n    }\n    return isVariable(find) ? context[find] : find;\n}\nfunction query(store, { find, where }) {\n    const contexts = queryWhere(store, where);\n    return contexts.map((context) => actualize(context, find));\n}\n// 5. Index\nfunction relevantTriples(store, pattern, context) {\n    return (0,_store_js__WEBPACK_IMPORTED_MODULE_0__.getTriples)(store, actualize(context, pattern));\n}\n//# sourceMappingURL=datalog.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2RhdGFsb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUN3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGNBQWMsd0JBQXdCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDTyxtREFBbUQ7QUFDMUQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sd0JBQXdCLGFBQWE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcscURBQVU7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXGRhdGFsb2cuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMS4gcGF0dGVybk1hdGNoXG5pbXBvcnQgeyBnZXRUcmlwbGVzIH0gZnJvbSBcIi4vc3RvcmUuanNcIjtcbmZ1bmN0aW9uIGlzVmFyaWFibGUoeCkge1xuICAgIHJldHVybiB0eXBlb2YgeCA9PT0gXCJzdHJpbmdcIiAmJiB4LnN0YXJ0c1dpdGgoXCI/XCIpO1xufVxuZnVuY3Rpb24gbWF0Y2hWYXJpYWJsZSh2YXJpYWJsZSwgdHJpcGxlUGFydCwgY29udGV4dCkge1xuICAgIGlmIChjb250ZXh0Lmhhc093blByb3BlcnR5KHZhcmlhYmxlKSkge1xuICAgICAgICBjb25zdCBib3VuZCA9IGNvbnRleHRbdmFyaWFibGVdO1xuICAgICAgICByZXR1cm4gbWF0Y2hQYXJ0KGJvdW5kLCB0cmlwbGVQYXJ0LCBjb250ZXh0KTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgY29udGV4dCksIHsgW3ZhcmlhYmxlXTogdHJpcGxlUGFydCB9KTtcbn1cbmZ1bmN0aW9uIG1hdGNoRXhhY3QocGF0dGVyblBhcnQsIHRyaXBsZVBhcnQsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gcGF0dGVyblBhcnQgPT09IHRyaXBsZVBhcnQgPyBjb250ZXh0IDogbnVsbDtcbn1cbmZ1bmN0aW9uIG1hdGNoZXJGb3JQYXR0ZXJuUGFydChwYXR0ZXJuUGFydCkge1xuICAgIHN3aXRjaCAodHlwZW9mIHBhdHRlcm5QYXJ0KSB7XG4gICAgICAgIGNhc2UgXCJzdHJpbmdcIjpcbiAgICAgICAgICAgIHJldHVybiBwYXR0ZXJuUGFydC5zdGFydHNXaXRoKFwiP1wiKSA/IG1hdGNoVmFyaWFibGUgOiBtYXRjaEV4YWN0O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIG1hdGNoRXhhY3Q7XG4gICAgfVxufVxuY29uc3QgdmFsaWRBcmdNYXBQcm9wcyA9IFtcbiAgICBcImluXCIsXG4gICAgXCIkaW5cIixcbiAgICBcIiRub3RcIixcbiAgICBcIiRpc051bGxcIixcbiAgICBcIiRjb21wYXJhdG9yXCIsIC8vIGNvdmVycyBhbGwgb2YgJGd0LCAkbHQsIGV0Yy5cbl07XG4vLyBDaGVja3MgaWYgYW4gb2JqZWN0IGlzIGFuIGFyZ3MgbWFwXG5mdW5jdGlvbiBpc0FyZ3NNYXAocGF0dGVyblBhcnQpIHtcbiAgICBmb3IgKGNvbnN0IHByb3Agb2YgdmFsaWRBcmdNYXBQcm9wcykge1xuICAgICAgICBpZiAocGF0dGVyblBhcnQuaGFzT3duUHJvcGVydHkocHJvcCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIG1hdGNoUGFydChwYXR0ZXJuUGFydCwgdHJpcGxlUGFydCwgY29udGV4dCkge1xuICAgIGlmICghY29udGV4dClcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgaWYgKHR5cGVvZiBwYXR0ZXJuUGFydCA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAvLyBUaGlzIGlzIGFuIGFyZ3MgbWFwLCBzbyB3ZSdsbCBoYXZlIGFscmVhZHkgZml0ZXJlZCB0aGUgdHJpcGxlc1xuICAgICAgICAvLyBpbiBgZ2V0UmVsZXZhbnRUcmlwbGVzYFxuICAgICAgICBpZiAoaXNBcmdzTWFwKHBhdHRlcm5QYXJ0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnRleHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGNvbnN0IG1hdGNoZXIgPSBtYXRjaGVyRm9yUGF0dGVyblBhcnQocGF0dGVyblBhcnQpO1xuICAgIHJldHVybiBtYXRjaGVyKHBhdHRlcm5QYXJ0LCB0cmlwbGVQYXJ0LCBjb250ZXh0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYXRjaFBhdHRlcm4ocGF0dGVybiwgdHJpcGxlLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIHBhdHRlcm4ucmVkdWNlKChjb250ZXh0LCBwYXR0ZXJuUGFydCwgaWR4KSA9PiB7XG4gICAgICAgIGNvbnN0IHRyaXBsZVBhcnQgPSB0cmlwbGVbaWR4XTtcbiAgICAgICAgcmV0dXJuIG1hdGNoUGFydChwYXR0ZXJuUGFydCwgdHJpcGxlUGFydCwgY29udGV4dCk7XG4gICAgfSwgY29udGV4dCk7XG59XG4vLyAyLiBxdWVyeVNpbmdsZVxuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5U2luZ2xlKHN0b3JlLCBwYXR0ZXJuLCBjb250ZXh0KSB7XG4gICAgcmV0dXJuIHJlbGV2YW50VHJpcGxlcyhzdG9yZSwgcGF0dGVybiwgY29udGV4dClcbiAgICAgICAgLm1hcCgodHJpcGxlKSA9PiBtYXRjaFBhdHRlcm4ocGF0dGVybiwgdHJpcGxlLCBjb250ZXh0KSlcbiAgICAgICAgLmZpbHRlcigoeCkgPT4geCk7XG59XG4vLyAzLiBxdWVyeVdoZXJlXG5mdW5jdGlvbiBxdWVyeVBhdHRlcm4oc3RvcmUsIHBhdHRlcm4sIGNvbnRleHRzKSB7XG4gICAgaWYgKHBhdHRlcm4ub3IpIHtcbiAgICAgICAgcmV0dXJuIHBhdHRlcm4ub3IucGF0dGVybnMuZmxhdE1hcCgocGF0dGVybnMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBxdWVyeVdoZXJlKHN0b3JlLCBwYXR0ZXJucywgY29udGV4dHMpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgaWYgKHBhdHRlcm4uYW5kKSB7XG4gICAgICAgIHJldHVybiBwYXR0ZXJuLmFuZC5wYXR0ZXJucy5yZWR1Y2UoKGNvbnRleHRzLCBwYXR0ZXJucykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHF1ZXJ5V2hlcmUoc3RvcmUsIHBhdHRlcm5zLCBjb250ZXh0cyk7XG4gICAgICAgIH0sIGNvbnRleHRzKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRleHRzLmZsYXRNYXAoKGNvbnRleHQpID0+IHF1ZXJ5U2luZ2xlKHN0b3JlLCBwYXR0ZXJuLCBjb250ZXh0KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcXVlcnlXaGVyZShzdG9yZSwgcGF0dGVybnMsIGNvbnRleHRzID0gW3t9XSkge1xuICAgIHJldHVybiBwYXR0ZXJucy5yZWR1Y2UoKGNvbnRleHRzLCBwYXR0ZXJuKSA9PiB7XG4gICAgICAgIHJldHVybiBxdWVyeVBhdHRlcm4oc3RvcmUsIHBhdHRlcm4sIGNvbnRleHRzKTtcbiAgICB9LCBjb250ZXh0cyk7XG59XG4vLyA0LiBxdWVyeVxuZnVuY3Rpb24gYWN0dWFsaXplKGNvbnRleHQsIGZpbmQpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShmaW5kKSkge1xuICAgICAgICByZXR1cm4gZmluZC5tYXAoKGZpbmRQYXJ0KSA9PiBhY3R1YWxpemUoY29udGV4dCwgZmluZFBhcnQpKTtcbiAgICB9XG4gICAgcmV0dXJuIGlzVmFyaWFibGUoZmluZCkgPyBjb250ZXh0W2ZpbmRdIDogZmluZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeShzdG9yZSwgeyBmaW5kLCB3aGVyZSB9KSB7XG4gICAgY29uc3QgY29udGV4dHMgPSBxdWVyeVdoZXJlKHN0b3JlLCB3aGVyZSk7XG4gICAgcmV0dXJuIGNvbnRleHRzLm1hcCgoY29udGV4dCkgPT4gYWN0dWFsaXplKGNvbnRleHQsIGZpbmQpKTtcbn1cbi8vIDUuIEluZGV4XG5mdW5jdGlvbiByZWxldmFudFRyaXBsZXMoc3RvcmUsIHBhdHRlcm4sIGNvbnRleHQpIHtcbiAgICByZXR1cm4gZ2V0VHJpcGxlcyhzdG9yZSwgYWN0dWFsaXplKGNvbnRleHQsIHBhdHRlcm4pKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGFsb2cuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/datalog.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/devtool.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/devtool.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDevtool: () => (/* binding */ createDevtool)\n/* harmony export */ });\nlet currentDevtool;\nfunction createDevtool(appId) {\n    currentDevtool === null || currentDevtool === void 0 ? void 0 : currentDevtool.dispose();\n    const container = createContainer();\n    const toggler = createToggler(toggleView);\n    const iframe = createIframe(getSrc(appId));\n    function onPostMessage(event) {\n        var _a;\n        if (event.source !== iframe.element.contentWindow)\n            return;\n        if (((_a = event.data) === null || _a === void 0 ? void 0 : _a.type) === \"close\" && container.isVisible()) {\n            toggleView();\n        }\n    }\n    function onKeyDown(event) {\n        const isToggleShortcut = event.shiftKey && event.ctrlKey && event.key === \"0\";\n        const isEsc = event.key === \"Escape\" || event.key === \"Esc\";\n        if (isToggleShortcut) {\n            toggleView();\n        }\n        else if (isEsc && container.isVisible()) {\n            toggleView();\n        }\n    }\n    function toggleView() {\n        if (container.isVisible()) {\n            container.element.style.display = \"none\";\n        }\n        else {\n            container.element.style.display = \"block\";\n            // lazily render iframe on first open\n            if (!container.element.contains(iframe.element)) {\n                container.element.appendChild(iframe.element);\n            }\n        }\n    }\n    function dispose() {\n        container.element.remove();\n        toggler.element.remove();\n        removeEventListener(\"keydown\", onKeyDown);\n        removeEventListener(\"message\", onPostMessage);\n    }\n    function create() {\n        document.body.appendChild(container.element);\n        document.body.appendChild(toggler.element);\n        addEventListener(\"keydown\", onKeyDown);\n        addEventListener(\"message\", onPostMessage);\n        currentDevtool = {\n            dispose,\n        };\n    }\n    return create();\n}\nfunction getSrc(appId) {\n    const isDev = window.DEV_DEVTOOL;\n    const src = `${isDev ? \"http://localhost:3000\" : \"https://instantdb.com\"}/_devtool?appId=${appId}`;\n    return src;\n}\nfunction createIframe(src) {\n    const element = document.createElement(\"iframe\");\n    element.src = src;\n    element.className = \"instant-devtool-iframe\";\n    Object.assign(element.style, {\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"4px\",\n        backgroundColor: \"white\",\n        border: \"none\",\n    });\n    return { element };\n}\nfunction createToggler(onClick) {\n    const logoSVG = `\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 512 512\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"512\" height=\"512\" fill=\"black\"/>\n      <rect x=\"97.0973\" y=\"91.3297\" width=\"140\" height=\"330\" fill=\"white\"/>\n    </svg>\n  `;\n    const element = document.createElement(\"button\");\n    element.innerHTML = logoSVG;\n    element.className = \"instant-devtool-toggler\";\n    Object.assign(element.style, {\n        // pos\n        position: \"fixed\",\n        bottom: \"24px\",\n        left: \"24px\",\n        height: \"32px\",\n        width: \"32px\",\n        // layout\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        // look\n        padding: \"0\",\n        margin: \"0\",\n        border: \"none\",\n        cursor: \"pointer\",\n    });\n    element.addEventListener(\"click\", onClick);\n    return { element };\n}\nfunction createContainer() {\n    const element = document.createElement(\"div\");\n    Object.assign(element.style, {\n        position: \"fixed\",\n        bottom: \"24px\",\n        right: \"24px\",\n        left: \"60px\",\n        top: \"72px\",\n        display: \"block\",\n        borderRadius: \"4px\",\n        border: \"1px #ccc solid\",\n        boxShadow: \"0px 0px 8px #00000044\",\n        backgroundColor: \"#eee\",\n        zIndex: \"999990\",\n    });\n    element.style.display = \"none\";\n    element.className = \"instant-devtool-container\";\n    function isVisible() {\n        return element.style.display !== \"none\";\n    }\n    return { element, isVisible };\n}\n//# sourceMappingURL=devtool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2RldnRvb2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBEQUEwRCxrQkFBa0IsTUFBTTtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcZGV2dG9vbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY3VycmVudERldnRvb2w7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGV2dG9vbChhcHBJZCkge1xuICAgIGN1cnJlbnREZXZ0b29sID09PSBudWxsIHx8IGN1cnJlbnREZXZ0b29sID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdXJyZW50RGV2dG9vbC5kaXNwb3NlKCk7XG4gICAgY29uc3QgY29udGFpbmVyID0gY3JlYXRlQ29udGFpbmVyKCk7XG4gICAgY29uc3QgdG9nZ2xlciA9IGNyZWF0ZVRvZ2dsZXIodG9nZ2xlVmlldyk7XG4gICAgY29uc3QgaWZyYW1lID0gY3JlYXRlSWZyYW1lKGdldFNyYyhhcHBJZCkpO1xuICAgIGZ1bmN0aW9uIG9uUG9zdE1lc3NhZ2UoZXZlbnQpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBpZiAoZXZlbnQuc291cmNlICE9PSBpZnJhbWUuZWxlbWVudC5jb250ZW50V2luZG93KVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBpZiAoKChfYSA9IGV2ZW50LmRhdGEpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS50eXBlKSA9PT0gXCJjbG9zZVwiICYmIGNvbnRhaW5lci5pc1Zpc2libGUoKSkge1xuICAgICAgICAgICAgdG9nZ2xlVmlldygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uS2V5RG93bihldmVudCkge1xuICAgICAgICBjb25zdCBpc1RvZ2dsZVNob3J0Y3V0ID0gZXZlbnQuc2hpZnRLZXkgJiYgZXZlbnQuY3RybEtleSAmJiBldmVudC5rZXkgPT09IFwiMFwiO1xuICAgICAgICBjb25zdCBpc0VzYyA9IGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIiB8fCBldmVudC5rZXkgPT09IFwiRXNjXCI7XG4gICAgICAgIGlmIChpc1RvZ2dsZVNob3J0Y3V0KSB7XG4gICAgICAgICAgICB0b2dnbGVWaWV3KCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNFc2MgJiYgY29udGFpbmVyLmlzVmlzaWJsZSgpKSB7XG4gICAgICAgICAgICB0b2dnbGVWaWV3KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gdG9nZ2xlVmlldygpIHtcbiAgICAgICAgaWYgKGNvbnRhaW5lci5pc1Zpc2libGUoKSkge1xuICAgICAgICAgICAgY29udGFpbmVyLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29udGFpbmVyLmVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgICAgIC8vIGxhemlseSByZW5kZXIgaWZyYW1lIG9uIGZpcnN0IG9wZW5cbiAgICAgICAgICAgIGlmICghY29udGFpbmVyLmVsZW1lbnQuY29udGFpbnMoaWZyYW1lLmVsZW1lbnQpKSB7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmVsZW1lbnQuYXBwZW5kQ2hpbGQoaWZyYW1lLmVsZW1lbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgICAgIGNvbnRhaW5lci5lbGVtZW50LnJlbW92ZSgpO1xuICAgICAgICB0b2dnbGVyLmVsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG9uUG9zdE1lc3NhZ2UpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjcmVhdGUoKSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29udGFpbmVyLmVsZW1lbnQpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRvZ2dsZXIuZWxlbWVudCk7XG4gICAgICAgIGFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIG9uS2V5RG93bik7XG4gICAgICAgIGFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG9uUG9zdE1lc3NhZ2UpO1xuICAgICAgICBjdXJyZW50RGV2dG9vbCA9IHtcbiAgICAgICAgICAgIGRpc3Bvc2UsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGUoKTtcbn1cbmZ1bmN0aW9uIGdldFNyYyhhcHBJZCkge1xuICAgIGNvbnN0IGlzRGV2ID0gd2luZG93LkRFVl9ERVZUT09MO1xuICAgIGNvbnN0IHNyYyA9IGAke2lzRGV2ID8gXCJodHRwOi8vbG9jYWxob3N0OjMwMDBcIiA6IFwiaHR0cHM6Ly9pbnN0YW50ZGIuY29tXCJ9L19kZXZ0b29sP2FwcElkPSR7YXBwSWR9YDtcbiAgICByZXR1cm4gc3JjO1xufVxuZnVuY3Rpb24gY3JlYXRlSWZyYW1lKHNyYykge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO1xuICAgIGVsZW1lbnQuc3JjID0gc3JjO1xuICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gXCJpbnN0YW50LWRldnRvb2wtaWZyYW1lXCI7XG4gICAgT2JqZWN0LmFzc2lnbihlbGVtZW50LnN0eWxlLCB7XG4gICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICAgICAgYm9yZGVyUmFkaXVzOiBcIjRweFwiLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwid2hpdGVcIixcbiAgICAgICAgYm9yZGVyOiBcIm5vbmVcIixcbiAgICB9KTtcbiAgICByZXR1cm4geyBlbGVtZW50IH07XG59XG5mdW5jdGlvbiBjcmVhdGVUb2dnbGVyKG9uQ2xpY2spIHtcbiAgICBjb25zdCBsb2dvU1ZHID0gYFxuICAgIDxzdmcgd2lkdGg9XCIzMlwiIGhlaWdodD1cIjMyXCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgZmlsbD1cIm5vbmVcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+XG4gICAgICA8cmVjdCB3aWR0aD1cIjUxMlwiIGhlaWdodD1cIjUxMlwiIGZpbGw9XCJibGFja1wiLz5cbiAgICAgIDxyZWN0IHg9XCI5Ny4wOTczXCIgeT1cIjkxLjMyOTdcIiB3aWR0aD1cIjE0MFwiIGhlaWdodD1cIjMzMFwiIGZpbGw9XCJ3aGl0ZVwiLz5cbiAgICA8L3N2Zz5cbiAgYDtcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBlbGVtZW50LmlubmVySFRNTCA9IGxvZ29TVkc7XG4gICAgZWxlbWVudC5jbGFzc05hbWUgPSBcImluc3RhbnQtZGV2dG9vbC10b2dnbGVyXCI7XG4gICAgT2JqZWN0LmFzc2lnbihlbGVtZW50LnN0eWxlLCB7XG4gICAgICAgIC8vIHBvc1xuICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgICAgICBib3R0b206IFwiMjRweFwiLFxuICAgICAgICBsZWZ0OiBcIjI0cHhcIixcbiAgICAgICAgaGVpZ2h0OiBcIjMycHhcIixcbiAgICAgICAgd2lkdGg6IFwiMzJweFwiLFxuICAgICAgICAvLyBsYXlvdXRcbiAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgICAgICAvLyBsb29rXG4gICAgICAgIHBhZGRpbmc6IFwiMFwiLFxuICAgICAgICBtYXJnaW46IFwiMFwiLFxuICAgICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgICAgICBjdXJzb3I6IFwicG9pbnRlclwiLFxuICAgIH0pO1xuICAgIGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xpY2spO1xuICAgIHJldHVybiB7IGVsZW1lbnQgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRhaW5lcigpIHtcbiAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQuc3R5bGUsIHtcbiAgICAgICAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgICAgICAgYm90dG9tOiBcIjI0cHhcIixcbiAgICAgICAgcmlnaHQ6IFwiMjRweFwiLFxuICAgICAgICBsZWZ0OiBcIjYwcHhcIixcbiAgICAgICAgdG9wOiBcIjcycHhcIixcbiAgICAgICAgZGlzcGxheTogXCJibG9ja1wiLFxuICAgICAgICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gICAgICAgIGJvcmRlcjogXCIxcHggI2NjYyBzb2xpZFwiLFxuICAgICAgICBib3hTaGFkb3c6IFwiMHB4IDBweCA4cHggIzAwMDAwMDQ0XCIsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCIjZWVlXCIsXG4gICAgICAgIHpJbmRleDogXCI5OTk5OTBcIixcbiAgICB9KTtcbiAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICBlbGVtZW50LmNsYXNzTmFtZSA9IFwiaW5zdGFudC1kZXZ0b29sLWNvbnRhaW5lclwiO1xuICAgIGZ1bmN0aW9uIGlzVmlzaWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQuc3R5bGUuZGlzcGxheSAhPT0gXCJub25lXCI7XG4gICAgfVxuICAgIHJldHVybiB7IGVsZW1lbnQsIGlzVmlzaWJsZSB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGV2dG9vbC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/devtool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: () => (/* binding */ Auth),\n/* harmony export */   IndexedDBStorage: () => (/* reexport safe */ _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   InstantCoreDatabase: () => (/* binding */ InstantCoreDatabase),\n/* harmony export */   Storage: () => (/* binding */ Storage),\n/* harmony export */   WindowNetworkListener: () => (/* reexport safe */ _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   coerceQuery: () => (/* binding */ coerceQuery),\n/* harmony export */   getOps: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.getOps),\n/* harmony export */   i: () => (/* reexport safe */ _schema__WEBPACK_IMPORTED_MODULE_6__.i),\n/* harmony export */   id: () => (/* reexport safe */ _utils_uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   init_experimental: () => (/* binding */ init_experimental),\n/* harmony export */   lookup: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.lookup),\n/* harmony export */   tx: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.tx),\n/* harmony export */   txInit: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.txInit),\n/* harmony export */   version: () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   weakHash: () => (/* reexport safe */ _utils_weakHash__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _Reactor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Reactor */ \"(ssr)/./node_modules/@instantdb/core/dist/module/Reactor.js\");\n/* harmony import */ var _instatx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instatx */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js\");\n/* harmony import */ var _utils_weakHash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/weakHash */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n/* harmony import */ var _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./IndexedDBStorage */ \"(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js\");\n/* harmony import */ var _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WindowNetworkListener */ \"(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js\");\n/* harmony import */ var _schema__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./schema */ \"(ssr)/./node_modules/@instantdb/core/dist/module/schema.js\");\n/* harmony import */ var _devtool__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./devtool */ \"(ssr)/./node_modules/@instantdb/core/dist/module/devtool.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@instantdb/core/dist/module/version.js\");\n\n\n\n\n\n\n\n\n\nconst defaultOpenDevtool = true;\n// consts\nconst defaultConfig = {\n    apiURI: \"https://api.instantdb.com\",\n    websocketURI: \"wss://api.instantdb.com/runtime/session\",\n};\n// hmr\nfunction initGlobalInstantCoreStore() {\n    var _a;\n    globalThis.__instantDbStore = (_a = globalThis.__instantDbStore) !== null && _a !== void 0 ? _a : {};\n    return globalThis.__instantDbStore;\n}\nconst globalInstantCoreStore = initGlobalInstantCoreStore();\n/**\n * Functions to log users in and out.\n *\n * @see https://instantdb.com/docs/auth\n */\nclass Auth {\n    constructor(db) {\n        this.db = db;\n        /**\n         * Sends a magic code to the user's email address.\n         *\n         * Once you send the magic code, see {@link auth.signInWithMagicCode} to let the\n         * user verify.\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *  db.auth.sendMagicCode({email: \"example@gmail.com\"})\n         *    .catch((err) => console.error(err.body?.message))\n         */\n        this.sendMagicCode = (params) => {\n            return this.db.sendMagicCode(params);\n        };\n        /**\n         * Verify a magic code that was sent to the user's email address.\n         *\n         * @see https://instantdb.com/docs/auth\n         *\n         * @example\n         *  db.auth.signInWithMagicCode({email: \"example@gmail.com\", code: \"123456\"})\n         *       .catch((err) => console.error(err.body?.message))\n         */\n        this.signInWithMagicCode = (params) => {\n            return this.db.signInWithMagicCode(params);\n        };\n        /**\n         * Sign in a user with a refresh token\n         *\n         * @see https://instantdb.com/docs/backend#frontend-auth-sign-in-with-token\n         *\n         * @example\n         *   // Get the token from your backend\n         *   const token = await fetch('/signin', ...);\n         *   //Sign in\n         *   db.auth.signInWithToken(token);\n         */\n        this.signInWithToken = (token) => {\n            return this.db.signInWithCustomToken(token);\n        };\n        /**\n         * Create an authorization url to sign in with an external provider\n         *\n         * @see https://instantdb.com/docs/auth\n         *\n         * @example\n         *   // Get the authorization url from your backend\n         *   const url = db.auth.createAuthorizationUrl({\n         *     clientName: \"google\",\n         *     redirectURL: window.location.href,\n         *   });\n         *\n         *   // Put it in a sign in link\n         *   <a href={url}>Log in with Google</a>\n         */\n        this.createAuthorizationURL = (params) => {\n            return this.db.createAuthorizationURL(params);\n        };\n        /**\n         * Sign in with the id_token from an external provider like Google\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *   db.auth\n         *  .signInWithIdToken({\n         *    // Token from external service\n         *    idToken: id_token,\n         *    // The name you gave the client when you registered it with Instant\n         *    clientName: \"google\",\n         *    // The nonce, if any, that you used when you initiated the auth flow\n         *    // with the external service.\n         *    nonce: your_nonce\n         *  })\n         *  .catch((err) => console.error(err.body?.message));\n         *\n         */\n        this.signInWithIdToken = (params) => {\n            return this.db.signInWithIdToken(params);\n        };\n        /**\n         * Sign in with the id_token from an external provider like Google\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *   db.auth\n         *  .exchangeOAuthCode({\n         *    // code received in redirect from OAuth callback\n         *    code: code\n         *    // The PKCE code_verifier, if any, that you used when you\n         *    // initiated the auth flow\n         *    codeVerifier: your_code_verifier\n         *  })\n         *  .catch((err) => console.error(err.body?.message));\n         *\n         */\n        this.exchangeOAuthCode = (params) => {\n            return this.db.exchangeCodeForToken(params);\n        };\n        /**\n         * OpenID Discovery path for use with tools like\n         * expo-auth-session that use auto-discovery of\n         * OAuth parameters.\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *   const discovery = useAutoDiscovery(\n         *     db.auth.issuerURI()\n         *   );\n         */\n        this.issuerURI = () => {\n            return this.db.issuerURI();\n        };\n        /**\n         * Sign out the current user\n         */\n        this.signOut = () => {\n            return this.db.signOut();\n        };\n    }\n}\n/**\n * Functions to manage file storage.\n */\nclass Storage {\n    constructor(db) {\n        this.db = db;\n        /**\n         * Uploads file at the provided path.\n         *\n         * @see https://instantdb.com/docs/storage\n         * @example\n         *   const [file] = e.target.files; // result of file input\n         *   const isSuccess = await db.storage.upload('photos/demo.png', file);\n         */\n        this.upload = (pathname, file) => {\n            return this.db.upload(pathname, file);\n        };\n        /**\n         * @deprecated Use `db.storage.upload` instead\n         */\n        this.put = this.upload;\n        /**\n         * Retrieves a download URL for the provided path.\n         *\n         * @see https://instantdb.com/docs/storage\n         * @example\n         *   const url = await db.storage.getDownloadUrl('photos/demo.png');\n         */\n        this.getDownloadUrl = (pathname) => {\n            return this.db.getDownloadUrl(pathname);\n        };\n        /**\n         * Deletes a file by path name.\n         *\n         * @see https://instantdb.com/docs/storage\n         * @example\n         *   await db.storage.delete('photos/demo.png');\n         */\n        this.delete = (pathname) => {\n            return this.db.deleteFile(pathname);\n        };\n    }\n}\n// util\nfunction coerceQuery(o) {\n    // stringify and parse to remove undefined values\n    return JSON.parse(JSON.stringify(o));\n}\nclass InstantCoreDatabase {\n    constructor(reactor) {\n        this.tx = (0,_instatx__WEBPACK_IMPORTED_MODULE_1__.txInit)();\n        this._reactor = reactor;\n        this.auth = new Auth(this._reactor);\n        this.storage = new Storage(this._reactor);\n    }\n    /**\n     * Use this to write data! You can create, update, delete, and link objects\n     *\n     * @see https://instantdb.com/docs/instaml\n     *\n     * @example\n     *   // Create a new object in the `goals` namespace\n     *   const goalId = id();\n     *   db.transact(tx.goals[goalId].update({title: \"Get fit\"}))\n     *\n     *   // Update the title\n     *   db.transact(tx.goals[goalId].update({title: \"Get super fit\"}))\n     *\n     *   // Delete it\n     *   db.transact(tx.goals[goalId].delete())\n     *\n     *   // Or create an association:\n     *   todoId = id();\n     *   db.transact([\n     *    tx.todos[todoId].update({ title: 'Go on a run' }),\n     *    tx.goals[goalId].link({todos: todoId}),\n     *  ])\n     */\n    transact(chunks) {\n        return this._reactor.pushTx(chunks);\n    }\n    getLocalId(name) {\n        return this._reactor.getLocalId(name);\n    }\n    /**\n     * Use this to query your data!\n     *\n     * @see https://instantdb.com/docs/instaql\n     *\n     * @example\n     *  // listen to all goals\n     *  db.subscribeQuery({ goals: {} }, (resp) => {\n     *    console.log(resp.data.goals)\n     *  })\n     *\n     *  // goals where the title is \"Get Fit\"\n     *  db.subscribeQuery(\n     *    { goals: { $: { where: { title: \"Get Fit\" } } } },\n     *    (resp) => {\n     *      console.log(resp.data.goals)\n     *    }\n     *  )\n     *\n     *  // all goals, _alongside_ their todos\n     *  db.subscribeQuery({ goals: { todos: {} } }, (resp) => {\n     *    console.log(resp.data.goals)\n     *  });\n     */\n    subscribeQuery(query, cb) {\n        return this._reactor.subscribeQuery(query, cb);\n    }\n    /**\n     * Listen for the logged in state. This is useful\n     * for deciding when to show a login screen.\n     *\n     * @see https://instantdb.com/docs/auth\n     * @example\n     *   const unsub = db.subscribeAuth((auth) => {\n     *     if (auth.user) {\n     *     console.log('logged in as', auth.user.email)\n     *    } else {\n     *      console.log('logged out')\n     *    }\n     *  })\n     */\n    subscribeAuth(cb) {\n        return this._reactor.subscribeAuth(cb);\n    }\n    /**\n     * Listen for connection status changes to Instant. This is useful\n     * for building things like connectivity indicators\n     *\n     * @see https://www.instantdb.com/docs/patterns#connection-status\n     * @example\n     *   const unsub = db.subscribeConnectionStatus((status) => {\n     *     const connectionState =\n     *       status === 'connecting' || status === 'opened'\n     *         ? 'authenticating'\n     *       : status === 'authenticated'\n     *         ? 'connected'\n     *       : status === 'closed'\n     *         ? 'closed'\n     *       : status === 'errored'\n     *         ? 'errored'\n     *       : 'unexpected state';\n     *\n     *     console.log('Connection status:', connectionState);\n     *   });\n     */\n    subscribeConnectionStatus(cb) {\n        return this._reactor.subscribeConnectionStatus(cb);\n    }\n    /**\n     * Join a room to publish and subscribe to topics and presence.\n     *\n     * @see https://instantdb.com/docs/presence-and-topics\n     * @example\n     * // init\n     * const db = init();\n     * const room = db.joinRoom(roomType, roomId);\n     * // usage\n     * const unsubscribeTopic = room.subscribeTopic(\"foo\", console.log);\n     * const unsubscribePresence = room.subscribePresence({}, console.log);\n     * room.publishTopic(\"hello\", { message: \"hello world!\" });\n     * room.publishPresence({ name: \"joe\" });\n     * // later\n     * unsubscribePresence();\n     * unsubscribeTopic();\n     * room.leaveRoom();\n     */\n    joinRoom(roomType = \"_defaultRoomType\", roomId = \"_defaultRoomId\") {\n        const leaveRoom = this._reactor.joinRoom(roomId);\n        return {\n            leaveRoom,\n            subscribeTopic: (topic, onEvent) => this._reactor.subscribeTopic(roomId, topic, onEvent),\n            subscribePresence: (opts, onChange) => this._reactor.subscribePresence(roomType, roomId, opts, onChange),\n            publishTopic: (topic, data) => this._reactor.publishTopic({ roomType, roomId, topic, data }),\n            publishPresence: (data) => this._reactor.publishPresence(roomType, roomId, data),\n            getPresence: (opts) => this._reactor.getPresence(roomType, roomId, opts),\n        };\n    }\n    shutdown() {\n        delete globalInstantCoreStore[this._reactor.config.appId];\n        this._reactor.shutdown();\n    }\n    /**\n     * Use this for one-off queries.\n     * Returns local data if available, otherwise fetches from the server.\n     * Because we want to avoid stale data, this method will throw an error\n     * if the user is offline or there is no active connection to the server.\n     *\n     * @see https://instantdb.com/docs/instaql\n     *\n     * @example\n     *\n     *  const resp = await db.queryOnce({ goals: {} });\n     *  console.log(resp.data.goals)\n     */\n    queryOnce(query) {\n        return this._reactor.queryOnce(query);\n    }\n}\n/**\n *\n * The first step: init your application!\n *\n * Visit https://instantdb.com/dash to get your `appId` :)\n *\n * @example\n *  import { init } from \"@instantdb/core\"\n *\n *  const db = init({ appId: \"my-app-id\" })\n *\n *  // You can also provide a schema for type safety and editor autocomplete!\n *\n *  import { init } from \"@instantdb/core\"\n *  import schema from \"\"../instant.schema.ts\";\n *\n *  const db = init({ appId: \"my-app-id\", schema })\n *\n *  // To learn more: https://instantdb.com/docs/modeling-data\n */\nfunction init(config, Storage, NetworkListener, versions) {\n    const existingClient = globalInstantCoreStore[config.appId];\n    if (existingClient) {\n        return existingClient;\n    }\n    const reactor = new _Reactor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Object.assign(Object.assign(Object.assign({}, defaultConfig), config), { cardinalityInference: config.schema ? true : false }), Storage || _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_4__[\"default\"], NetworkListener || _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_5__[\"default\"], Object.assign(Object.assign({}, (versions || {})), { \"@instantdb/core\": _version__WEBPACK_IMPORTED_MODULE_8__[\"default\"] }));\n    const client = new InstantCoreDatabase(reactor);\n    globalInstantCoreStore[config.appId] = client;\n    if (typeof window !== \"undefined\" && typeof window.location !== \"undefined\") {\n        const showDevtool = \n        // show widget by default?\n        (\"devtool\" in config ? Boolean(config.devtool) : defaultOpenDevtool) &&\n            // only run on localhost (dev env)\n            window.location.hostname === \"localhost\" &&\n            // used by dash and other internal consumers\n            !Boolean(globalThis._nodevtool);\n        if (showDevtool) {\n            (0,_devtool__WEBPACK_IMPORTED_MODULE_7__.createDevtool)(config.appId);\n        }\n    }\n    return client;\n}\n/**\n * @deprecated\n * `init_experimental` is deprecated. You can replace it with `init`.\n *\n * @example\n *\n * // Before\n * import { init_experimental } from \"@instantdb/core\"\n * const db = init_experimental({  ...  });\n *\n * // After\n * import { init } from \"@instantdb/core\"\n * const db = init({ ...  });\n */\nconst init_experimental = init;\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDd0I7QUFDaEI7QUFDVjtBQUNvQjtBQUNVO0FBQy9CO0FBQ2E7QUFDVjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsZ0NBQWdDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDJCQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDJDQUEyQztBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxzQkFBc0IsSUFBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdEQUFNO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxpQkFBaUI7QUFDL0Q7QUFDQTtBQUNBLDhDQUE4Qyx1QkFBdUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msc0JBQXNCO0FBQzFELGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixXQUFXO0FBQ3ZDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUyxLQUFLLFNBQVMsd0JBQXdCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixTQUFTLGFBQWE7QUFDbEQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQsb0NBQW9DLHlCQUF5QjtBQUM3RCw4QkFBOEIsYUFBYTtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLCtCQUErQjtBQUN2RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsV0FBVztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBLHNCQUFzQixvQkFBb0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPO0FBQ3BCO0FBQ0E7QUFDQSxzQkFBc0IsNEJBQTRCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0RBQU8sNkNBQTZDLDZCQUE2QixvREFBb0QsY0FBYyx5REFBZ0IscUJBQXFCLDhEQUFxQixnQ0FBZ0MsaUJBQWlCLE1BQU0sbUJBQW1CLGdEQUFPLEVBQUU7QUFDeFQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksdURBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDLG1DQUFtQyxNQUFNO0FBQ3pDO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIscUJBQXFCLE1BQU07QUFDM0I7QUFDQTtBQU91SDtBQUN2SCIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdG9yIGZyb20gXCIuL1JlYWN0b3JcIjtcbmltcG9ydCB7IHR4LCB0eEluaXQsIGxvb2t1cCwgZ2V0T3BzLCB9IGZyb20gXCIuL2luc3RhdHhcIjtcbmltcG9ydCB3ZWFrSGFzaCBmcm9tIFwiLi91dGlscy93ZWFrSGFzaFwiO1xuaW1wb3J0IGlkIGZyb20gXCIuL3V0aWxzL3V1aWRcIjtcbmltcG9ydCBJbmRleGVkREJTdG9yYWdlIGZyb20gXCIuL0luZGV4ZWREQlN0b3JhZ2VcIjtcbmltcG9ydCBXaW5kb3dOZXR3b3JrTGlzdGVuZXIgZnJvbSBcIi4vV2luZG93TmV0d29ya0xpc3RlbmVyXCI7XG5pbXBvcnQgeyBpIH0gZnJvbSBcIi4vc2NoZW1hXCI7XG5pbXBvcnQgeyBjcmVhdGVEZXZ0b29sIH0gZnJvbSBcIi4vZGV2dG9vbFwiO1xuaW1wb3J0IHZlcnNpb24gZnJvbSBcIi4vdmVyc2lvblwiO1xuY29uc3QgZGVmYXVsdE9wZW5EZXZ0b29sID0gdHJ1ZTtcbi8vIGNvbnN0c1xuY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgICBhcGlVUkk6IFwiaHR0cHM6Ly9hcGkuaW5zdGFudGRiLmNvbVwiLFxuICAgIHdlYnNvY2tldFVSSTogXCJ3c3M6Ly9hcGkuaW5zdGFudGRiLmNvbS9ydW50aW1lL3Nlc3Npb25cIixcbn07XG4vLyBobXJcbmZ1bmN0aW9uIGluaXRHbG9iYWxJbnN0YW50Q29yZVN0b3JlKCkge1xuICAgIHZhciBfYTtcbiAgICBnbG9iYWxUaGlzLl9faW5zdGFudERiU3RvcmUgPSAoX2EgPSBnbG9iYWxUaGlzLl9faW5zdGFudERiU3RvcmUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9O1xuICAgIHJldHVybiBnbG9iYWxUaGlzLl9faW5zdGFudERiU3RvcmU7XG59XG5jb25zdCBnbG9iYWxJbnN0YW50Q29yZVN0b3JlID0gaW5pdEdsb2JhbEluc3RhbnRDb3JlU3RvcmUoKTtcbi8qKlxuICogRnVuY3Rpb25zIHRvIGxvZyB1c2VycyBpbiBhbmQgb3V0LlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3MvYXV0aFxuICovXG5jbGFzcyBBdXRoIHtcbiAgICBjb25zdHJ1Y3RvcihkYikge1xuICAgICAgICB0aGlzLmRiID0gZGI7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZW5kcyBhIG1hZ2ljIGNvZGUgdG8gdGhlIHVzZXIncyBlbWFpbCBhZGRyZXNzLlxuICAgICAgICAgKlxuICAgICAgICAgKiBPbmNlIHlvdSBzZW5kIHRoZSBtYWdpYyBjb2RlLCBzZWUge0BsaW5rIGF1dGguc2lnbkluV2l0aE1hZ2ljQ29kZX0gdG8gbGV0IHRoZVxuICAgICAgICAgKiB1c2VyIHZlcmlmeS5cbiAgICAgICAgICpcbiAgICAgICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9hdXRoXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqICBkYi5hdXRoLnNlbmRNYWdpY0NvZGUoe2VtYWlsOiBcImV4YW1wbGVAZ21haWwuY29tXCJ9KVxuICAgICAgICAgKiAgICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIuYm9keT8ubWVzc2FnZSkpXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNlbmRNYWdpY0NvZGUgPSAocGFyYW1zKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kYi5zZW5kTWFnaWNDb2RlKHBhcmFtcyk7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBWZXJpZnkgYSBtYWdpYyBjb2RlIHRoYXQgd2FzIHNlbnQgdG8gdGhlIHVzZXIncyBlbWFpbCBhZGRyZXNzLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2F1dGhcbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogIGRiLmF1dGguc2lnbkluV2l0aE1hZ2ljQ29kZSh7ZW1haWw6IFwiZXhhbXBsZUBnbWFpbC5jb21cIiwgY29kZTogXCIxMjM0NTZcIn0pXG4gICAgICAgICAqICAgICAgIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVyci5ib2R5Py5tZXNzYWdlKSlcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2lnbkluV2l0aE1hZ2ljQ29kZSA9IChwYXJhbXMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRiLnNpZ25JbldpdGhNYWdpY0NvZGUocGFyYW1zKTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNpZ24gaW4gYSB1c2VyIHdpdGggYSByZWZyZXNoIHRva2VuXG4gICAgICAgICAqXG4gICAgICAgICAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3MvYmFja2VuZCNmcm9udGVuZC1hdXRoLXNpZ24taW4td2l0aC10b2tlblxuICAgICAgICAgKlxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgIC8vIEdldCB0aGUgdG9rZW4gZnJvbSB5b3VyIGJhY2tlbmRcbiAgICAgICAgICogICBjb25zdCB0b2tlbiA9IGF3YWl0IGZldGNoKCcvc2lnbmluJywgLi4uKTtcbiAgICAgICAgICogICAvL1NpZ24gaW5cbiAgICAgICAgICogICBkYi5hdXRoLnNpZ25JbldpdGhUb2tlbih0b2tlbik7XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNpZ25JbldpdGhUb2tlbiA9ICh0b2tlbikgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGIuc2lnbkluV2l0aEN1c3RvbVRva2VuKHRva2VuKTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENyZWF0ZSBhbiBhdXRob3JpemF0aW9uIHVybCB0byBzaWduIGluIHdpdGggYW4gZXh0ZXJuYWwgcHJvdmlkZXJcbiAgICAgICAgICpcbiAgICAgICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9hdXRoXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqICAgLy8gR2V0IHRoZSBhdXRob3JpemF0aW9uIHVybCBmcm9tIHlvdXIgYmFja2VuZFxuICAgICAgICAgKiAgIGNvbnN0IHVybCA9IGRiLmF1dGguY3JlYXRlQXV0aG9yaXphdGlvblVybCh7XG4gICAgICAgICAqICAgICBjbGllbnROYW1lOiBcImdvb2dsZVwiLFxuICAgICAgICAgKiAgICAgcmVkaXJlY3RVUkw6IHdpbmRvdy5sb2NhdGlvbi5ocmVmLFxuICAgICAgICAgKiAgIH0pO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgIC8vIFB1dCBpdCBpbiBhIHNpZ24gaW4gbGlua1xuICAgICAgICAgKiAgIDxhIGhyZWY9e3VybH0+TG9nIGluIHdpdGggR29vZ2xlPC9hPlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jcmVhdGVBdXRob3JpemF0aW9uVVJMID0gKHBhcmFtcykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGIuY3JlYXRlQXV0aG9yaXphdGlvblVSTChwYXJhbXMpO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogU2lnbiBpbiB3aXRoIHRoZSBpZF90b2tlbiBmcm9tIGFuIGV4dGVybmFsIHByb3ZpZGVyIGxpa2UgR29vZ2xlXG4gICAgICAgICAqXG4gICAgICAgICAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3MvYXV0aFxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgIGRiLmF1dGhcbiAgICAgICAgICogIC5zaWduSW5XaXRoSWRUb2tlbih7XG4gICAgICAgICAqICAgIC8vIFRva2VuIGZyb20gZXh0ZXJuYWwgc2VydmljZVxuICAgICAgICAgKiAgICBpZFRva2VuOiBpZF90b2tlbixcbiAgICAgICAgICogICAgLy8gVGhlIG5hbWUgeW91IGdhdmUgdGhlIGNsaWVudCB3aGVuIHlvdSByZWdpc3RlcmVkIGl0IHdpdGggSW5zdGFudFxuICAgICAgICAgKiAgICBjbGllbnROYW1lOiBcImdvb2dsZVwiLFxuICAgICAgICAgKiAgICAvLyBUaGUgbm9uY2UsIGlmIGFueSwgdGhhdCB5b3UgdXNlZCB3aGVuIHlvdSBpbml0aWF0ZWQgdGhlIGF1dGggZmxvd1xuICAgICAgICAgKiAgICAvLyB3aXRoIHRoZSBleHRlcm5hbCBzZXJ2aWNlLlxuICAgICAgICAgKiAgICBub25jZTogeW91cl9ub25jZVxuICAgICAgICAgKiAgfSlcbiAgICAgICAgICogIC5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKGVyci5ib2R5Py5tZXNzYWdlKSk7XG4gICAgICAgICAqXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNpZ25JbldpdGhJZFRva2VuID0gKHBhcmFtcykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGIuc2lnbkluV2l0aElkVG9rZW4ocGFyYW1zKTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNpZ24gaW4gd2l0aCB0aGUgaWRfdG9rZW4gZnJvbSBhbiBleHRlcm5hbCBwcm92aWRlciBsaWtlIEdvb2dsZVxuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2F1dGhcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogICBkYi5hdXRoXG4gICAgICAgICAqICAuZXhjaGFuZ2VPQXV0aENvZGUoe1xuICAgICAgICAgKiAgICAvLyBjb2RlIHJlY2VpdmVkIGluIHJlZGlyZWN0IGZyb20gT0F1dGggY2FsbGJhY2tcbiAgICAgICAgICogICAgY29kZTogY29kZVxuICAgICAgICAgKiAgICAvLyBUaGUgUEtDRSBjb2RlX3ZlcmlmaWVyLCBpZiBhbnksIHRoYXQgeW91IHVzZWQgd2hlbiB5b3VcbiAgICAgICAgICogICAgLy8gaW5pdGlhdGVkIHRoZSBhdXRoIGZsb3dcbiAgICAgICAgICogICAgY29kZVZlcmlmaWVyOiB5b3VyX2NvZGVfdmVyaWZpZXJcbiAgICAgICAgICogIH0pXG4gICAgICAgICAqICAuY2F0Y2goKGVycikgPT4gY29uc29sZS5lcnJvcihlcnIuYm9keT8ubWVzc2FnZSkpO1xuICAgICAgICAgKlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5leGNoYW5nZU9BdXRoQ29kZSA9IChwYXJhbXMpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRiLmV4Y2hhbmdlQ29kZUZvclRva2VuKHBhcmFtcyk7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBPcGVuSUQgRGlzY292ZXJ5IHBhdGggZm9yIHVzZSB3aXRoIHRvb2xzIGxpa2VcbiAgICAgICAgICogZXhwby1hdXRoLXNlc3Npb24gdGhhdCB1c2UgYXV0by1kaXNjb3Zlcnkgb2ZcbiAgICAgICAgICogT0F1dGggcGFyYW1ldGVycy5cbiAgICAgICAgICpcbiAgICAgICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9hdXRoXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqICAgY29uc3QgZGlzY292ZXJ5ID0gdXNlQXV0b0Rpc2NvdmVyeShcbiAgICAgICAgICogICAgIGRiLmF1dGguaXNzdWVyVVJJKClcbiAgICAgICAgICogICApO1xuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5pc3N1ZXJVUkkgPSAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kYi5pc3N1ZXJVUkkoKTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFNpZ24gb3V0IHRoZSBjdXJyZW50IHVzZXJcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2lnbk91dCA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmRiLnNpZ25PdXQoKTtcbiAgICAgICAgfTtcbiAgICB9XG59XG4vKipcbiAqIEZ1bmN0aW9ucyB0byBtYW5hZ2UgZmlsZSBzdG9yYWdlLlxuICovXG5jbGFzcyBTdG9yYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihkYikge1xuICAgICAgICB0aGlzLmRiID0gZGI7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVcGxvYWRzIGZpbGUgYXQgdGhlIHByb3ZpZGVkIHBhdGguXG4gICAgICAgICAqXG4gICAgICAgICAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3Mvc3RvcmFnZVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgIGNvbnN0IFtmaWxlXSA9IGUudGFyZ2V0LmZpbGVzOyAvLyByZXN1bHQgb2YgZmlsZSBpbnB1dFxuICAgICAgICAgKiAgIGNvbnN0IGlzU3VjY2VzcyA9IGF3YWl0IGRiLnN0b3JhZ2UudXBsb2FkKCdwaG90b3MvZGVtby5wbmcnLCBmaWxlKTtcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudXBsb2FkID0gKHBhdGhuYW1lLCBmaWxlKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kYi51cGxvYWQocGF0aG5hbWUsIGZpbGUpO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQGRlcHJlY2F0ZWQgVXNlIGBkYi5zdG9yYWdlLnVwbG9hZGAgaW5zdGVhZFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5wdXQgPSB0aGlzLnVwbG9hZDtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFJldHJpZXZlcyBhIGRvd25sb2FkIFVSTCBmb3IgdGhlIHByb3ZpZGVkIHBhdGguXG4gICAgICAgICAqXG4gICAgICAgICAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3Mvc3RvcmFnZVxuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgIGNvbnN0IHVybCA9IGF3YWl0IGRiLnN0b3JhZ2UuZ2V0RG93bmxvYWRVcmwoJ3Bob3Rvcy9kZW1vLnBuZycpO1xuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5nZXREb3dubG9hZFVybCA9IChwYXRobmFtZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGIuZ2V0RG93bmxvYWRVcmwocGF0aG5hbWUpO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogRGVsZXRlcyBhIGZpbGUgYnkgcGF0aCBuYW1lLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL3N0b3JhZ2VcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogICBhd2FpdCBkYi5zdG9yYWdlLmRlbGV0ZSgncGhvdG9zL2RlbW8ucG5nJyk7XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmRlbGV0ZSA9IChwYXRobmFtZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGIuZGVsZXRlRmlsZShwYXRobmFtZSk7XG4gICAgICAgIH07XG4gICAgfVxufVxuLy8gdXRpbFxuZnVuY3Rpb24gY29lcmNlUXVlcnkobykge1xuICAgIC8vIHN0cmluZ2lmeSBhbmQgcGFyc2UgdG8gcmVtb3ZlIHVuZGVmaW5lZCB2YWx1ZXNcbiAgICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvKSk7XG59XG5jbGFzcyBJbnN0YW50Q29yZURhdGFiYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihyZWFjdG9yKSB7XG4gICAgICAgIHRoaXMudHggPSB0eEluaXQoKTtcbiAgICAgICAgdGhpcy5fcmVhY3RvciA9IHJlYWN0b3I7XG4gICAgICAgIHRoaXMuYXV0aCA9IG5ldyBBdXRoKHRoaXMuX3JlYWN0b3IpO1xuICAgICAgICB0aGlzLnN0b3JhZ2UgPSBuZXcgU3RvcmFnZSh0aGlzLl9yZWFjdG9yKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlIHRoaXMgdG8gd3JpdGUgZGF0YSEgWW91IGNhbiBjcmVhdGUsIHVwZGF0ZSwgZGVsZXRlLCBhbmQgbGluayBvYmplY3RzXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2luc3RhbWxcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogICAvLyBDcmVhdGUgYSBuZXcgb2JqZWN0IGluIHRoZSBgZ29hbHNgIG5hbWVzcGFjZVxuICAgICAqICAgY29uc3QgZ29hbElkID0gaWQoKTtcbiAgICAgKiAgIGRiLnRyYW5zYWN0KHR4LmdvYWxzW2dvYWxJZF0udXBkYXRlKHt0aXRsZTogXCJHZXQgZml0XCJ9KSlcbiAgICAgKlxuICAgICAqICAgLy8gVXBkYXRlIHRoZSB0aXRsZVxuICAgICAqICAgZGIudHJhbnNhY3QodHguZ29hbHNbZ29hbElkXS51cGRhdGUoe3RpdGxlOiBcIkdldCBzdXBlciBmaXRcIn0pKVxuICAgICAqXG4gICAgICogICAvLyBEZWxldGUgaXRcbiAgICAgKiAgIGRiLnRyYW5zYWN0KHR4LmdvYWxzW2dvYWxJZF0uZGVsZXRlKCkpXG4gICAgICpcbiAgICAgKiAgIC8vIE9yIGNyZWF0ZSBhbiBhc3NvY2lhdGlvbjpcbiAgICAgKiAgIHRvZG9JZCA9IGlkKCk7XG4gICAgICogICBkYi50cmFuc2FjdChbXG4gICAgICogICAgdHgudG9kb3NbdG9kb0lkXS51cGRhdGUoeyB0aXRsZTogJ0dvIG9uIGEgcnVuJyB9KSxcbiAgICAgKiAgICB0eC5nb2Fsc1tnb2FsSWRdLmxpbmsoe3RvZG9zOiB0b2RvSWR9KSxcbiAgICAgKiAgXSlcbiAgICAgKi9cbiAgICB0cmFuc2FjdChjaHVua3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JlYWN0b3IucHVzaFR4KGNodW5rcyk7XG4gICAgfVxuICAgIGdldExvY2FsSWQobmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhY3Rvci5nZXRMb2NhbElkKG5hbWUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBVc2UgdGhpcyB0byBxdWVyeSB5b3VyIGRhdGEhXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2luc3RhcWxcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogIC8vIGxpc3RlbiB0byBhbGwgZ29hbHNcbiAgICAgKiAgZGIuc3Vic2NyaWJlUXVlcnkoeyBnb2Fsczoge30gfSwgKHJlc3ApID0+IHtcbiAgICAgKiAgICBjb25zb2xlLmxvZyhyZXNwLmRhdGEuZ29hbHMpXG4gICAgICogIH0pXG4gICAgICpcbiAgICAgKiAgLy8gZ29hbHMgd2hlcmUgdGhlIHRpdGxlIGlzIFwiR2V0IEZpdFwiXG4gICAgICogIGRiLnN1YnNjcmliZVF1ZXJ5KFxuICAgICAqICAgIHsgZ29hbHM6IHsgJDogeyB3aGVyZTogeyB0aXRsZTogXCJHZXQgRml0XCIgfSB9IH0gfSxcbiAgICAgKiAgICAocmVzcCkgPT4ge1xuICAgICAqICAgICAgY29uc29sZS5sb2cocmVzcC5kYXRhLmdvYWxzKVxuICAgICAqICAgIH1cbiAgICAgKiAgKVxuICAgICAqXG4gICAgICogIC8vIGFsbCBnb2FscywgX2Fsb25nc2lkZV8gdGhlaXIgdG9kb3NcbiAgICAgKiAgZGIuc3Vic2NyaWJlUXVlcnkoeyBnb2FsczogeyB0b2Rvczoge30gfSB9LCAocmVzcCkgPT4ge1xuICAgICAqICAgIGNvbnNvbGUubG9nKHJlc3AuZGF0YS5nb2FscylcbiAgICAgKiAgfSk7XG4gICAgICovXG4gICAgc3Vic2NyaWJlUXVlcnkocXVlcnksIGNiKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9yZWFjdG9yLnN1YnNjcmliZVF1ZXJ5KHF1ZXJ5LCBjYik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RlbiBmb3IgdGhlIGxvZ2dlZCBpbiBzdGF0ZS4gVGhpcyBpcyB1c2VmdWxcbiAgICAgKiBmb3IgZGVjaWRpbmcgd2hlbiB0byBzaG93IGEgbG9naW4gc2NyZWVuLlxuICAgICAqXG4gICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9hdXRoXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAgIGNvbnN0IHVuc3ViID0gZGIuc3Vic2NyaWJlQXV0aCgoYXV0aCkgPT4ge1xuICAgICAqICAgICBpZiAoYXV0aC51c2VyKSB7XG4gICAgICogICAgIGNvbnNvbGUubG9nKCdsb2dnZWQgaW4gYXMnLCBhdXRoLnVzZXIuZW1haWwpXG4gICAgICogICAgfSBlbHNlIHtcbiAgICAgKiAgICAgIGNvbnNvbGUubG9nKCdsb2dnZWQgb3V0JylcbiAgICAgKiAgICB9XG4gICAgICogIH0pXG4gICAgICovXG4gICAgc3Vic2NyaWJlQXV0aChjYikge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhY3Rvci5zdWJzY3JpYmVBdXRoKGNiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdGVuIGZvciBjb25uZWN0aW9uIHN0YXR1cyBjaGFuZ2VzIHRvIEluc3RhbnQuIFRoaXMgaXMgdXNlZnVsXG4gICAgICogZm9yIGJ1aWxkaW5nIHRoaW5ncyBsaWtlIGNvbm5lY3Rpdml0eSBpbmRpY2F0b3JzXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vd3d3Lmluc3RhbnRkYi5jb20vZG9jcy9wYXR0ZXJucyNjb25uZWN0aW9uLXN0YXR1c1xuICAgICAqIEBleGFtcGxlXG4gICAgICogICBjb25zdCB1bnN1YiA9IGRiLnN1YnNjcmliZUNvbm5lY3Rpb25TdGF0dXMoKHN0YXR1cykgPT4ge1xuICAgICAqICAgICBjb25zdCBjb25uZWN0aW9uU3RhdGUgPVxuICAgICAqICAgICAgIHN0YXR1cyA9PT0gJ2Nvbm5lY3RpbmcnIHx8IHN0YXR1cyA9PT0gJ29wZW5lZCdcbiAgICAgKiAgICAgICAgID8gJ2F1dGhlbnRpY2F0aW5nJ1xuICAgICAqICAgICAgIDogc3RhdHVzID09PSAnYXV0aGVudGljYXRlZCdcbiAgICAgKiAgICAgICAgID8gJ2Nvbm5lY3RlZCdcbiAgICAgKiAgICAgICA6IHN0YXR1cyA9PT0gJ2Nsb3NlZCdcbiAgICAgKiAgICAgICAgID8gJ2Nsb3NlZCdcbiAgICAgKiAgICAgICA6IHN0YXR1cyA9PT0gJ2Vycm9yZWQnXG4gICAgICogICAgICAgICA/ICdlcnJvcmVkJ1xuICAgICAqICAgICAgIDogJ3VuZXhwZWN0ZWQgc3RhdGUnO1xuICAgICAqXG4gICAgICogICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIHN0YXR1czonLCBjb25uZWN0aW9uU3RhdGUpO1xuICAgICAqICAgfSk7XG4gICAgICovXG4gICAgc3Vic2NyaWJlQ29ubmVjdGlvblN0YXR1cyhjYikge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhY3Rvci5zdWJzY3JpYmVDb25uZWN0aW9uU3RhdHVzKGNiKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogSm9pbiBhIHJvb20gdG8gcHVibGlzaCBhbmQgc3Vic2NyaWJlIHRvIHRvcGljcyBhbmQgcHJlc2VuY2UuXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL3ByZXNlbmNlLWFuZC10b3BpY3NcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIC8vIGluaXRcbiAgICAgKiBjb25zdCBkYiA9IGluaXQoKTtcbiAgICAgKiBjb25zdCByb29tID0gZGIuam9pblJvb20ocm9vbVR5cGUsIHJvb21JZCk7XG4gICAgICogLy8gdXNhZ2VcbiAgICAgKiBjb25zdCB1bnN1YnNjcmliZVRvcGljID0gcm9vbS5zdWJzY3JpYmVUb3BpYyhcImZvb1wiLCBjb25zb2xlLmxvZyk7XG4gICAgICogY29uc3QgdW5zdWJzY3JpYmVQcmVzZW5jZSA9IHJvb20uc3Vic2NyaWJlUHJlc2VuY2Uoe30sIGNvbnNvbGUubG9nKTtcbiAgICAgKiByb29tLnB1Ymxpc2hUb3BpYyhcImhlbGxvXCIsIHsgbWVzc2FnZTogXCJoZWxsbyB3b3JsZCFcIiB9KTtcbiAgICAgKiByb29tLnB1Ymxpc2hQcmVzZW5jZSh7IG5hbWU6IFwiam9lXCIgfSk7XG4gICAgICogLy8gbGF0ZXJcbiAgICAgKiB1bnN1YnNjcmliZVByZXNlbmNlKCk7XG4gICAgICogdW5zdWJzY3JpYmVUb3BpYygpO1xuICAgICAqIHJvb20ubGVhdmVSb29tKCk7XG4gICAgICovXG4gICAgam9pblJvb20ocm9vbVR5cGUgPSBcIl9kZWZhdWx0Um9vbVR5cGVcIiwgcm9vbUlkID0gXCJfZGVmYXVsdFJvb21JZFwiKSB7XG4gICAgICAgIGNvbnN0IGxlYXZlUm9vbSA9IHRoaXMuX3JlYWN0b3Iuam9pblJvb20ocm9vbUlkKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGxlYXZlUm9vbSxcbiAgICAgICAgICAgIHN1YnNjcmliZVRvcGljOiAodG9waWMsIG9uRXZlbnQpID0+IHRoaXMuX3JlYWN0b3Iuc3Vic2NyaWJlVG9waWMocm9vbUlkLCB0b3BpYywgb25FdmVudCksXG4gICAgICAgICAgICBzdWJzY3JpYmVQcmVzZW5jZTogKG9wdHMsIG9uQ2hhbmdlKSA9PiB0aGlzLl9yZWFjdG9yLnN1YnNjcmliZVByZXNlbmNlKHJvb21UeXBlLCByb29tSWQsIG9wdHMsIG9uQ2hhbmdlKSxcbiAgICAgICAgICAgIHB1Ymxpc2hUb3BpYzogKHRvcGljLCBkYXRhKSA9PiB0aGlzLl9yZWFjdG9yLnB1Ymxpc2hUb3BpYyh7IHJvb21UeXBlLCByb29tSWQsIHRvcGljLCBkYXRhIH0pLFxuICAgICAgICAgICAgcHVibGlzaFByZXNlbmNlOiAoZGF0YSkgPT4gdGhpcy5fcmVhY3Rvci5wdWJsaXNoUHJlc2VuY2Uocm9vbVR5cGUsIHJvb21JZCwgZGF0YSksXG4gICAgICAgICAgICBnZXRQcmVzZW5jZTogKG9wdHMpID0+IHRoaXMuX3JlYWN0b3IuZ2V0UHJlc2VuY2Uocm9vbVR5cGUsIHJvb21JZCwgb3B0cyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHNodXRkb3duKCkge1xuICAgICAgICBkZWxldGUgZ2xvYmFsSW5zdGFudENvcmVTdG9yZVt0aGlzLl9yZWFjdG9yLmNvbmZpZy5hcHBJZF07XG4gICAgICAgIHRoaXMuX3JlYWN0b3Iuc2h1dGRvd24oKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXNlIHRoaXMgZm9yIG9uZS1vZmYgcXVlcmllcy5cbiAgICAgKiBSZXR1cm5zIGxvY2FsIGRhdGEgaWYgYXZhaWxhYmxlLCBvdGhlcndpc2UgZmV0Y2hlcyBmcm9tIHRoZSBzZXJ2ZXIuXG4gICAgICogQmVjYXVzZSB3ZSB3YW50IHRvIGF2b2lkIHN0YWxlIGRhdGEsIHRoaXMgbWV0aG9kIHdpbGwgdGhyb3cgYW4gZXJyb3JcbiAgICAgKiBpZiB0aGUgdXNlciBpcyBvZmZsaW5lIG9yIHRoZXJlIGlzIG5vIGFjdGl2ZSBjb25uZWN0aW9uIHRvIHRoZSBzZXJ2ZXIuXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2luc3RhcWxcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAgY29uc3QgcmVzcCA9IGF3YWl0IGRiLnF1ZXJ5T25jZSh7IGdvYWxzOiB7fSB9KTtcbiAgICAgKiAgY29uc29sZS5sb2cocmVzcC5kYXRhLmdvYWxzKVxuICAgICAqL1xuICAgIHF1ZXJ5T25jZShxdWVyeSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcmVhY3Rvci5xdWVyeU9uY2UocXVlcnkpO1xuICAgIH1cbn1cbi8qKlxuICpcbiAqIFRoZSBmaXJzdCBzdGVwOiBpbml0IHlvdXIgYXBwbGljYXRpb24hXG4gKlxuICogVmlzaXQgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2Rhc2ggdG8gZ2V0IHlvdXIgYGFwcElkYCA6KVxuICpcbiAqIEBleGFtcGxlXG4gKiAgaW1wb3J0IHsgaW5pdCB9IGZyb20gXCJAaW5zdGFudGRiL2NvcmVcIlxuICpcbiAqICBjb25zdCBkYiA9IGluaXQoeyBhcHBJZDogXCJteS1hcHAtaWRcIiB9KVxuICpcbiAqICAvLyBZb3UgY2FuIGFsc28gcHJvdmlkZSBhIHNjaGVtYSBmb3IgdHlwZSBzYWZldHkgYW5kIGVkaXRvciBhdXRvY29tcGxldGUhXG4gKlxuICogIGltcG9ydCB7IGluaXQgfSBmcm9tIFwiQGluc3RhbnRkYi9jb3JlXCJcbiAqICBpbXBvcnQgc2NoZW1hIGZyb20gXCJcIi4uL2luc3RhbnQuc2NoZW1hLnRzXCI7XG4gKlxuICogIGNvbnN0IGRiID0gaW5pdCh7IGFwcElkOiBcIm15LWFwcC1pZFwiLCBzY2hlbWEgfSlcbiAqXG4gKiAgLy8gVG8gbGVhcm4gbW9yZTogaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3MvbW9kZWxpbmctZGF0YVxuICovXG5mdW5jdGlvbiBpbml0KGNvbmZpZywgU3RvcmFnZSwgTmV0d29ya0xpc3RlbmVyLCB2ZXJzaW9ucykge1xuICAgIGNvbnN0IGV4aXN0aW5nQ2xpZW50ID0gZ2xvYmFsSW5zdGFudENvcmVTdG9yZVtjb25maWcuYXBwSWRdO1xuICAgIGlmIChleGlzdGluZ0NsaWVudCkge1xuICAgICAgICByZXR1cm4gZXhpc3RpbmdDbGllbnQ7XG4gICAgfVxuICAgIGNvbnN0IHJlYWN0b3IgPSBuZXcgUmVhY3RvcihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdENvbmZpZyksIGNvbmZpZyksIHsgY2FyZGluYWxpdHlJbmZlcmVuY2U6IGNvbmZpZy5zY2hlbWEgPyB0cnVlIDogZmFsc2UgfSksIFN0b3JhZ2UgfHwgSW5kZXhlZERCU3RvcmFnZSwgTmV0d29ya0xpc3RlbmVyIHx8IFdpbmRvd05ldHdvcmtMaXN0ZW5lciwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCAodmVyc2lvbnMgfHwge30pKSwgeyBcIkBpbnN0YW50ZGIvY29yZVwiOiB2ZXJzaW9uIH0pKTtcbiAgICBjb25zdCBjbGllbnQgPSBuZXcgSW5zdGFudENvcmVEYXRhYmFzZShyZWFjdG9yKTtcbiAgICBnbG9iYWxJbnN0YW50Q29yZVN0b3JlW2NvbmZpZy5hcHBJZF0gPSBjbGllbnQ7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgdHlwZW9mIHdpbmRvdy5sb2NhdGlvbiAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBjb25zdCBzaG93RGV2dG9vbCA9IFxuICAgICAgICAvLyBzaG93IHdpZGdldCBieSBkZWZhdWx0P1xuICAgICAgICAoXCJkZXZ0b29sXCIgaW4gY29uZmlnID8gQm9vbGVhbihjb25maWcuZGV2dG9vbCkgOiBkZWZhdWx0T3BlbkRldnRvb2wpICYmXG4gICAgICAgICAgICAvLyBvbmx5IHJ1biBvbiBsb2NhbGhvc3QgKGRldiBlbnYpXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWUgPT09IFwibG9jYWxob3N0XCIgJiZcbiAgICAgICAgICAgIC8vIHVzZWQgYnkgZGFzaCBhbmQgb3RoZXIgaW50ZXJuYWwgY29uc3VtZXJzXG4gICAgICAgICAgICAhQm9vbGVhbihnbG9iYWxUaGlzLl9ub2RldnRvb2wpO1xuICAgICAgICBpZiAoc2hvd0RldnRvb2wpIHtcbiAgICAgICAgICAgIGNyZWF0ZURldnRvb2woY29uZmlnLmFwcElkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY2xpZW50O1xufVxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICogYGluaXRfZXhwZXJpbWVudGFsYCBpcyBkZXByZWNhdGVkLiBZb3UgY2FuIHJlcGxhY2UgaXQgd2l0aCBgaW5pdGAuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBCZWZvcmVcbiAqIGltcG9ydCB7IGluaXRfZXhwZXJpbWVudGFsIH0gZnJvbSBcIkBpbnN0YW50ZGIvY29yZVwiXG4gKiBjb25zdCBkYiA9IGluaXRfZXhwZXJpbWVudGFsKHsgIC4uLiAgfSk7XG4gKlxuICogLy8gQWZ0ZXJcbiAqIGltcG9ydCB7IGluaXQgfSBmcm9tIFwiQGluc3RhbnRkYi9jb3JlXCJcbiAqIGNvbnN0IGRiID0gaW5pdCh7IC4uLiAgfSk7XG4gKi9cbmNvbnN0IGluaXRfZXhwZXJpbWVudGFsID0gaW5pdDtcbmV4cG9ydCB7IFxuLy8gYmFkYSBiaW5nIGJhZGEgYm9vbVxuaW5pdCwgaW5pdF9leHBlcmltZW50YWwsIGlkLCB0eCwgdHhJbml0LCBsb29rdXAsIFxuLy8gY2xpXG5pLCBcbi8vIHV0aWxcbmdldE9wcywgY29lcmNlUXVlcnksIHdlYWtIYXNoLCBJbmRleGVkREJTdG9yYWdlLCBXaW5kb3dOZXR3b3JrTGlzdGVuZXIsIEluc3RhbnRDb3JlRGF0YWJhc2UsIEF1dGgsIFN0b3JhZ2UsIHZlcnNpb24sIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/instaml.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/instaml.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAttrByFwdIdentName: () => (/* binding */ getAttrByFwdIdentName),\n/* harmony export */   getAttrByReverseIdentName: () => (/* binding */ getAttrByReverseIdentName),\n/* harmony export */   rewriteStep: () => (/* binding */ rewriteStep),\n/* harmony export */   transform: () => (/* binding */ transform)\n/* harmony export */ });\n/* harmony import */ var _instatx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instatx */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n\n\n\n// Rewrites optimistic attrs with the attrs we get back from the server.\nfunction rewriteStep(attrMapping, txStep) {\n    const { attrIdMap, refSwapAttrIds } = attrMapping;\n    const rewritten = [];\n    for (const part of txStep) {\n        const newValue = attrIdMap[part];\n        if (newValue) {\n            // Rewrites attr id\n            rewritten.push(newValue);\n        }\n        else if (Array.isArray(part) && part.length == 2 && attrIdMap[part[0]]) {\n            // Rewrites attr id in lookups\n            const [aid, value] = part;\n            rewritten.push([attrIdMap[aid], value]);\n        }\n        else {\n            rewritten.push(part);\n        }\n    }\n    const [action] = txStep;\n    if ((action === \"add-triple\" || action === \"retract-triple\") &&\n        refSwapAttrIds.has(txStep[2])) {\n        // Reverse links if the optimistic link attr is backwards\n        const tmp = rewritten[1];\n        rewritten[1] = rewritten[3];\n        rewritten[3] = tmp;\n    }\n    return rewritten;\n}\nfunction getAttrByFwdIdentName(attrs, inputEtype, inputIdentName) {\n    return Object.values(attrs).find((attr) => {\n        const [_id, etype, label] = attr[\"forward-identity\"];\n        return etype === inputEtype && label === inputIdentName;\n    });\n}\nfunction getAttrByReverseIdentName(attrs, inputEtype, inputIdentName) {\n    return Object.values(attrs).find((attr) => {\n        const revIdent = attr[\"reverse-identity\"];\n        if (!revIdent)\n            return false;\n        const [_id, etype, label] = revIdent;\n        return etype === inputEtype && label === inputIdentName;\n    });\n}\nfunction explodeLookupRef(eid) {\n    if (Array.isArray(eid)) {\n        return eid;\n    }\n    const entries = Object.entries(eid);\n    if (entries.length !== 1) {\n        throw new Error(\"lookup must be an object with a single unique attr and value.\");\n    }\n    return entries[0];\n}\nfunction isRefLookupIdent(attrs, etype, identName) {\n    return (identName.indexOf(\".\") !== -1 &&\n        // attr names can have `.` in them, so use the attr we find with a `.`\n        // before assuming it's a ref lookup.\n        !getAttrByFwdIdentName(attrs, etype, identName));\n}\nfunction extractRefLookupFwdName(identName) {\n    const [fwdName, idIdent, ...rest] = identName.split(\".\");\n    if (rest.length > 0 || idIdent !== \"id\") {\n        throw new Error(`${identName} is not a valid lookup attribute.`);\n    }\n    return fwdName;\n}\nfunction lookupIdentToAttr(attrs, etype, identName) {\n    if (!isRefLookupIdent(attrs, etype, identName)) {\n        return getAttrByFwdIdentName(attrs, etype, identName);\n    }\n    const fwdName = extractRefLookupFwdName(identName);\n    const refAttr = getAttrByFwdIdentName(attrs, etype, fwdName) ||\n        getAttrByReverseIdentName(attrs, etype, fwdName);\n    if (refAttr && refAttr[\"value-type\"] !== \"ref\") {\n        throw new Error(`${identName} does not reference a valid link attribute.`);\n    }\n    return refAttr;\n}\n// Returns [attr, value] for the eid if the eid is a lookup.\n// If it's a regular eid, returns null\nfunction lookupPairOfEid(eid) {\n    if (typeof eid === \"string\" && !(0,_instatx__WEBPACK_IMPORTED_MODULE_0__.isLookup)(eid)) {\n        return null;\n    }\n    return typeof eid === \"string\" && (0,_instatx__WEBPACK_IMPORTED_MODULE_0__.isLookup)(eid)\n        ? (0,_instatx__WEBPACK_IMPORTED_MODULE_0__.parseLookup)(eid)\n        : explodeLookupRef(eid);\n}\nfunction extractLookup(attrs, etype, eid) {\n    const lookupPair = lookupPairOfEid(eid);\n    if (lookupPair === null) {\n        return eid;\n    }\n    const [identName, value] = lookupPair;\n    const attr = lookupIdentToAttr(attrs, etype, identName);\n    if (!attr || !attr[\"unique?\"]) {\n        throw new Error(`${identName} is not a unique attribute.`);\n    }\n    return [attr.id, value];\n}\nfunction expandLink(attrs, [etype, eidA, obj]) {\n    const addTriples = Object.entries(obj).flatMap(([label, eidOrEids]) => {\n        const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n        const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n        const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n        return eids.map((eidB) => {\n            const txStep = fwdAttr\n                ? [\n                    \"add-triple\",\n                    extractLookup(attrs, etype, eidA),\n                    fwdAttr.id,\n                    extractLookup(attrs, fwdAttr[\"reverse-identity\"][1], eidB),\n                ]\n                : [\n                    \"add-triple\",\n                    extractLookup(attrs, revAttr[\"forward-identity\"][1], eidB),\n                    revAttr.id,\n                    extractLookup(attrs, etype, eidA),\n                ];\n            return txStep;\n        });\n    });\n    return addTriples;\n}\nfunction expandUnlink(attrs, [etype, eidA, obj]) {\n    const retractTriples = Object.entries(obj).flatMap(([label, eidOrEids]) => {\n        const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n        const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n        const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n        return eids.map((eidB) => {\n            const txStep = fwdAttr\n                ? [\n                    \"retract-triple\",\n                    extractLookup(attrs, etype, eidA),\n                    fwdAttr.id,\n                    extractLookup(attrs, fwdAttr[\"reverse-identity\"][1], eidB),\n                ]\n                : [\n                    \"retract-triple\",\n                    extractLookup(attrs, revAttr[\"forward-identity\"][1], eidB),\n                    revAttr.id,\n                    extractLookup(attrs, etype, eidA),\n                ];\n            return txStep;\n        });\n    });\n    return retractTriples;\n}\nfunction expandUpdate(attrs, [etype, eid, obj]) {\n    const lookup = extractLookup(attrs, etype, eid);\n    // id first so that we don't clobber updates on the lookup field\n    const attrTuples = [[\"id\", extractLookup(attrs, etype, eid)]]\n        .concat(Object.entries(obj))\n        .map(([identName, value]) => {\n        const attr = getAttrByFwdIdentName(attrs, etype, identName);\n        return [\"add-triple\", lookup, attr.id, value];\n    });\n    return attrTuples;\n}\nfunction expandDelete(attrs, [etype, eid]) {\n    const lookup = extractLookup(attrs, etype, eid);\n    return [[\"delete-entity\", lookup, etype]];\n}\nfunction expandDeepMerge(attrs, [etype, eid, obj]) {\n    const lookup = extractLookup(attrs, etype, eid);\n    const attrTuples = Object.entries(obj).map(([identName, value]) => {\n        const attr = getAttrByFwdIdentName(attrs, etype, identName);\n        const coercedValue = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.immutableDeepReplace)(value, undefined, null);\n        return [\"deep-merge-triple\", lookup, attr.id, coercedValue];\n    });\n    const idTuple = [\n        \"add-triple\",\n        lookup,\n        getAttrByFwdIdentName(attrs, etype, \"id\").id,\n        lookup,\n    ];\n    // id first so that we don't clobber updates on the lookup field\n    return [idTuple].concat(attrTuples);\n}\nfunction removeIdFromArgs(step) {\n    const [op, etype, eid, obj] = step;\n    if (!obj) {\n        return step;\n    }\n    const newObj = Object.assign({}, obj);\n    delete newObj.id;\n    return [op, etype, eid, newObj];\n}\nfunction toTxSteps(attrs, step) {\n    const [action, ...args] = removeIdFromArgs(step);\n    switch (action) {\n        case \"merge\":\n            return expandDeepMerge(attrs, args);\n        case \"update\":\n            return expandUpdate(attrs, args);\n        case \"link\":\n            return expandLink(attrs, args);\n        case \"unlink\":\n            return expandUnlink(attrs, args);\n        case \"delete\":\n            return expandDelete(attrs, args);\n        default:\n            throw new Error(`unsupported action ${action}`);\n    }\n}\n// ---------\n// transform\nfunction checkedDataTypeOfValueType(valueType) {\n    switch (valueType) {\n        case \"string\":\n        case \"date\":\n        case \"boolean\":\n        case \"number\":\n            return valueType;\n        default:\n            return undefined;\n    }\n}\nfunction objectPropsFromSchema(schema, etype, label) {\n    var _a, _b;\n    const attr = (_b = (_a = schema.entities[etype]) === null || _a === void 0 ? void 0 : _a.attrs) === null || _b === void 0 ? void 0 : _b[label];\n    if (label === \"id\")\n        return null;\n    if (!attr) {\n        throw new Error(`${etype}.${label} does not exist in your schema`);\n    }\n    const { unique, indexed } = attr === null || attr === void 0 ? void 0 : attr.config;\n    const checkedDataType = checkedDataTypeOfValueType(attr === null || attr === void 0 ? void 0 : attr.valueType);\n    return {\n        \"index?\": indexed,\n        \"unique?\": unique,\n        \"checked-data-type\": checkedDataType,\n    };\n}\nfunction createObjectAttr(schema, etype, label, props) {\n    const schemaObjectProps = schema\n        ? objectPropsFromSchema(schema, etype, label)\n        : null;\n    const attrId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const fwdIdentId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const fwdIdent = [fwdIdentId, etype, label];\n    return Object.assign(Object.assign({ id: attrId, \"forward-identity\": fwdIdent, \"value-type\": \"blob\", cardinality: \"one\", \"unique?\": false, \"index?\": false, isUnsynced: true }, (schemaObjectProps || {})), (props || {}));\n}\nfunction findSchemaLink(schema, etype, label) {\n    const found = Object.values(schema.links).find((x) => {\n        return ((x.forward.on === etype && x.forward.label === label) ||\n            (x.reverse.on === etype && x.reverse.label === label));\n    });\n    return found;\n}\nfunction refPropsFromSchema(schema, etype, label) {\n    const found = findSchemaLink(schema, etype, label);\n    if (!found) {\n        throw new Error(`Couldn't find the link ${etype}.${label} in your schema`);\n    }\n    const { forward, reverse } = found;\n    return {\n        \"forward-identity\": [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), forward.on, forward.label],\n        \"reverse-identity\": [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), reverse.on, reverse.label],\n        cardinality: forward.has === \"one\" ? \"one\" : \"many\",\n        \"unique?\": reverse.has === \"one\",\n    };\n}\nfunction createRefAttr(schema, etype, label, props) {\n    const schemaRefProps = schema\n        ? refPropsFromSchema(schema, etype, label)\n        : null;\n    const attrId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const fwdIdent = [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), etype, label];\n    const revIdent = [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), label, etype];\n    return Object.assign(Object.assign({ id: attrId, \"forward-identity\": fwdIdent, \"reverse-identity\": revIdent, \"value-type\": \"ref\", cardinality: \"many\", \"unique?\": false, \"index?\": false, isUnsynced: true }, (schemaRefProps || {})), (props || {}));\n}\n// Actions that have an object, e.g. not delete\nconst OBJ_ACTIONS = new Set([\"update\", \"merge\", \"link\", \"unlink\"]);\nconst REF_ACTIONS = new Set([\"link\", \"unlink\"]);\nconst UPDATE_ACTIONS = new Set([\"update\", \"merge\"]);\nconst SUPPORTS_LOOKUP_ACTIONS = new Set([\n    \"link\",\n    \"unlink\",\n    \"update\",\n    \"merge\",\n    \"delete\",\n]);\nconst lookupProps = { \"unique?\": true, \"index?\": true };\nconst refLookupProps = Object.assign(Object.assign({}, lookupProps), { cardinality: \"one\" });\nfunction lookupPairsOfOp(op) {\n    const res = [];\n    const [action, etype, eid, obj] = op;\n    if (!SUPPORTS_LOOKUP_ACTIONS.has(action)) {\n        return res;\n    }\n    const eidLookupPair = lookupPairOfEid(eid);\n    if (eidLookupPair) {\n        res.push({ etype: etype, lookupPair: eidLookupPair });\n    }\n    if (action === \"link\") {\n        for (const [label, eidOrEids] of Object.entries(obj)) {\n            const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n            for (const linkEid of eids) {\n                const linkEidLookupPair = lookupPairOfEid(linkEid);\n                if (linkEidLookupPair) {\n                    res.push({\n                        etype: etype,\n                        lookupPair: linkEidLookupPair,\n                        linkLabel: label,\n                    });\n                }\n            }\n        }\n    }\n    return res;\n}\nfunction createMissingAttrs({ attrs: existingAttrs, schema }, ops) {\n    var _a, _b;\n    const [addedIds, attrs, addOps] = [new Set(), Object.assign({}, existingAttrs), []];\n    function addAttr(attr) {\n        attrs[attr.id] = attr;\n        addOps.push([\"add-attr\", attr]);\n        addedIds.add(attr.id);\n    }\n    function addUnsynced(attr) {\n        if ((attr === null || attr === void 0 ? void 0 : attr.isUnsynced) && !addedIds.has(attr.id)) {\n            addOps.push([\"add-attr\", attr]);\n            addedIds.add(attr.id);\n        }\n    }\n    // Adds attrs needed for a ref lookup\n    function addForRef(etype, label) {\n        const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n        const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n        addUnsynced(fwdAttr);\n        addUnsynced(revAttr);\n        if (!fwdAttr && !revAttr) {\n            addAttr(createRefAttr(schema, etype, label, refLookupProps));\n        }\n    }\n    // Create attrs for lookups if we need to\n    // Do these first because otherwise we might add a non-unique attr\n    // before we get to it\n    for (const op of ops) {\n        for (const { etype, lookupPair, linkLabel } of lookupPairsOfOp(op)) {\n            const identName = lookupPair[0];\n            // We got a link eid that's a lookup, linkLabel is the label of the ident,\n            // e.g. `posts` in `link({posts: postIds})`\n            if (linkLabel) {\n                // Add our ref attr, e.g. users.posts\n                addForRef(etype, linkLabel);\n                // Figure out the link etype so we can make sure we have the attrs\n                // for the link lookup\n                const fwdAttr = getAttrByFwdIdentName(attrs, etype, linkLabel);\n                const revAttr = getAttrByReverseIdentName(attrs, etype, linkLabel);\n                addUnsynced(fwdAttr);\n                addUnsynced(revAttr);\n                const linkEtype = ((_a = fwdAttr === null || fwdAttr === void 0 ? void 0 : fwdAttr[\"reverse-identity\"]) === null || _a === void 0 ? void 0 : _a[1]) ||\n                    ((_b = revAttr === null || revAttr === void 0 ? void 0 : revAttr[\"forward-identity\"]) === null || _b === void 0 ? void 0 : _b[1]) ||\n                    linkLabel;\n                if (isRefLookupIdent(attrs, linkEtype, identName)) {\n                    addForRef(linkEtype, extractRefLookupFwdName(identName));\n                }\n                else {\n                    const attr = getAttrByFwdIdentName(attrs, linkEtype, identName);\n                    if (!attr) {\n                        addAttr(createObjectAttr(schema, linkEtype, identName, lookupProps));\n                    }\n                    addUnsynced(attr);\n                }\n            }\n            else if (isRefLookupIdent(attrs, etype, identName)) {\n                addForRef(etype, extractRefLookupFwdName(identName));\n            }\n            else {\n                const attr = getAttrByFwdIdentName(attrs, etype, identName);\n                if (!attr) {\n                    addAttr(createObjectAttr(schema, etype, identName, lookupProps));\n                }\n                addUnsynced(attr);\n            }\n        }\n    }\n    // Create object and ref attrs\n    for (const op of ops) {\n        const [action, etype, eid, obj] = op;\n        if (OBJ_ACTIONS.has(action)) {\n            const labels = Object.keys(obj);\n            labels.push(\"id\");\n            for (const label of labels) {\n                const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n                addUnsynced(fwdAttr);\n                if (UPDATE_ACTIONS.has(action)) {\n                    if (!fwdAttr) {\n                        addAttr(createObjectAttr(schema, etype, label, label === \"id\" ? { \"unique?\": true } : null));\n                    }\n                }\n                if (REF_ACTIONS.has(action)) {\n                    const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n                    if (!fwdAttr && !revAttr) {\n                        addAttr(createRefAttr(schema, etype, label));\n                    }\n                    addUnsynced(revAttr);\n                }\n            }\n        }\n    }\n    return [attrs, addOps];\n}\nfunction transform(ctx, inputChunks) {\n    const chunks = Array.isArray(inputChunks) ? inputChunks : [inputChunks];\n    const ops = chunks.flatMap((tx) => (0,_instatx__WEBPACK_IMPORTED_MODULE_0__.getOps)(tx));\n    const [newAttrs, addAttrTxSteps] = createMissingAttrs(ctx, ops);\n    const txSteps = ops.flatMap((op) => toTxSteps(newAttrs, op));\n    return [...addAttrTxSteps, ...txSteps];\n}\n//# sourceMappingURL=instaml.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/instaml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/instaql.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/instaql.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var _datalog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datalog */ \"(ssr)/./node_modules/@instantdb/core/dist/module/datalog.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./store */ \"(ssr)/./node_modules/@instantdb/core/dist/module/store.js\");\n\n\n\n// Pattern variables\n// -----------------\nlet _seed = 0;\nfunction wildcard(friendlyName) {\n    return makeVarImpl(`_${friendlyName}`, _seed++);\n}\nfunction makeVarImpl(x, level) {\n    return `?${x}-${level}`;\n}\n// Where\n// -----------------\nclass AttrNotFoundError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AttrNotFoundError\";\n    }\n}\nfunction idAttr(store, ns) {\n    const attr = _store__WEBPACK_IMPORTED_MODULE_2__.getPrimaryKeyAttr(store, ns);\n    if (!attr) {\n        throw new AttrNotFoundError(`Could not find id attr for ${ns}`);\n    }\n    return attr;\n}\nfunction defaultWhere(makeVar, store, etype, level) {\n    return [eidWhere(makeVar, store, etype, level)];\n}\nfunction eidWhere(makeVar, store, etype, level) {\n    return [\n        makeVar(etype, level),\n        idAttr(store, etype).id,\n        makeVar(etype, level),\n        makeVar(\"time\", level),\n    ];\n}\nfunction replaceInAttrPat(attrPat, needle, v) {\n    return attrPat.map((x) => (x === needle ? v : x));\n}\nfunction refAttrPat(makeVar, store, etype, level, label) {\n    const fwdAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, etype, label);\n    const revAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByReverseIdentName(store, etype, label);\n    const attr = fwdAttr || revAttr;\n    if (!attr) {\n        throw new AttrNotFoundError(`Could not find attr for ${[etype, label]}`);\n    }\n    if (attr[\"value-type\"] !== \"ref\") {\n        throw new Error(`Attr ${attr.id} is not a ref`);\n    }\n    const [_f, fwdEtype] = attr[\"forward-identity\"];\n    const [_r, revEtype] = attr[\"reverse-identity\"];\n    const nextLevel = level + 1;\n    const attrPat = fwdAttr\n        ? [\n            makeVar(fwdEtype, level),\n            attr.id,\n            makeVar(revEtype, nextLevel),\n            wildcard(\"time\"),\n        ]\n        : [\n            makeVar(fwdEtype, nextLevel),\n            attr.id,\n            makeVar(revEtype, level),\n            wildcard(\"time\"),\n        ];\n    const nextEtype = fwdAttr ? revEtype : fwdEtype;\n    const isForward = Boolean(fwdAttr);\n    return [nextEtype, nextLevel, attrPat, attr, isForward];\n}\nfunction makeLikeMatcher(caseSensitive, pattern) {\n    if (typeof pattern !== \"string\") {\n        return function likeMatcher(_value) {\n            return false;\n        };\n    }\n    const regexPattern = pattern.replace(/%/g, \".*\").replace(/_/g, \".\");\n    const regex = new RegExp(`^${regexPattern}$`, caseSensitive ? undefined : \"i\");\n    return function likeMatcher(value) {\n        if (typeof value !== \"string\") {\n            return false;\n        }\n        return regex.test(value);\n    };\n}\nfunction parseValue(attr, v) {\n    if (typeof v !== \"object\" ||\n        v.hasOwnProperty(\"$in\") ||\n        v.hasOwnProperty(\"in\")) {\n        return v;\n    }\n    const isDate = attr[\"checked-data-type\"] === \"date\";\n    if (v.hasOwnProperty(\"$gt\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function gtDate(triple) {\n                    return new Date(triple[2]) > new Date(v.$gt);\n                }\n                : function gt(triple) {\n                    return triple[2] > v.$gt;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$gte\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function gteDate(triple) {\n                    return new Date(triple[2]) >= new Date(v.$gte);\n                }\n                : function gte(triple) {\n                    return triple[2] >= v.$gte;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$lt\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function ltDate(triple) {\n                    return new Date(triple[2]) < new Date(v.$lt);\n                }\n                : function lt(triple) {\n                    return triple[2] < v.$lt;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$lte\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function lteDate(triple) {\n                    return new Date(triple[2]) <= new Date(v.$lte);\n                }\n                : function lte(triple) {\n                    return triple[2] <= v.$lte;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$like\")) {\n        const matcher = makeLikeMatcher(true, v.$like);\n        return {\n            $comparator: true,\n            $op: function like(triple) {\n                return matcher(triple[2]);\n            },\n        };\n    }\n    if (v.hasOwnProperty(\"$ilike\")) {\n        const matcher = makeLikeMatcher(false, v.$ilike);\n        return {\n            $comparator: true,\n            $op: function ilike(triple) {\n                return matcher(triple[2]);\n            },\n        };\n    }\n    return v;\n}\nfunction valueAttrPat(makeVar, store, valueEtype, valueLevel, valueLabel, v) {\n    const fwdAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, valueEtype, valueLabel);\n    const revAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByReverseIdentName(store, valueEtype, valueLabel);\n    const attr = fwdAttr || revAttr;\n    if (!attr) {\n        throw new AttrNotFoundError(`No attr for etype = ${valueEtype} label = ${valueLabel}`);\n    }\n    if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$isNull\")) {\n        const idAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, valueEtype, \"id\");\n        if (!idAttr) {\n            throw new AttrNotFoundError(`No attr for etype = ${valueEtype} label = id`);\n        }\n        return [\n            makeVar(valueEtype, valueLevel),\n            idAttr.id,\n            { $isNull: { attrId: attr.id, isNull: v.$isNull, reverse: !fwdAttr } },\n            wildcard(\"time\"),\n        ];\n    }\n    if (fwdAttr) {\n        return [\n            makeVar(valueEtype, valueLevel),\n            attr.id,\n            parseValue(attr, v),\n            wildcard(\"time\"),\n        ];\n    }\n    return [v, attr.id, makeVar(valueEtype, valueLevel), wildcard(\"time\")];\n}\nfunction refAttrPats(makeVar, store, etype, level, refsPath) {\n    const [lastEtype, lastLevel, attrPats] = refsPath.reduce((acc, label) => {\n        const [etype, level, attrPats] = acc;\n        const [nextEtype, nextLevel, attrPat] = refAttrPat(makeVar, store, etype, level, label);\n        return [nextEtype, nextLevel, [...attrPats, attrPat]];\n    }, [etype, level, []]);\n    return [lastEtype, lastLevel, attrPats];\n}\nfunction whereCondAttrPats(makeVar, store, etype, level, path, v) {\n    const refsPath = path.slice(0, path.length - 1);\n    const valueLabel = path[path.length - 1];\n    const [lastEtype, lastLevel, refPats] = refAttrPats(makeVar, store, etype, level, refsPath);\n    const valuePat = valueAttrPat(makeVar, store, lastEtype, lastLevel, valueLabel, v);\n    return refPats.concat([valuePat]);\n}\nfunction withJoin(where, join) {\n    return join ? [join].concat(where) : where;\n}\nfunction isOrClauses([k, v]) {\n    return k === \"or\" && Array.isArray(v);\n}\nfunction isAndClauses([k, v]) {\n    return k === \"and\" && Array.isArray(v);\n}\n// Creates a makeVar that will namespace symbols for or clauses\n// to prevent conflicts, except for the base etype\nfunction genMakeVar(baseMakeVar, etype, orIdx) {\n    return (x, lvl) => {\n        if (x == etype) {\n            return baseMakeVar(x, lvl);\n        }\n        return `${baseMakeVar(x, lvl)}-${orIdx}`;\n    };\n}\nfunction parseWhereClauses(makeVar, clauseType /* 'or' | 'and' */, store, etype, level, whereValue) {\n    const patterns = whereValue.map((w, i) => {\n        const makeNamespacedVar = genMakeVar(makeVar, etype, i);\n        return parseWhere(makeNamespacedVar, store, etype, level, w);\n    });\n    const joinSym = makeVar(etype, level);\n    return { [clauseType]: { patterns, joinSym } };\n}\n// Given a path, returns a list of paths leading up to this path:\n// growPath([1, 2, 3]) -> [[1], [1, 2], [1, 2, 3]]\nfunction growPath(path) {\n    const ret = [];\n    for (let i = 1; i <= path.length; i++) {\n        ret.push(path.slice(0, i));\n    }\n    return ret;\n}\n// Returns array of pattern arrays that should be grouped in OR\n// to capture any intermediate nulls\nfunction whereCondAttrPatsForNullIsTrue(makeVar, store, etype, level, path) {\n    return growPath(path).map((path) => whereCondAttrPats(makeVar, store, etype, level, path, { $isNull: true }));\n}\nfunction parseWhere(makeVar, store, etype, level, where) {\n    return Object.entries(where).flatMap(([k, v]) => {\n        if (isOrClauses([k, v])) {\n            return parseWhereClauses(makeVar, \"or\", store, etype, level, v);\n        }\n        if (isAndClauses([k, v])) {\n            return parseWhereClauses(makeVar, \"and\", store, etype, level, v);\n        }\n        const path = k.split(\".\");\n        if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$not\")) {\n            // `$not` won't pick up entities that are missing the attr, so we\n            // add in a `$isNull` to catch those too.\n            const notPats = whereCondAttrPats(makeVar, store, etype, level, path, v);\n            const nilPats = whereCondAttrPatsForNullIsTrue(makeVar, store, etype, level, path);\n            return [\n                {\n                    or: {\n                        patterns: [notPats, ...nilPats],\n                        joinSym: makeVar(etype, level),\n                    },\n                },\n            ];\n        }\n        if ((v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$isNull\")) && v.$isNull === true && path.length > 1) {\n            // Make sure we're capturing all of the intermediate paths that might be null\n            // by checking for null at each step along the path\n            return [\n                {\n                    or: {\n                        patterns: whereCondAttrPatsForNullIsTrue(makeVar, store, etype, level, path),\n                        joinSym: makeVar(etype, level),\n                    },\n                },\n            ];\n        }\n        return whereCondAttrPats(makeVar, store, etype, level, path, v);\n    });\n}\nfunction makeWhere(store, etype, level, where) {\n    const makeVar = makeVarImpl;\n    if (!where) {\n        return defaultWhere(makeVar, store, etype, level);\n    }\n    const parsedWhere = parseWhere(makeVar, store, etype, level, where);\n    return parsedWhere.concat(defaultWhere(makeVar, store, etype, level));\n}\n// Find\n// -----------------\nfunction makeFind(makeVar, etype, level) {\n    return [makeVar(etype, level), makeVar(\"time\", level)];\n}\n// extendObjects\n// -----------------\nfunction makeJoin(makeVar, store, etype, level, label, eid) {\n    const [nextEtype, nextLevel, pat, attr, isForward] = refAttrPat(makeVar, store, etype, level, label);\n    const actualized = replaceInAttrPat(pat, makeVar(etype, level), eid);\n    return [nextEtype, nextLevel, actualized, attr, isForward];\n}\nfunction extendObjects(makeVar, store, { etype, level, form }, objects) {\n    const childQueries = Object.keys(form).filter((c) => c !== \"$\");\n    if (!childQueries.length) {\n        return Object.values(objects);\n    }\n    return Object.entries(objects).map(function extendChildren([eid, parent]) {\n        const childResults = childQueries.map(function getChildResult(label) {\n            var _a, _b, _c;\n            const isSingular = Boolean(store.cardinalityInference &&\n                ((_c = (_b = (_a = store.linkIndex) === null || _a === void 0 ? void 0 : _a[etype]) === null || _b === void 0 ? void 0 : _b[label]) === null || _c === void 0 ? void 0 : _c.isSingular));\n            try {\n                const [nextEtype, nextLevel, join] = makeJoin(makeVar, store, etype, level, label, eid);\n                const childrenArray = queryOne(store, {\n                    etype: nextEtype,\n                    level: nextLevel,\n                    form: form[label],\n                    join,\n                });\n                const childOrChildren = isSingular ? childrenArray[0] : childrenArray;\n                return { [label]: childOrChildren };\n            }\n            catch (e) {\n                if (e instanceof AttrNotFoundError) {\n                    return { [label]: isSingular ? undefined : [] };\n                }\n                throw e;\n            }\n        });\n        return childResults.reduce(function reduceChildren(parent, child) {\n            return Object.assign(Object.assign({}, parent), child);\n        }, parent);\n    });\n}\n// resolveObjects\n// -----------------\nfunction shouldIgnoreAttr(attrs, id) {\n    const attr = attrs[id];\n    return attr[\"value-type\"] === \"ref\" && attr[\"forward-identity\"][2] !== \"id\";\n}\nfunction compareOrder([id_a, v_a], [id_b, v_b]) {\n    if (v_a === v_b || (v_a == null && v_b == null)) {\n        return (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_1__.uuidCompare)(id_a, id_b);\n    }\n    if (v_b == null) {\n        return 1;\n    }\n    if (v_a == null) {\n        return -1;\n    }\n    if (v_a > v_b) {\n        return 1;\n    }\n    return -1;\n}\nfunction comparableDate(x) {\n    if (x == null) {\n        return x;\n    }\n    return new Date(x).getTime();\n}\nfunction isBefore(startCursor, orderAttr, direction, idVec) {\n    var _a;\n    const [c_e, _c_a, c_v, c_t] = startCursor;\n    const compareVal = direction === \"desc\" ? 1 : -1;\n    if (((_a = orderAttr[\"forward-identity\"]) === null || _a === void 0 ? void 0 : _a[2]) === \"id\") {\n        return compareOrder(idVec, [c_e, c_t]) === compareVal;\n    }\n    const [e, v] = idVec;\n    const v_new = orderAttr[\"checked-data-type\"] === \"date\" ? comparableDate(v) : v;\n    const c_v_new = orderAttr[\"checked-data-type\"] === \"date\" ? comparableDate(c_v) : c_v;\n    return compareOrder([e, v_new], [c_e, c_v_new]) === compareVal;\n}\nfunction orderAttrFromCursor(store, cursor) {\n    const cursorAttrId = cursor[1];\n    return store.attrs[cursorAttrId];\n}\nfunction orderAttrFromOrder(store, etype, order) {\n    const label = Object.keys(order)[0];\n    return _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, etype, label);\n}\nfunction getOrderAttr(store, etype, cursor, order) {\n    if (cursor) {\n        return orderAttrFromCursor(store, cursor);\n    }\n    if (order) {\n        return orderAttrFromOrder(store, etype, order);\n    }\n}\nfunction runDataloadAndReturnObjects(store, etype, direction, pageInfo, order, dq) {\n    var _a;\n    let idVecs = (0,_datalog__WEBPACK_IMPORTED_MODULE_0__.query)(store, dq);\n    const startCursor = pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo[\"start-cursor\"];\n    const orderAttr = getOrderAttr(store, etype, startCursor, order);\n    if (orderAttr && ((_a = orderAttr === null || orderAttr === void 0 ? void 0 : orderAttr[\"forward-identity\"]) === null || _a === void 0 ? void 0 : _a[2]) !== \"id\") {\n        const isDate = orderAttr[\"checked-data-type\"] === \"date\";\n        const a = orderAttr.id;\n        idVecs = idVecs.map(([id]) => {\n            var _a, _b, _c, _d, _e;\n            // order attr is required to be cardinality one, so there will\n            // be at most one value here\n            let v = (_e = (_d = (_c = (_b = (_a = store.eav.get(id)) === null || _a === void 0 ? void 0 : _a.get(a)) === null || _b === void 0 ? void 0 : _b.values()) === null || _c === void 0 ? void 0 : _c.next()) === null || _d === void 0 ? void 0 : _d.value) === null || _e === void 0 ? void 0 : _e[2];\n            if (isDate) {\n                v = comparableDate(v);\n            }\n            return [id, v];\n        });\n    }\n    idVecs.sort(direction === \"asc\"\n        ? function compareIdVecs(a, b) {\n            return compareOrder(a, b);\n        }\n        : function compareIdVecs(a, b) {\n            return compareOrder(b, a);\n        });\n    let objects = {};\n    for (const idVec of idVecs) {\n        const [id] = idVec;\n        if (objects[id]) {\n            continue;\n        }\n        if (startCursor &&\n            orderAttr &&\n            isBefore(startCursor, orderAttr, direction, idVec)) {\n            continue;\n        }\n        const obj = _store__WEBPACK_IMPORTED_MODULE_2__.getAsObject(store, etype, id);\n        if (obj) {\n            objects[id] = obj;\n        }\n    }\n    return objects;\n}\nfunction determineOrder(form) {\n    var _a;\n    const orderOpts = (_a = form.$) === null || _a === void 0 ? void 0 : _a.order;\n    if (!orderOpts) {\n        return \"asc\";\n    }\n    return orderOpts[Object.keys(orderOpts)[0]] || \"asc\";\n}\n/**\n * Given a query like:\n *\n * {\n *   users: {\n *     $: { where: { name: \"Joe\" } },\n *   },\n * };\n *\n * `resolveObjects`, turns where clause: `{ name: \"Joe\" }`\n * into a datalog query. We then run the datalog query,\n * and reduce all the triples into objects.\n */\nfunction resolveObjects(store, { etype, level, form, join, pageInfo }) {\n    var _a, _b, _c, _d, _e, _g, _h, _j;\n    const limit = ((_a = form.$) === null || _a === void 0 ? void 0 : _a.limit) || ((_b = form.$) === null || _b === void 0 ? void 0 : _b.first) || ((_c = form.$) === null || _c === void 0 ? void 0 : _c.last);\n    const offset = (_d = form.$) === null || _d === void 0 ? void 0 : _d.offset;\n    const before = (_e = form.$) === null || _e === void 0 ? void 0 : _e.before;\n    const after = (_g = form.$) === null || _g === void 0 ? void 0 : _g.after;\n    const order = (_h = form.$) === null || _h === void 0 ? void 0 : _h.order;\n    // Wait for server to tell us where we start if we don't start from the beginning\n    if ((offset || before || after) && (!pageInfo || !pageInfo[\"start-cursor\"])) {\n        return [];\n    }\n    const where = withJoin(makeWhere(store, etype, level, (_j = form.$) === null || _j === void 0 ? void 0 : _j.where), join);\n    const find = makeFind(makeVarImpl, etype, level);\n    const objs = runDataloadAndReturnObjects(store, etype, determineOrder(form), pageInfo, order, { where, find });\n    if (limit != null) {\n        const entries = Object.entries(objs);\n        if (entries.length <= limit) {\n            return objs;\n        }\n        return Object.fromEntries(entries.slice(0, limit));\n    }\n    return objs;\n}\n/**\n * It's possible that we query\n * for an attribute that doesn't exist yet.\n *\n * { users: { $: { where: { nonExistentProperty: \"foo\" } } } }\n *\n * This swallows the missing attr error and returns\n * an empty result instead\n */\nfunction guardedResolveObjects(store, opts) {\n    try {\n        return resolveObjects(store, opts);\n    }\n    catch (e) {\n        if (e instanceof AttrNotFoundError) {\n            return {};\n        }\n        throw e;\n    }\n}\n/**\n * Given a query like:\n *\n * {\n *   users: {\n *     $: { where: { name: \"Joe\" } },\n *     posts: {},\n *   },\n * };\n *\n * `guardResolveObjects` will return the relevant `users` objects\n * `extendObjects` will then extend each `user` object with relevant `posts`.\n */\nfunction queryOne(store, opts) {\n    const objects = guardedResolveObjects(store, opts);\n    return extendObjects(makeVarImpl, store, opts, objects);\n}\nfunction formatPageInfo(pageInfo) {\n    const res = {};\n    for (const [k, v] of Object.entries(pageInfo)) {\n        res[k] = {\n            startCursor: v[\"start-cursor\"],\n            endCursor: v[\"end-cursor\"],\n            hasNextPage: v[\"has-next-page?\"],\n            hasPreviousPage: v[\"has-previous-page?\"],\n        };\n    }\n    return res;\n}\nfunction query({ store, pageInfo, aggregate }, q) {\n    const data = Object.keys(q).reduce(function reduceResult(res, k) {\n        if (aggregate === null || aggregate === void 0 ? void 0 : aggregate[k]) {\n            // Aggregate doesn't return any join rows and has no children,\n            // so don't bother querying further\n            return res;\n        }\n        res[k] = queryOne(store, {\n            etype: k,\n            form: q[k],\n            level: 0,\n            pageInfo: pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo[k],\n        });\n        return res;\n    }, {});\n    const result = { data };\n    if (pageInfo) {\n        result.pageInfo = formatPageInfo(pageInfo);\n    }\n    if (aggregate) {\n        result.aggregate = aggregate;\n    }\n    return result;\n}\n//# sourceMappingURL=instaql.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2luc3RhcWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRDtBQUNQO0FBQ2Q7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QztBQUNBO0FBQ0EsZUFBZSxFQUFFLEdBQUcsTUFBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixxREFBbUI7QUFDcEM7QUFDQSxrRUFBa0UsR0FBRztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseURBQXVCO0FBQzNDLG9CQUFvQiw2REFBMkI7QUFDL0M7QUFDQTtBQUNBLCtEQUErRCxlQUFlO0FBQzlFO0FBQ0E7QUFDQSxnQ0FBZ0MsU0FBUztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxhQUFhO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseURBQXVCO0FBQzNDLG9CQUFvQiw2REFBMkI7QUFDL0M7QUFDQTtBQUNBLDJEQUEyRCxZQUFZLFVBQVUsV0FBVztBQUM1RjtBQUNBO0FBQ0EsdUJBQXVCLHlEQUF1QjtBQUM5QztBQUNBLCtEQUErRCxZQUFZO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxXQUFXLHlEQUF5RDtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0JBQW9CLEdBQUcsTUFBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdHQUFnRyxlQUFlO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLG9CQUFvQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsaURBQWlEO0FBQ2pELFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx3REFBVztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlEQUF1QjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLCtDQUFZO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQ0FBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUyxlQUFlO0FBQ3BDLE1BQU07QUFDTjtBQUNBO0FBQ0EsNENBQTRDLGFBQWE7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLG9DQUFvQztBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvR0FBb0csYUFBYTtBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssU0FBUyxLQUFLLFNBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksU0FBUyxlQUFlO0FBQ3BDLGdCQUFnQjtBQUNoQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2UsaUJBQWlCLDRCQUE0QjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsS0FBSyxJQUFJO0FBQ1QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXGluc3RhcWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcXVlcnkgYXMgZGF0YWxvZ1F1ZXJ5IH0gZnJvbSBcIi4vZGF0YWxvZ1wiO1xuaW1wb3J0IHsgdXVpZENvbXBhcmUgfSBmcm9tIFwiLi91dGlscy91dWlkXCI7XG5pbXBvcnQgKiBhcyBzIGZyb20gXCIuL3N0b3JlXCI7XG4vLyBQYXR0ZXJuIHZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbmxldCBfc2VlZCA9IDA7XG5mdW5jdGlvbiB3aWxkY2FyZChmcmllbmRseU5hbWUpIHtcbiAgICByZXR1cm4gbWFrZVZhckltcGwoYF8ke2ZyaWVuZGx5TmFtZX1gLCBfc2VlZCsrKTtcbn1cbmZ1bmN0aW9uIG1ha2VWYXJJbXBsKHgsIGxldmVsKSB7XG4gICAgcmV0dXJuIGA/JHt4fS0ke2xldmVsfWA7XG59XG4vLyBXaGVyZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbmNsYXNzIEF0dHJOb3RGb3VuZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiQXR0ck5vdEZvdW5kRXJyb3JcIjtcbiAgICB9XG59XG5mdW5jdGlvbiBpZEF0dHIoc3RvcmUsIG5zKSB7XG4gICAgY29uc3QgYXR0ciA9IHMuZ2V0UHJpbWFyeUtleUF0dHIoc3RvcmUsIG5zKTtcbiAgICBpZiAoIWF0dHIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEF0dHJOb3RGb3VuZEVycm9yKGBDb3VsZCBub3QgZmluZCBpZCBhdHRyIGZvciAke25zfWApO1xuICAgIH1cbiAgICByZXR1cm4gYXR0cjtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRXaGVyZShtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsKSB7XG4gICAgcmV0dXJuIFtlaWRXaGVyZShtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsKV07XG59XG5mdW5jdGlvbiBlaWRXaGVyZShtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgbWFrZVZhcihldHlwZSwgbGV2ZWwpLFxuICAgICAgICBpZEF0dHIoc3RvcmUsIGV0eXBlKS5pZCxcbiAgICAgICAgbWFrZVZhcihldHlwZSwgbGV2ZWwpLFxuICAgICAgICBtYWtlVmFyKFwidGltZVwiLCBsZXZlbCksXG4gICAgXTtcbn1cbmZ1bmN0aW9uIHJlcGxhY2VJbkF0dHJQYXQoYXR0clBhdCwgbmVlZGxlLCB2KSB7XG4gICAgcmV0dXJuIGF0dHJQYXQubWFwKCh4KSA9PiAoeCA9PT0gbmVlZGxlID8gdiA6IHgpKTtcbn1cbmZ1bmN0aW9uIHJlZkF0dHJQYXQobWFrZVZhciwgc3RvcmUsIGV0eXBlLCBsZXZlbCwgbGFiZWwpIHtcbiAgICBjb25zdCBmd2RBdHRyID0gcy5nZXRBdHRyQnlGd2RJZGVudE5hbWUoc3RvcmUsIGV0eXBlLCBsYWJlbCk7XG4gICAgY29uc3QgcmV2QXR0ciA9IHMuZ2V0QXR0ckJ5UmV2ZXJzZUlkZW50TmFtZShzdG9yZSwgZXR5cGUsIGxhYmVsKTtcbiAgICBjb25zdCBhdHRyID0gZndkQXR0ciB8fCByZXZBdHRyO1xuICAgIGlmICghYXR0cikge1xuICAgICAgICB0aHJvdyBuZXcgQXR0ck5vdEZvdW5kRXJyb3IoYENvdWxkIG5vdCBmaW5kIGF0dHIgZm9yICR7W2V0eXBlLCBsYWJlbF19YCk7XG4gICAgfVxuICAgIGlmIChhdHRyW1widmFsdWUtdHlwZVwiXSAhPT0gXCJyZWZcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEF0dHIgJHthdHRyLmlkfSBpcyBub3QgYSByZWZgKTtcbiAgICB9XG4gICAgY29uc3QgW19mLCBmd2RFdHlwZV0gPSBhdHRyW1wiZm9yd2FyZC1pZGVudGl0eVwiXTtcbiAgICBjb25zdCBbX3IsIHJldkV0eXBlXSA9IGF0dHJbXCJyZXZlcnNlLWlkZW50aXR5XCJdO1xuICAgIGNvbnN0IG5leHRMZXZlbCA9IGxldmVsICsgMTtcbiAgICBjb25zdCBhdHRyUGF0ID0gZndkQXR0clxuICAgICAgICA/IFtcbiAgICAgICAgICAgIG1ha2VWYXIoZndkRXR5cGUsIGxldmVsKSxcbiAgICAgICAgICAgIGF0dHIuaWQsXG4gICAgICAgICAgICBtYWtlVmFyKHJldkV0eXBlLCBuZXh0TGV2ZWwpLFxuICAgICAgICAgICAgd2lsZGNhcmQoXCJ0aW1lXCIpLFxuICAgICAgICBdXG4gICAgICAgIDogW1xuICAgICAgICAgICAgbWFrZVZhcihmd2RFdHlwZSwgbmV4dExldmVsKSxcbiAgICAgICAgICAgIGF0dHIuaWQsXG4gICAgICAgICAgICBtYWtlVmFyKHJldkV0eXBlLCBsZXZlbCksXG4gICAgICAgICAgICB3aWxkY2FyZChcInRpbWVcIiksXG4gICAgICAgIF07XG4gICAgY29uc3QgbmV4dEV0eXBlID0gZndkQXR0ciA/IHJldkV0eXBlIDogZndkRXR5cGU7XG4gICAgY29uc3QgaXNGb3J3YXJkID0gQm9vbGVhbihmd2RBdHRyKTtcbiAgICByZXR1cm4gW25leHRFdHlwZSwgbmV4dExldmVsLCBhdHRyUGF0LCBhdHRyLCBpc0ZvcndhcmRdO1xufVxuZnVuY3Rpb24gbWFrZUxpa2VNYXRjaGVyKGNhc2VTZW5zaXRpdmUsIHBhdHRlcm4pIHtcbiAgICBpZiAodHlwZW9mIHBhdHRlcm4gIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGxpa2VNYXRjaGVyKF92YWx1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCByZWdleFBhdHRlcm4gPSBwYXR0ZXJuLnJlcGxhY2UoLyUvZywgXCIuKlwiKS5yZXBsYWNlKC9fL2csIFwiLlwiKTtcbiAgICBjb25zdCByZWdleCA9IG5ldyBSZWdFeHAoYF4ke3JlZ2V4UGF0dGVybn0kYCwgY2FzZVNlbnNpdGl2ZSA/IHVuZGVmaW5lZCA6IFwiaVwiKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gbGlrZU1hdGNoZXIodmFsdWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZWdleC50ZXN0KHZhbHVlKTtcbiAgICB9O1xufVxuZnVuY3Rpb24gcGFyc2VWYWx1ZShhdHRyLCB2KSB7XG4gICAgaWYgKHR5cGVvZiB2ICE9PSBcIm9iamVjdFwiIHx8XG4gICAgICAgIHYuaGFzT3duUHJvcGVydHkoXCIkaW5cIikgfHxcbiAgICAgICAgdi5oYXNPd25Qcm9wZXJ0eShcImluXCIpKSB7XG4gICAgICAgIHJldHVybiB2O1xuICAgIH1cbiAgICBjb25zdCBpc0RhdGUgPSBhdHRyW1wiY2hlY2tlZC1kYXRhLXR5cGVcIl0gPT09IFwiZGF0ZVwiO1xuICAgIGlmICh2Lmhhc093blByb3BlcnR5KFwiJGd0XCIpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkY29tcGFyYXRvcjogdHJ1ZSxcbiAgICAgICAgICAgICRvcDogaXNEYXRlXG4gICAgICAgICAgICAgICAgPyBmdW5jdGlvbiBndERhdGUodHJpcGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSh0cmlwbGVbMl0pID4gbmV3IERhdGUodi4kZ3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA6IGZ1bmN0aW9uIGd0KHRyaXBsZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJpcGxlWzJdID4gdi4kZ3Q7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHYuaGFzT3duUHJvcGVydHkoXCIkZ3RlXCIpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkY29tcGFyYXRvcjogdHJ1ZSxcbiAgICAgICAgICAgICRvcDogaXNEYXRlXG4gICAgICAgICAgICAgICAgPyBmdW5jdGlvbiBndGVEYXRlKHRyaXBsZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IERhdGUodHJpcGxlWzJdKSA+PSBuZXcgRGF0ZSh2LiRndGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA6IGZ1bmN0aW9uIGd0ZSh0cmlwbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyaXBsZVsyXSA+PSB2LiRndGU7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHYuaGFzT3duUHJvcGVydHkoXCIkbHRcIikpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICRjb21wYXJhdG9yOiB0cnVlLFxuICAgICAgICAgICAgJG9wOiBpc0RhdGVcbiAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uIGx0RGF0ZSh0cmlwbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHRyaXBsZVsyXSkgPCBuZXcgRGF0ZSh2LiRsdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogZnVuY3Rpb24gbHQodHJpcGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cmlwbGVbMl0gPCB2LiRsdDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAodi5oYXNPd25Qcm9wZXJ0eShcIiRsdGVcIikpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICRjb21wYXJhdG9yOiB0cnVlLFxuICAgICAgICAgICAgJG9wOiBpc0RhdGVcbiAgICAgICAgICAgICAgICA/IGZ1bmN0aW9uIGx0ZURhdGUodHJpcGxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZSh0cmlwbGVbMl0pIDw9IG5ldyBEYXRlKHYuJGx0ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDogZnVuY3Rpb24gbHRlKHRyaXBsZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJpcGxlWzJdIDw9IHYuJGx0ZTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAodi5oYXNPd25Qcm9wZXJ0eShcIiRsaWtlXCIpKSB7XG4gICAgICAgIGNvbnN0IG1hdGNoZXIgPSBtYWtlTGlrZU1hdGNoZXIodHJ1ZSwgdi4kbGlrZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkY29tcGFyYXRvcjogdHJ1ZSxcbiAgICAgICAgICAgICRvcDogZnVuY3Rpb24gbGlrZSh0cmlwbGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2hlcih0cmlwbGVbMl0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHYuaGFzT3duUHJvcGVydHkoXCIkaWxpa2VcIikpIHtcbiAgICAgICAgY29uc3QgbWF0Y2hlciA9IG1ha2VMaWtlTWF0Y2hlcihmYWxzZSwgdi4kaWxpa2UpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgJGNvbXBhcmF0b3I6IHRydWUsXG4gICAgICAgICAgICAkb3A6IGZ1bmN0aW9uIGlsaWtlKHRyaXBsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBtYXRjaGVyKHRyaXBsZVsyXSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdjtcbn1cbmZ1bmN0aW9uIHZhbHVlQXR0clBhdChtYWtlVmFyLCBzdG9yZSwgdmFsdWVFdHlwZSwgdmFsdWVMZXZlbCwgdmFsdWVMYWJlbCwgdikge1xuICAgIGNvbnN0IGZ3ZEF0dHIgPSBzLmdldEF0dHJCeUZ3ZElkZW50TmFtZShzdG9yZSwgdmFsdWVFdHlwZSwgdmFsdWVMYWJlbCk7XG4gICAgY29uc3QgcmV2QXR0ciA9IHMuZ2V0QXR0ckJ5UmV2ZXJzZUlkZW50TmFtZShzdG9yZSwgdmFsdWVFdHlwZSwgdmFsdWVMYWJlbCk7XG4gICAgY29uc3QgYXR0ciA9IGZ3ZEF0dHIgfHwgcmV2QXR0cjtcbiAgICBpZiAoIWF0dHIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEF0dHJOb3RGb3VuZEVycm9yKGBObyBhdHRyIGZvciBldHlwZSA9ICR7dmFsdWVFdHlwZX0gbGFiZWwgPSAke3ZhbHVlTGFiZWx9YCk7XG4gICAgfVxuICAgIGlmICh2ID09PSBudWxsIHx8IHYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHYuaGFzT3duUHJvcGVydHkoXCIkaXNOdWxsXCIpKSB7XG4gICAgICAgIGNvbnN0IGlkQXR0ciA9IHMuZ2V0QXR0ckJ5RndkSWRlbnROYW1lKHN0b3JlLCB2YWx1ZUV0eXBlLCBcImlkXCIpO1xuICAgICAgICBpZiAoIWlkQXR0cikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEF0dHJOb3RGb3VuZEVycm9yKGBObyBhdHRyIGZvciBldHlwZSA9ICR7dmFsdWVFdHlwZX0gbGFiZWwgPSBpZGApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBtYWtlVmFyKHZhbHVlRXR5cGUsIHZhbHVlTGV2ZWwpLFxuICAgICAgICAgICAgaWRBdHRyLmlkLFxuICAgICAgICAgICAgeyAkaXNOdWxsOiB7IGF0dHJJZDogYXR0ci5pZCwgaXNOdWxsOiB2LiRpc051bGwsIHJldmVyc2U6ICFmd2RBdHRyIH0gfSxcbiAgICAgICAgICAgIHdpbGRjYXJkKFwidGltZVwiKSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgaWYgKGZ3ZEF0dHIpIHtcbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIG1ha2VWYXIodmFsdWVFdHlwZSwgdmFsdWVMZXZlbCksXG4gICAgICAgICAgICBhdHRyLmlkLFxuICAgICAgICAgICAgcGFyc2VWYWx1ZShhdHRyLCB2KSxcbiAgICAgICAgICAgIHdpbGRjYXJkKFwidGltZVwiKSxcbiAgICAgICAgXTtcbiAgICB9XG4gICAgcmV0dXJuIFt2LCBhdHRyLmlkLCBtYWtlVmFyKHZhbHVlRXR5cGUsIHZhbHVlTGV2ZWwpLCB3aWxkY2FyZChcInRpbWVcIildO1xufVxuZnVuY3Rpb24gcmVmQXR0clBhdHMobWFrZVZhciwgc3RvcmUsIGV0eXBlLCBsZXZlbCwgcmVmc1BhdGgpIHtcbiAgICBjb25zdCBbbGFzdEV0eXBlLCBsYXN0TGV2ZWwsIGF0dHJQYXRzXSA9IHJlZnNQYXRoLnJlZHVjZSgoYWNjLCBsYWJlbCkgPT4ge1xuICAgICAgICBjb25zdCBbZXR5cGUsIGxldmVsLCBhdHRyUGF0c10gPSBhY2M7XG4gICAgICAgIGNvbnN0IFtuZXh0RXR5cGUsIG5leHRMZXZlbCwgYXR0clBhdF0gPSByZWZBdHRyUGF0KG1ha2VWYXIsIHN0b3JlLCBldHlwZSwgbGV2ZWwsIGxhYmVsKTtcbiAgICAgICAgcmV0dXJuIFtuZXh0RXR5cGUsIG5leHRMZXZlbCwgWy4uLmF0dHJQYXRzLCBhdHRyUGF0XV07XG4gICAgfSwgW2V0eXBlLCBsZXZlbCwgW11dKTtcbiAgICByZXR1cm4gW2xhc3RFdHlwZSwgbGFzdExldmVsLCBhdHRyUGF0c107XG59XG5mdW5jdGlvbiB3aGVyZUNvbmRBdHRyUGF0cyhtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsLCBwYXRoLCB2KSB7XG4gICAgY29uc3QgcmVmc1BhdGggPSBwYXRoLnNsaWNlKDAsIHBhdGgubGVuZ3RoIC0gMSk7XG4gICAgY29uc3QgdmFsdWVMYWJlbCA9IHBhdGhbcGF0aC5sZW5ndGggLSAxXTtcbiAgICBjb25zdCBbbGFzdEV0eXBlLCBsYXN0TGV2ZWwsIHJlZlBhdHNdID0gcmVmQXR0clBhdHMobWFrZVZhciwgc3RvcmUsIGV0eXBlLCBsZXZlbCwgcmVmc1BhdGgpO1xuICAgIGNvbnN0IHZhbHVlUGF0ID0gdmFsdWVBdHRyUGF0KG1ha2VWYXIsIHN0b3JlLCBsYXN0RXR5cGUsIGxhc3RMZXZlbCwgdmFsdWVMYWJlbCwgdik7XG4gICAgcmV0dXJuIHJlZlBhdHMuY29uY2F0KFt2YWx1ZVBhdF0pO1xufVxuZnVuY3Rpb24gd2l0aEpvaW4od2hlcmUsIGpvaW4pIHtcbiAgICByZXR1cm4gam9pbiA/IFtqb2luXS5jb25jYXQod2hlcmUpIDogd2hlcmU7XG59XG5mdW5jdGlvbiBpc09yQ2xhdXNlcyhbaywgdl0pIHtcbiAgICByZXR1cm4gayA9PT0gXCJvclwiICYmIEFycmF5LmlzQXJyYXkodik7XG59XG5mdW5jdGlvbiBpc0FuZENsYXVzZXMoW2ssIHZdKSB7XG4gICAgcmV0dXJuIGsgPT09IFwiYW5kXCIgJiYgQXJyYXkuaXNBcnJheSh2KTtcbn1cbi8vIENyZWF0ZXMgYSBtYWtlVmFyIHRoYXQgd2lsbCBuYW1lc3BhY2Ugc3ltYm9scyBmb3Igb3IgY2xhdXNlc1xuLy8gdG8gcHJldmVudCBjb25mbGljdHMsIGV4Y2VwdCBmb3IgdGhlIGJhc2UgZXR5cGVcbmZ1bmN0aW9uIGdlbk1ha2VWYXIoYmFzZU1ha2VWYXIsIGV0eXBlLCBvcklkeCkge1xuICAgIHJldHVybiAoeCwgbHZsKSA9PiB7XG4gICAgICAgIGlmICh4ID09IGV0eXBlKSB7XG4gICAgICAgICAgICByZXR1cm4gYmFzZU1ha2VWYXIoeCwgbHZsKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYCR7YmFzZU1ha2VWYXIoeCwgbHZsKX0tJHtvcklkeH1gO1xuICAgIH07XG59XG5mdW5jdGlvbiBwYXJzZVdoZXJlQ2xhdXNlcyhtYWtlVmFyLCBjbGF1c2VUeXBlIC8qICdvcicgfCAnYW5kJyAqLywgc3RvcmUsIGV0eXBlLCBsZXZlbCwgd2hlcmVWYWx1ZSkge1xuICAgIGNvbnN0IHBhdHRlcm5zID0gd2hlcmVWYWx1ZS5tYXAoKHcsIGkpID0+IHtcbiAgICAgICAgY29uc3QgbWFrZU5hbWVzcGFjZWRWYXIgPSBnZW5NYWtlVmFyKG1ha2VWYXIsIGV0eXBlLCBpKTtcbiAgICAgICAgcmV0dXJuIHBhcnNlV2hlcmUobWFrZU5hbWVzcGFjZWRWYXIsIHN0b3JlLCBldHlwZSwgbGV2ZWwsIHcpO1xuICAgIH0pO1xuICAgIGNvbnN0IGpvaW5TeW0gPSBtYWtlVmFyKGV0eXBlLCBsZXZlbCk7XG4gICAgcmV0dXJuIHsgW2NsYXVzZVR5cGVdOiB7IHBhdHRlcm5zLCBqb2luU3ltIH0gfTtcbn1cbi8vIEdpdmVuIGEgcGF0aCwgcmV0dXJucyBhIGxpc3Qgb2YgcGF0aHMgbGVhZGluZyB1cCB0byB0aGlzIHBhdGg6XG4vLyBncm93UGF0aChbMSwgMiwgM10pIC0+IFtbMV0sIFsxLCAyXSwgWzEsIDIsIDNdXVxuZnVuY3Rpb24gZ3Jvd1BhdGgocGF0aCkge1xuICAgIGNvbnN0IHJldCA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHBhdGgubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmV0LnB1c2gocGF0aC5zbGljZSgwLCBpKSk7XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG59XG4vLyBSZXR1cm5zIGFycmF5IG9mIHBhdHRlcm4gYXJyYXlzIHRoYXQgc2hvdWxkIGJlIGdyb3VwZWQgaW4gT1Jcbi8vIHRvIGNhcHR1cmUgYW55IGludGVybWVkaWF0ZSBudWxsc1xuZnVuY3Rpb24gd2hlcmVDb25kQXR0clBhdHNGb3JOdWxsSXNUcnVlKG1ha2VWYXIsIHN0b3JlLCBldHlwZSwgbGV2ZWwsIHBhdGgpIHtcbiAgICByZXR1cm4gZ3Jvd1BhdGgocGF0aCkubWFwKChwYXRoKSA9PiB3aGVyZUNvbmRBdHRyUGF0cyhtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsLCBwYXRoLCB7ICRpc051bGw6IHRydWUgfSkpO1xufVxuZnVuY3Rpb24gcGFyc2VXaGVyZShtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsLCB3aGVyZSkge1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyh3aGVyZSkuZmxhdE1hcCgoW2ssIHZdKSA9PiB7XG4gICAgICAgIGlmIChpc09yQ2xhdXNlcyhbaywgdl0pKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VXaGVyZUNsYXVzZXMobWFrZVZhciwgXCJvclwiLCBzdG9yZSwgZXR5cGUsIGxldmVsLCB2KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBbmRDbGF1c2VzKFtrLCB2XSkpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZVdoZXJlQ2xhdXNlcyhtYWtlVmFyLCBcImFuZFwiLCBzdG9yZSwgZXR5cGUsIGxldmVsLCB2KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYXRoID0gay5zcGxpdChcIi5cIik7XG4gICAgICAgIGlmICh2ID09PSBudWxsIHx8IHYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHYuaGFzT3duUHJvcGVydHkoXCIkbm90XCIpKSB7XG4gICAgICAgICAgICAvLyBgJG5vdGAgd29uJ3QgcGljayB1cCBlbnRpdGllcyB0aGF0IGFyZSBtaXNzaW5nIHRoZSBhdHRyLCBzbyB3ZVxuICAgICAgICAgICAgLy8gYWRkIGluIGEgYCRpc051bGxgIHRvIGNhdGNoIHRob3NlIHRvby5cbiAgICAgICAgICAgIGNvbnN0IG5vdFBhdHMgPSB3aGVyZUNvbmRBdHRyUGF0cyhtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsLCBwYXRoLCB2KTtcbiAgICAgICAgICAgIGNvbnN0IG5pbFBhdHMgPSB3aGVyZUNvbmRBdHRyUGF0c0Zvck51bGxJc1RydWUobWFrZVZhciwgc3RvcmUsIGV0eXBlLCBsZXZlbCwgcGF0aCk7XG4gICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgb3I6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdHRlcm5zOiBbbm90UGF0cywgLi4ubmlsUGF0c10sXG4gICAgICAgICAgICAgICAgICAgICAgICBqb2luU3ltOiBtYWtlVmFyKGV0eXBlLCBsZXZlbCksXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCh2ID09PSBudWxsIHx8IHYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHYuaGFzT3duUHJvcGVydHkoXCIkaXNOdWxsXCIpKSAmJiB2LiRpc051bGwgPT09IHRydWUgJiYgcGF0aC5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgd2UncmUgY2FwdHVyaW5nIGFsbCBvZiB0aGUgaW50ZXJtZWRpYXRlIHBhdGhzIHRoYXQgbWlnaHQgYmUgbnVsbFxuICAgICAgICAgICAgLy8gYnkgY2hlY2tpbmcgZm9yIG51bGwgYXQgZWFjaCBzdGVwIGFsb25nIHRoZSBwYXRoXG4gICAgICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgb3I6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdHRlcm5zOiB3aGVyZUNvbmRBdHRyUGF0c0Zvck51bGxJc1RydWUobWFrZVZhciwgc3RvcmUsIGV0eXBlLCBsZXZlbCwgcGF0aCksXG4gICAgICAgICAgICAgICAgICAgICAgICBqb2luU3ltOiBtYWtlVmFyKGV0eXBlLCBsZXZlbCksXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHdoZXJlQ29uZEF0dHJQYXRzKG1ha2VWYXIsIHN0b3JlLCBldHlwZSwgbGV2ZWwsIHBhdGgsIHYpO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gbWFrZVdoZXJlKHN0b3JlLCBldHlwZSwgbGV2ZWwsIHdoZXJlKSB7XG4gICAgY29uc3QgbWFrZVZhciA9IG1ha2VWYXJJbXBsO1xuICAgIGlmICghd2hlcmUpIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRXaGVyZShtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsKTtcbiAgICB9XG4gICAgY29uc3QgcGFyc2VkV2hlcmUgPSBwYXJzZVdoZXJlKG1ha2VWYXIsIHN0b3JlLCBldHlwZSwgbGV2ZWwsIHdoZXJlKTtcbiAgICByZXR1cm4gcGFyc2VkV2hlcmUuY29uY2F0KGRlZmF1bHRXaGVyZShtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsKSk7XG59XG4vLyBGaW5kXG4vLyAtLS0tLS0tLS0tLS0tLS0tLVxuZnVuY3Rpb24gbWFrZUZpbmQobWFrZVZhciwgZXR5cGUsIGxldmVsKSB7XG4gICAgcmV0dXJuIFttYWtlVmFyKGV0eXBlLCBsZXZlbCksIG1ha2VWYXIoXCJ0aW1lXCIsIGxldmVsKV07XG59XG4vLyBleHRlbmRPYmplY3RzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLVxuZnVuY3Rpb24gbWFrZUpvaW4obWFrZVZhciwgc3RvcmUsIGV0eXBlLCBsZXZlbCwgbGFiZWwsIGVpZCkge1xuICAgIGNvbnN0IFtuZXh0RXR5cGUsIG5leHRMZXZlbCwgcGF0LCBhdHRyLCBpc0ZvcndhcmRdID0gcmVmQXR0clBhdChtYWtlVmFyLCBzdG9yZSwgZXR5cGUsIGxldmVsLCBsYWJlbCk7XG4gICAgY29uc3QgYWN0dWFsaXplZCA9IHJlcGxhY2VJbkF0dHJQYXQocGF0LCBtYWtlVmFyKGV0eXBlLCBsZXZlbCksIGVpZCk7XG4gICAgcmV0dXJuIFtuZXh0RXR5cGUsIG5leHRMZXZlbCwgYWN0dWFsaXplZCwgYXR0ciwgaXNGb3J3YXJkXTtcbn1cbmZ1bmN0aW9uIGV4dGVuZE9iamVjdHMobWFrZVZhciwgc3RvcmUsIHsgZXR5cGUsIGxldmVsLCBmb3JtIH0sIG9iamVjdHMpIHtcbiAgICBjb25zdCBjaGlsZFF1ZXJpZXMgPSBPYmplY3Qua2V5cyhmb3JtKS5maWx0ZXIoKGMpID0+IGMgIT09IFwiJFwiKTtcbiAgICBpZiAoIWNoaWxkUXVlcmllcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMob2JqZWN0cyk7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhvYmplY3RzKS5tYXAoZnVuY3Rpb24gZXh0ZW5kQ2hpbGRyZW4oW2VpZCwgcGFyZW50XSkge1xuICAgICAgICBjb25zdCBjaGlsZFJlc3VsdHMgPSBjaGlsZFF1ZXJpZXMubWFwKGZ1bmN0aW9uIGdldENoaWxkUmVzdWx0KGxhYmVsKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgICAgIGNvbnN0IGlzU2luZ3VsYXIgPSBCb29sZWFuKHN0b3JlLmNhcmRpbmFsaXR5SW5mZXJlbmNlICYmXG4gICAgICAgICAgICAgICAgKChfYyA9IChfYiA9IChfYSA9IHN0b3JlLmxpbmtJbmRleCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2V0eXBlXSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iW2xhYmVsXSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmlzU2luZ3VsYXIpKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW25leHRFdHlwZSwgbmV4dExldmVsLCBqb2luXSA9IG1ha2VKb2luKG1ha2VWYXIsIHN0b3JlLCBldHlwZSwgbGV2ZWwsIGxhYmVsLCBlaWQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkcmVuQXJyYXkgPSBxdWVyeU9uZShzdG9yZSwge1xuICAgICAgICAgICAgICAgICAgICBldHlwZTogbmV4dEV0eXBlLFxuICAgICAgICAgICAgICAgICAgICBsZXZlbDogbmV4dExldmVsLFxuICAgICAgICAgICAgICAgICAgICBmb3JtOiBmb3JtW2xhYmVsXSxcbiAgICAgICAgICAgICAgICAgICAgam9pbixcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCBjaGlsZE9yQ2hpbGRyZW4gPSBpc1Npbmd1bGFyID8gY2hpbGRyZW5BcnJheVswXSA6IGNoaWxkcmVuQXJyYXk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgW2xhYmVsXTogY2hpbGRPckNoaWxkcmVuIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgQXR0ck5vdEZvdW5kRXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsgW2xhYmVsXTogaXNTaW5ndWxhciA/IHVuZGVmaW5lZCA6IFtdIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gY2hpbGRSZXN1bHRzLnJlZHVjZShmdW5jdGlvbiByZWR1Y2VDaGlsZHJlbihwYXJlbnQsIGNoaWxkKSB7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwYXJlbnQpLCBjaGlsZCk7XG4gICAgICAgIH0sIHBhcmVudCk7XG4gICAgfSk7XG59XG4vLyByZXNvbHZlT2JqZWN0c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbmZ1bmN0aW9uIHNob3VsZElnbm9yZUF0dHIoYXR0cnMsIGlkKSB7XG4gICAgY29uc3QgYXR0ciA9IGF0dHJzW2lkXTtcbiAgICByZXR1cm4gYXR0cltcInZhbHVlLXR5cGVcIl0gPT09IFwicmVmXCIgJiYgYXR0cltcImZvcndhcmQtaWRlbnRpdHlcIl1bMl0gIT09IFwiaWRcIjtcbn1cbmZ1bmN0aW9uIGNvbXBhcmVPcmRlcihbaWRfYSwgdl9hXSwgW2lkX2IsIHZfYl0pIHtcbiAgICBpZiAodl9hID09PSB2X2IgfHwgKHZfYSA9PSBudWxsICYmIHZfYiA9PSBudWxsKSkge1xuICAgICAgICByZXR1cm4gdXVpZENvbXBhcmUoaWRfYSwgaWRfYik7XG4gICAgfVxuICAgIGlmICh2X2IgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgaWYgKHZfYSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgaWYgKHZfYSA+IHZfYikge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgcmV0dXJuIC0xO1xufVxuZnVuY3Rpb24gY29tcGFyYWJsZURhdGUoeCkge1xuICAgIGlmICh4ID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGF0ZSh4KS5nZXRUaW1lKCk7XG59XG5mdW5jdGlvbiBpc0JlZm9yZShzdGFydEN1cnNvciwgb3JkZXJBdHRyLCBkaXJlY3Rpb24sIGlkVmVjKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IFtjX2UsIF9jX2EsIGNfdiwgY190XSA9IHN0YXJ0Q3Vyc29yO1xuICAgIGNvbnN0IGNvbXBhcmVWYWwgPSBkaXJlY3Rpb24gPT09IFwiZGVzY1wiID8gMSA6IC0xO1xuICAgIGlmICgoKF9hID0gb3JkZXJBdHRyW1wiZm9yd2FyZC1pZGVudGl0eVwiXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzJdKSA9PT0gXCJpZFwiKSB7XG4gICAgICAgIHJldHVybiBjb21wYXJlT3JkZXIoaWRWZWMsIFtjX2UsIGNfdF0pID09PSBjb21wYXJlVmFsO1xuICAgIH1cbiAgICBjb25zdCBbZSwgdl0gPSBpZFZlYztcbiAgICBjb25zdCB2X25ldyA9IG9yZGVyQXR0cltcImNoZWNrZWQtZGF0YS10eXBlXCJdID09PSBcImRhdGVcIiA/IGNvbXBhcmFibGVEYXRlKHYpIDogdjtcbiAgICBjb25zdCBjX3ZfbmV3ID0gb3JkZXJBdHRyW1wiY2hlY2tlZC1kYXRhLXR5cGVcIl0gPT09IFwiZGF0ZVwiID8gY29tcGFyYWJsZURhdGUoY192KSA6IGNfdjtcbiAgICByZXR1cm4gY29tcGFyZU9yZGVyKFtlLCB2X25ld10sIFtjX2UsIGNfdl9uZXddKSA9PT0gY29tcGFyZVZhbDtcbn1cbmZ1bmN0aW9uIG9yZGVyQXR0ckZyb21DdXJzb3Ioc3RvcmUsIGN1cnNvcikge1xuICAgIGNvbnN0IGN1cnNvckF0dHJJZCA9IGN1cnNvclsxXTtcbiAgICByZXR1cm4gc3RvcmUuYXR0cnNbY3Vyc29yQXR0cklkXTtcbn1cbmZ1bmN0aW9uIG9yZGVyQXR0ckZyb21PcmRlcihzdG9yZSwgZXR5cGUsIG9yZGVyKSB7XG4gICAgY29uc3QgbGFiZWwgPSBPYmplY3Qua2V5cyhvcmRlcilbMF07XG4gICAgcmV0dXJuIHMuZ2V0QXR0ckJ5RndkSWRlbnROYW1lKHN0b3JlLCBldHlwZSwgbGFiZWwpO1xufVxuZnVuY3Rpb24gZ2V0T3JkZXJBdHRyKHN0b3JlLCBldHlwZSwgY3Vyc29yLCBvcmRlcikge1xuICAgIGlmIChjdXJzb3IpIHtcbiAgICAgICAgcmV0dXJuIG9yZGVyQXR0ckZyb21DdXJzb3Ioc3RvcmUsIGN1cnNvcik7XG4gICAgfVxuICAgIGlmIChvcmRlcikge1xuICAgICAgICByZXR1cm4gb3JkZXJBdHRyRnJvbU9yZGVyKHN0b3JlLCBldHlwZSwgb3JkZXIpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHJ1bkRhdGFsb2FkQW5kUmV0dXJuT2JqZWN0cyhzdG9yZSwgZXR5cGUsIGRpcmVjdGlvbiwgcGFnZUluZm8sIG9yZGVyLCBkcSkge1xuICAgIHZhciBfYTtcbiAgICBsZXQgaWRWZWNzID0gZGF0YWxvZ1F1ZXJ5KHN0b3JlLCBkcSk7XG4gICAgY29uc3Qgc3RhcnRDdXJzb3IgPSBwYWdlSW5mbyA9PT0gbnVsbCB8fCBwYWdlSW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFnZUluZm9bXCJzdGFydC1jdXJzb3JcIl07XG4gICAgY29uc3Qgb3JkZXJBdHRyID0gZ2V0T3JkZXJBdHRyKHN0b3JlLCBldHlwZSwgc3RhcnRDdXJzb3IsIG9yZGVyKTtcbiAgICBpZiAob3JkZXJBdHRyICYmICgoX2EgPSBvcmRlckF0dHIgPT09IG51bGwgfHwgb3JkZXJBdHRyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcmRlckF0dHJbXCJmb3J3YXJkLWlkZW50aXR5XCJdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbMl0pICE9PSBcImlkXCIpIHtcbiAgICAgICAgY29uc3QgaXNEYXRlID0gb3JkZXJBdHRyW1wiY2hlY2tlZC1kYXRhLXR5cGVcIl0gPT09IFwiZGF0ZVwiO1xuICAgICAgICBjb25zdCBhID0gb3JkZXJBdHRyLmlkO1xuICAgICAgICBpZFZlY3MgPSBpZFZlY3MubWFwKChbaWRdKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xuICAgICAgICAgICAgLy8gb3JkZXIgYXR0ciBpcyByZXF1aXJlZCB0byBiZSBjYXJkaW5hbGl0eSBvbmUsIHNvIHRoZXJlIHdpbGxcbiAgICAgICAgICAgIC8vIGJlIGF0IG1vc3Qgb25lIHZhbHVlIGhlcmVcbiAgICAgICAgICAgIGxldCB2ID0gKF9lID0gKF9kID0gKF9jID0gKF9iID0gKF9hID0gc3RvcmUuZWF2LmdldChpZCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5nZXQoYSkpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi52YWx1ZXMoKSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLm5leHQoKSkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLnZhbHVlKSA9PT0gbnVsbCB8fCBfZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2VbMl07XG4gICAgICAgICAgICBpZiAoaXNEYXRlKSB7XG4gICAgICAgICAgICAgICAgdiA9IGNvbXBhcmFibGVEYXRlKHYpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFtpZCwgdl07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZFZlY3Muc29ydChkaXJlY3Rpb24gPT09IFwiYXNjXCJcbiAgICAgICAgPyBmdW5jdGlvbiBjb21wYXJlSWRWZWNzKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBjb21wYXJlT3JkZXIoYSwgYik7XG4gICAgICAgIH1cbiAgICAgICAgOiBmdW5jdGlvbiBjb21wYXJlSWRWZWNzKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBjb21wYXJlT3JkZXIoYiwgYSk7XG4gICAgICAgIH0pO1xuICAgIGxldCBvYmplY3RzID0ge307XG4gICAgZm9yIChjb25zdCBpZFZlYyBvZiBpZFZlY3MpIHtcbiAgICAgICAgY29uc3QgW2lkXSA9IGlkVmVjO1xuICAgICAgICBpZiAob2JqZWN0c1tpZF0pIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzdGFydEN1cnNvciAmJlxuICAgICAgICAgICAgb3JkZXJBdHRyICYmXG4gICAgICAgICAgICBpc0JlZm9yZShzdGFydEN1cnNvciwgb3JkZXJBdHRyLCBkaXJlY3Rpb24sIGlkVmVjKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb2JqID0gcy5nZXRBc09iamVjdChzdG9yZSwgZXR5cGUsIGlkKTtcbiAgICAgICAgaWYgKG9iaikge1xuICAgICAgICAgICAgb2JqZWN0c1tpZF0gPSBvYmo7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG9iamVjdHM7XG59XG5mdW5jdGlvbiBkZXRlcm1pbmVPcmRlcihmb3JtKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IG9yZGVyT3B0cyA9IChfYSA9IGZvcm0uJCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm9yZGVyO1xuICAgIGlmICghb3JkZXJPcHRzKSB7XG4gICAgICAgIHJldHVybiBcImFzY1wiO1xuICAgIH1cbiAgICByZXR1cm4gb3JkZXJPcHRzW09iamVjdC5rZXlzKG9yZGVyT3B0cylbMF1dIHx8IFwiYXNjXCI7XG59XG4vKipcbiAqIEdpdmVuIGEgcXVlcnkgbGlrZTpcbiAqXG4gKiB7XG4gKiAgIHVzZXJzOiB7XG4gKiAgICAgJDogeyB3aGVyZTogeyBuYW1lOiBcIkpvZVwiIH0gfSxcbiAqICAgfSxcbiAqIH07XG4gKlxuICogYHJlc29sdmVPYmplY3RzYCwgdHVybnMgd2hlcmUgY2xhdXNlOiBgeyBuYW1lOiBcIkpvZVwiIH1gXG4gKiBpbnRvIGEgZGF0YWxvZyBxdWVyeS4gV2UgdGhlbiBydW4gdGhlIGRhdGFsb2cgcXVlcnksXG4gKiBhbmQgcmVkdWNlIGFsbCB0aGUgdHJpcGxlcyBpbnRvIG9iamVjdHMuXG4gKi9cbmZ1bmN0aW9uIHJlc29sdmVPYmplY3RzKHN0b3JlLCB7IGV0eXBlLCBsZXZlbCwgZm9ybSwgam9pbiwgcGFnZUluZm8gfSkge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9nLCBfaCwgX2o7XG4gICAgY29uc3QgbGltaXQgPSAoKF9hID0gZm9ybS4kKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubGltaXQpIHx8ICgoX2IgPSBmb3JtLiQpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5maXJzdCkgfHwgKChfYyA9IGZvcm0uJCkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmxhc3QpO1xuICAgIGNvbnN0IG9mZnNldCA9IChfZCA9IGZvcm0uJCkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLm9mZnNldDtcbiAgICBjb25zdCBiZWZvcmUgPSAoX2UgPSBmb3JtLiQpID09PSBudWxsIHx8IF9lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZS5iZWZvcmU7XG4gICAgY29uc3QgYWZ0ZXIgPSAoX2cgPSBmb3JtLiQpID09PSBudWxsIHx8IF9nID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZy5hZnRlcjtcbiAgICBjb25zdCBvcmRlciA9IChfaCA9IGZvcm0uJCkgPT09IG51bGwgfHwgX2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9oLm9yZGVyO1xuICAgIC8vIFdhaXQgZm9yIHNlcnZlciB0byB0ZWxsIHVzIHdoZXJlIHdlIHN0YXJ0IGlmIHdlIGRvbid0IHN0YXJ0IGZyb20gdGhlIGJlZ2lubmluZ1xuICAgIGlmICgob2Zmc2V0IHx8IGJlZm9yZSB8fCBhZnRlcikgJiYgKCFwYWdlSW5mbyB8fCAhcGFnZUluZm9bXCJzdGFydC1jdXJzb3JcIl0pKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgY29uc3Qgd2hlcmUgPSB3aXRoSm9pbihtYWtlV2hlcmUoc3RvcmUsIGV0eXBlLCBsZXZlbCwgKF9qID0gZm9ybS4kKSA9PT0gbnVsbCB8fCBfaiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2oud2hlcmUpLCBqb2luKTtcbiAgICBjb25zdCBmaW5kID0gbWFrZUZpbmQobWFrZVZhckltcGwsIGV0eXBlLCBsZXZlbCk7XG4gICAgY29uc3Qgb2JqcyA9IHJ1bkRhdGFsb2FkQW5kUmV0dXJuT2JqZWN0cyhzdG9yZSwgZXR5cGUsIGRldGVybWluZU9yZGVyKGZvcm0pLCBwYWdlSW5mbywgb3JkZXIsIHsgd2hlcmUsIGZpbmQgfSk7XG4gICAgaWYgKGxpbWl0ICE9IG51bGwpIHtcbiAgICAgICAgY29uc3QgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKG9ianMpO1xuICAgICAgICBpZiAoZW50cmllcy5sZW5ndGggPD0gbGltaXQpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmpzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoZW50cmllcy5zbGljZSgwLCBsaW1pdCkpO1xuICAgIH1cbiAgICByZXR1cm4gb2Jqcztcbn1cbi8qKlxuICogSXQncyBwb3NzaWJsZSB0aGF0IHdlIHF1ZXJ5XG4gKiBmb3IgYW4gYXR0cmlidXRlIHRoYXQgZG9lc24ndCBleGlzdCB5ZXQuXG4gKlxuICogeyB1c2VyczogeyAkOiB7IHdoZXJlOiB7IG5vbkV4aXN0ZW50UHJvcGVydHk6IFwiZm9vXCIgfSB9IH0gfVxuICpcbiAqIFRoaXMgc3dhbGxvd3MgdGhlIG1pc3NpbmcgYXR0ciBlcnJvciBhbmQgcmV0dXJuc1xuICogYW4gZW1wdHkgcmVzdWx0IGluc3RlYWRcbiAqL1xuZnVuY3Rpb24gZ3VhcmRlZFJlc29sdmVPYmplY3RzKHN0b3JlLCBvcHRzKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVPYmplY3RzKHN0b3JlLCBvcHRzKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBBdHRyTm90Rm91bmRFcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGU7XG4gICAgfVxufVxuLyoqXG4gKiBHaXZlbiBhIHF1ZXJ5IGxpa2U6XG4gKlxuICoge1xuICogICB1c2Vyczoge1xuICogICAgICQ6IHsgd2hlcmU6IHsgbmFtZTogXCJKb2VcIiB9IH0sXG4gKiAgICAgcG9zdHM6IHt9LFxuICogICB9LFxuICogfTtcbiAqXG4gKiBgZ3VhcmRSZXNvbHZlT2JqZWN0c2Agd2lsbCByZXR1cm4gdGhlIHJlbGV2YW50IGB1c2Vyc2Agb2JqZWN0c1xuICogYGV4dGVuZE9iamVjdHNgIHdpbGwgdGhlbiBleHRlbmQgZWFjaCBgdXNlcmAgb2JqZWN0IHdpdGggcmVsZXZhbnQgYHBvc3RzYC5cbiAqL1xuZnVuY3Rpb24gcXVlcnlPbmUoc3RvcmUsIG9wdHMpIHtcbiAgICBjb25zdCBvYmplY3RzID0gZ3VhcmRlZFJlc29sdmVPYmplY3RzKHN0b3JlLCBvcHRzKTtcbiAgICByZXR1cm4gZXh0ZW5kT2JqZWN0cyhtYWtlVmFySW1wbCwgc3RvcmUsIG9wdHMsIG9iamVjdHMpO1xufVxuZnVuY3Rpb24gZm9ybWF0UGFnZUluZm8ocGFnZUluZm8pIHtcbiAgICBjb25zdCByZXMgPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhwYWdlSW5mbykpIHtcbiAgICAgICAgcmVzW2tdID0ge1xuICAgICAgICAgICAgc3RhcnRDdXJzb3I6IHZbXCJzdGFydC1jdXJzb3JcIl0sXG4gICAgICAgICAgICBlbmRDdXJzb3I6IHZbXCJlbmQtY3Vyc29yXCJdLFxuICAgICAgICAgICAgaGFzTmV4dFBhZ2U6IHZbXCJoYXMtbmV4dC1wYWdlP1wiXSxcbiAgICAgICAgICAgIGhhc1ByZXZpb3VzUGFnZTogdltcImhhcy1wcmV2aW91cy1wYWdlP1wiXSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHF1ZXJ5KHsgc3RvcmUsIHBhZ2VJbmZvLCBhZ2dyZWdhdGUgfSwgcSkge1xuICAgIGNvbnN0IGRhdGEgPSBPYmplY3Qua2V5cyhxKS5yZWR1Y2UoZnVuY3Rpb24gcmVkdWNlUmVzdWx0KHJlcywgaykge1xuICAgICAgICBpZiAoYWdncmVnYXRlID09PSBudWxsIHx8IGFnZ3JlZ2F0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogYWdncmVnYXRlW2tdKSB7XG4gICAgICAgICAgICAvLyBBZ2dyZWdhdGUgZG9lc24ndCByZXR1cm4gYW55IGpvaW4gcm93cyBhbmQgaGFzIG5vIGNoaWxkcmVuLFxuICAgICAgICAgICAgLy8gc28gZG9uJ3QgYm90aGVyIHF1ZXJ5aW5nIGZ1cnRoZXJcbiAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgIH1cbiAgICAgICAgcmVzW2tdID0gcXVlcnlPbmUoc3RvcmUsIHtcbiAgICAgICAgICAgIGV0eXBlOiBrLFxuICAgICAgICAgICAgZm9ybTogcVtrXSxcbiAgICAgICAgICAgIGxldmVsOiAwLFxuICAgICAgICAgICAgcGFnZUluZm86IHBhZ2VJbmZvID09PSBudWxsIHx8IHBhZ2VJbmZvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYWdlSW5mb1trXSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfSwge30pO1xuICAgIGNvbnN0IHJlc3VsdCA9IHsgZGF0YSB9O1xuICAgIGlmIChwYWdlSW5mbykge1xuICAgICAgICByZXN1bHQucGFnZUluZm8gPSBmb3JtYXRQYWdlSW5mbyhwYWdlSW5mbyk7XG4gICAgfVxuICAgIGlmIChhZ2dyZWdhdGUpIHtcbiAgICAgICAgcmVzdWx0LmFnZ3JlZ2F0ZSA9IGFnZ3JlZ2F0ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RhcWwuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/instaql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/instatx.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOps: () => (/* binding */ getOps),\n/* harmony export */   isLookup: () => (/* binding */ isLookup),\n/* harmony export */   lookup: () => (/* binding */ lookup),\n/* harmony export */   parseLookup: () => (/* binding */ parseLookup),\n/* harmony export */   tx: () => (/* binding */ tx),\n/* harmony export */   txInit: () => (/* binding */ txInit)\n/* harmony export */ });\nfunction transactionChunk(etype, id, prevOps) {\n    return new Proxy({}, {\n        get: (_target, cmd) => {\n            if (cmd === \"__ops\")\n                return prevOps;\n            return (args) => {\n                return transactionChunk(etype, id, [\n                    ...prevOps,\n                    [cmd, etype, id, args],\n                ]);\n            };\n        },\n    });\n}\n/**\n * Creates a lookup to use in place of an id in a transaction\n *\n * @example\n * tx.users[lookup('email', 'lyndon@example.com')].update({name: 'Lyndon'})\n */\nfunction lookup(attribute, value) {\n    return `lookup__${attribute}__${JSON.stringify(value)}`;\n}\nfunction isLookup(k) {\n    return k.startsWith(\"lookup__\");\n}\nfunction parseLookup(k) {\n    const [_, attribute, ...vJSON] = k.split(\"__\");\n    return [attribute, JSON.parse(vJSON.join(\"__\"))];\n}\nfunction etypeChunk(etype) {\n    return new Proxy({}, {\n        get(_target, id) {\n            if (isLookup(id)) {\n                return transactionChunk(etype, parseLookup(id), []);\n            }\n            return transactionChunk(etype, id, []);\n        },\n    });\n}\nfunction txInit() {\n    return new Proxy({}, {\n        get(_target, ns) {\n            return etypeChunk(ns);\n        },\n    });\n}\n/**\n * A handy builder for changes.\n *\n * You must start with the `namespace` you want to change:\n *\n * @example\n *   tx.goals[goalId].update({title: \"Get fit\"})\n *   // Note: you don't need to create `goals` ahead of time.\n */\nconst tx = txInit();\nfunction getOps(x) {\n    return x.__ops;\n}\n//# sourceMappingURL=instatx.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2luc3RhdHguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGVBQWU7QUFDMUU7QUFDTztBQUNQLHNCQUFzQixVQUFVLElBQUksc0JBQXNCO0FBQzFEO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNPO0FBQ1AsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlCQUFpQjtBQUMvQztBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXGluc3RhdHguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdHJhbnNhY3Rpb25DaHVuayhldHlwZSwgaWQsIHByZXZPcHMpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgICAgIGdldDogKF90YXJnZXQsIGNtZCkgPT4ge1xuICAgICAgICAgICAgaWYgKGNtZCA9PT0gXCJfX29wc1wiKVxuICAgICAgICAgICAgICAgIHJldHVybiBwcmV2T3BzO1xuICAgICAgICAgICAgcmV0dXJuIChhcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uQ2h1bmsoZXR5cGUsIGlkLCBbXG4gICAgICAgICAgICAgICAgICAgIC4uLnByZXZPcHMsXG4gICAgICAgICAgICAgICAgICAgIFtjbWQsIGV0eXBlLCBpZCwgYXJnc10sXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuLyoqXG4gKiBDcmVhdGVzIGEgbG9va3VwIHRvIHVzZSBpbiBwbGFjZSBvZiBhbiBpZCBpbiBhIHRyYW5zYWN0aW9uXG4gKlxuICogQGV4YW1wbGVcbiAqIHR4LnVzZXJzW2xvb2t1cCgnZW1haWwnLCAnbHluZG9uQGV4YW1wbGUuY29tJyldLnVwZGF0ZSh7bmFtZTogJ0x5bmRvbid9KVxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9va3VwKGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gYGxvb2t1cF9fJHthdHRyaWJ1dGV9X18ke0pTT04uc3RyaW5naWZ5KHZhbHVlKX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9va3VwKGspIHtcbiAgICByZXR1cm4gay5zdGFydHNXaXRoKFwibG9va3VwX19cIik7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VMb29rdXAoaykge1xuICAgIGNvbnN0IFtfLCBhdHRyaWJ1dGUsIC4uLnZKU09OXSA9IGsuc3BsaXQoXCJfX1wiKTtcbiAgICByZXR1cm4gW2F0dHJpYnV0ZSwgSlNPTi5wYXJzZSh2SlNPTi5qb2luKFwiX19cIikpXTtcbn1cbmZ1bmN0aW9uIGV0eXBlQ2h1bmsoZXR5cGUpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgICAgIGdldChfdGFyZ2V0LCBpZCkge1xuICAgICAgICAgICAgaWYgKGlzTG9va3VwKGlkKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbkNodW5rKGV0eXBlLCBwYXJzZUxvb2t1cChpZCksIFtdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbkNodW5rKGV0eXBlLCBpZCwgW10pO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHR4SW5pdCgpIHtcbiAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgICAgIGdldChfdGFyZ2V0LCBucykge1xuICAgICAgICAgICAgcmV0dXJuIGV0eXBlQ2h1bmsobnMpO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuLyoqXG4gKiBBIGhhbmR5IGJ1aWxkZXIgZm9yIGNoYW5nZXMuXG4gKlxuICogWW91IG11c3Qgc3RhcnQgd2l0aCB0aGUgYG5hbWVzcGFjZWAgeW91IHdhbnQgdG8gY2hhbmdlOlxuICpcbiAqIEBleGFtcGxlXG4gKiAgIHR4LmdvYWxzW2dvYWxJZF0udXBkYXRlKHt0aXRsZTogXCJHZXQgZml0XCJ9KVxuICogICAvLyBOb3RlOiB5b3UgZG9uJ3QgbmVlZCB0byBjcmVhdGUgYGdvYWxzYCBhaGVhZCBvZiB0aW1lLlxuICovXG5leHBvcnQgY29uc3QgdHggPSB0eEluaXQoKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRPcHMoeCkge1xuICAgIHJldHVybiB4Ll9fb3BzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdGF0eC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/model/instaqlResult.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/model/instaqlResult.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTriples: () => (/* binding */ extractTriples)\n/* harmony export */ });\nfunction _extractTriplesHelper(idNodes, acc = []) {\n    idNodes.forEach((idNode) => {\n        const { data } = idNode;\n        const { \"datalog-result\": datalogResult } = data;\n        const { \"join-rows\": joinRows } = datalogResult;\n        for (const rows of joinRows) {\n            for (const triple of rows) {\n                acc.push(triple);\n            }\n        }\n        _extractTriplesHelper(idNode[\"child-nodes\"], acc);\n    });\n}\n/**\n * Marshall instaql-result into list of triples. Instaql-result may have\n * multiple datalog-results, each datalog-result may have multiple join-rows\n * and each join-row may have triples.The union of these triples may have\n * duplicates, so we dedup them.\n */\nfunction extractTriples(idNodes) {\n    const triples = [];\n    _extractTriplesHelper(idNodes, triples);\n    return triples;\n}\n//# sourceMappingURL=instaqlResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL21vZGVsL2luc3RhcWxSZXN1bHQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxnQkFBZ0IsT0FBTztBQUN2QixnQkFBZ0Isa0NBQWtDO0FBQ2xELGdCQUFnQix3QkFBd0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcbW9kZWxcXGluc3RhcWxSZXN1bHQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2V4dHJhY3RUcmlwbGVzSGVscGVyKGlkTm9kZXMsIGFjYyA9IFtdKSB7XG4gICAgaWROb2Rlcy5mb3JFYWNoKChpZE5vZGUpID0+IHtcbiAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBpZE5vZGU7XG4gICAgICAgIGNvbnN0IHsgXCJkYXRhbG9nLXJlc3VsdFwiOiBkYXRhbG9nUmVzdWx0IH0gPSBkYXRhO1xuICAgICAgICBjb25zdCB7IFwiam9pbi1yb3dzXCI6IGpvaW5Sb3dzIH0gPSBkYXRhbG9nUmVzdWx0O1xuICAgICAgICBmb3IgKGNvbnN0IHJvd3Mgb2Ygam9pblJvd3MpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdHJpcGxlIG9mIHJvd3MpIHtcbiAgICAgICAgICAgICAgICBhY2MucHVzaCh0cmlwbGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIF9leHRyYWN0VHJpcGxlc0hlbHBlcihpZE5vZGVbXCJjaGlsZC1ub2Rlc1wiXSwgYWNjKTtcbiAgICB9KTtcbn1cbi8qKlxuICogTWFyc2hhbGwgaW5zdGFxbC1yZXN1bHQgaW50byBsaXN0IG9mIHRyaXBsZXMuIEluc3RhcWwtcmVzdWx0IG1heSBoYXZlXG4gKiBtdWx0aXBsZSBkYXRhbG9nLXJlc3VsdHMsIGVhY2ggZGF0YWxvZy1yZXN1bHQgbWF5IGhhdmUgbXVsdGlwbGUgam9pbi1yb3dzXG4gKiBhbmQgZWFjaCBqb2luLXJvdyBtYXkgaGF2ZSB0cmlwbGVzLlRoZSB1bmlvbiBvZiB0aGVzZSB0cmlwbGVzIG1heSBoYXZlXG4gKiBkdXBsaWNhdGVzLCBzbyB3ZSBkZWR1cCB0aGVtLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFRyaXBsZXMoaWROb2Rlcykge1xuICAgIGNvbnN0IHRyaXBsZXMgPSBbXTtcbiAgICBfZXh0cmFjdFRyaXBsZXNIZWxwZXIoaWROb2RlcywgdHJpcGxlcyk7XG4gICAgcmV0dXJuIHRyaXBsZXM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0YXFsUmVzdWx0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/model/instaqlResult.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/presence.js":
/*!**************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/presence.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPresenceSlice: () => (/* binding */ buildPresenceSlice),\n/* harmony export */   hasPresenceResponseChanged: () => (/* binding */ hasPresenceResponseChanged)\n/* harmony export */ });\n/* harmony import */ var _utils_pick__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/pick */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/pick.js\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n\n\nfunction buildPresenceSlice(data, opts, userPeerId) {\n    var _a, _b;\n    const slice = {\n        peers: {},\n    };\n    const includeUser = opts && \"user\" in opts ? opts.user : true;\n    if (includeUser) {\n        const user = (0,_utils_pick__WEBPACK_IMPORTED_MODULE_0__.pick)((_a = data.user) !== null && _a !== void 0 ? _a : {}, opts === null || opts === void 0 ? void 0 : opts.keys);\n        slice.user = Object.assign(Object.assign({}, user), { peerId: userPeerId });\n    }\n    for (const id of Object.keys((_b = data.peers) !== null && _b !== void 0 ? _b : {})) {\n        const shouldIncludeAllPeers = (opts === null || opts === void 0 ? void 0 : opts.peers) === undefined;\n        const isPeerIncluded = Array.isArray(opts === null || opts === void 0 ? void 0 : opts.peers) && (opts === null || opts === void 0 ? void 0 : opts.peers.includes(id));\n        if (shouldIncludeAllPeers || isPeerIncluded) {\n            const peer = (0,_utils_pick__WEBPACK_IMPORTED_MODULE_0__.pick)(data.peers[id], opts === null || opts === void 0 ? void 0 : opts.keys);\n            slice.peers[id] = Object.assign(Object.assign({}, peer), { peerId: id });\n        }\n    }\n    return slice;\n}\n/**\n * Compare two presence slices\n * 0. compare isLoading and error\n * 1. shallow compare user\n * 2. compare peers keys\n * 3. shallow compare each peer\n */\nfunction hasPresenceResponseChanged(a, b) {\n    if (a.isLoading !== b.isLoading)\n        return true;\n    if (a.error !== b.error)\n        return true;\n    if (a.user || b.user) {\n        if (!a.user || !b.user)\n            return true;\n        const same = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.areObjectsShallowEqual)(a.user, b.user);\n        if (!same)\n            return true;\n    }\n    const sameKeys = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.areObjectKeysEqual)(a.peers, b.peers);\n    if (!sameKeys)\n        return true;\n    for (const id of Object.keys(a.peers)) {\n        const same = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.areObjectsShallowEqual)(a.peers[id], b.peers[id]);\n        if (!same)\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=presence.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3ByZXNlbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0M7QUFDd0M7QUFDckU7QUFDUDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpREFBSSxxREFBcUQ7QUFDOUUsbURBQW1ELFdBQVcsb0JBQW9CO0FBQ2xGO0FBQ0Esc0ZBQXNGO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixpREFBSTtBQUM3Qiw0REFBNEQsV0FBVyxZQUFZO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFFQUFzQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUVBQWtCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixxRUFBc0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxccHJlc2VuY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGljayB9IGZyb20gXCIuL3V0aWxzL3BpY2tcIjtcbmltcG9ydCB7IGFyZU9iamVjdHNTaGFsbG93RXF1YWwsIGFyZU9iamVjdEtleXNFcXVhbCB9IGZyb20gXCIuL3V0aWxzL29iamVjdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkUHJlc2VuY2VTbGljZShkYXRhLCBvcHRzLCB1c2VyUGVlcklkKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBzbGljZSA9IHtcbiAgICAgICAgcGVlcnM6IHt9LFxuICAgIH07XG4gICAgY29uc3QgaW5jbHVkZVVzZXIgPSBvcHRzICYmIFwidXNlclwiIGluIG9wdHMgPyBvcHRzLnVzZXIgOiB0cnVlO1xuICAgIGlmIChpbmNsdWRlVXNlcikge1xuICAgICAgICBjb25zdCB1c2VyID0gcGljaygoX2EgPSBkYXRhLnVzZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9LCBvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMua2V5cyk7XG4gICAgICAgIHNsaWNlLnVzZXIgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHVzZXIpLCB7IHBlZXJJZDogdXNlclBlZXJJZCB9KTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpZCBvZiBPYmplY3Qua2V5cygoX2IgPSBkYXRhLnBlZXJzKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB7fSkpIHtcbiAgICAgICAgY29uc3Qgc2hvdWxkSW5jbHVkZUFsbFBlZXJzID0gKG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5wZWVycykgPT09IHVuZGVmaW5lZDtcbiAgICAgICAgY29uc3QgaXNQZWVySW5jbHVkZWQgPSBBcnJheS5pc0FycmF5KG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5wZWVycykgJiYgKG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5wZWVycy5pbmNsdWRlcyhpZCkpO1xuICAgICAgICBpZiAoc2hvdWxkSW5jbHVkZUFsbFBlZXJzIHx8IGlzUGVlckluY2x1ZGVkKSB7XG4gICAgICAgICAgICBjb25zdCBwZWVyID0gcGljayhkYXRhLnBlZXJzW2lkXSwgb3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLmtleXMpO1xuICAgICAgICAgICAgc2xpY2UucGVlcnNbaWRdID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwZWVyKSwgeyBwZWVySWQ6IGlkIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzbGljZTtcbn1cbi8qKlxuICogQ29tcGFyZSB0d28gcHJlc2VuY2Ugc2xpY2VzXG4gKiAwLiBjb21wYXJlIGlzTG9hZGluZyBhbmQgZXJyb3JcbiAqIDEuIHNoYWxsb3cgY29tcGFyZSB1c2VyXG4gKiAyLiBjb21wYXJlIHBlZXJzIGtleXNcbiAqIDMuIHNoYWxsb3cgY29tcGFyZSBlYWNoIHBlZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGhhc1ByZXNlbmNlUmVzcG9uc2VDaGFuZ2VkKGEsIGIpIHtcbiAgICBpZiAoYS5pc0xvYWRpbmcgIT09IGIuaXNMb2FkaW5nKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoYS5lcnJvciAhPT0gYi5lcnJvcilcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgaWYgKGEudXNlciB8fCBiLnVzZXIpIHtcbiAgICAgICAgaWYgKCFhLnVzZXIgfHwgIWIudXNlcilcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBjb25zdCBzYW1lID0gYXJlT2JqZWN0c1NoYWxsb3dFcXVhbChhLnVzZXIsIGIudXNlcik7XG4gICAgICAgIGlmICghc2FtZSlcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjb25zdCBzYW1lS2V5cyA9IGFyZU9iamVjdEtleXNFcXVhbChhLnBlZXJzLCBiLnBlZXJzKTtcbiAgICBpZiAoIXNhbWVLZXlzKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBmb3IgKGNvbnN0IGlkIG9mIE9iamVjdC5rZXlzKGEucGVlcnMpKSB7XG4gICAgICAgIGNvbnN0IHNhbWUgPSBhcmVPYmplY3RzU2hhbGxvd0VxdWFsKGEucGVlcnNbaWRdLCBiLnBlZXJzW2lkXSk7XG4gICAgICAgIGlmICghc2FtZSlcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcmVzZW5jZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/presence.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/schema.js":
/*!************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/schema.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ i)\n/* harmony export */ });\n/* harmony import */ var _schemaTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schemaTypes */ \"(ssr)/./node_modules/@instantdb/core/dist/module/schemaTypes.js\");\n\n// ==========\n// API\n/**\n * @deprecated\n * `i.graph` is deprecated. Use `i.schema` instead.\n *\n * @example\n * // Before\n * i.graph(entities, links).withRoomSchema<RoomType>();\n *\n * // After\n * i.schema({ entities, links, rooms })\n *\n * @see\n * https://instantdb.com/docs/schema\n */\nfunction graph(entities, links) {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.InstantSchemaDef(enrichEntitiesWithLinks(entities, links), \n    // (XXX): LinksDef<any> stems from TypeScript’s inability to reconcile the\n    // type EntitiesWithLinks<EntitiesWithoutLinks, Links> with\n    // EntitiesWithoutLinks. TypeScript is strict about ensuring that types are\n    // correctly aligned and does not allow for substituting a type that might\n    // be broader or have additional properties.\n    links, undefined);\n}\n/**\n * Creates an entity definition, to be used in conjunction with `i.graph`.\n *\n * @see https://instantdb.com/docs/schema\n * @example\n *   {\n *     posts: i.entity({\n *       title: i.string(),\n *       body: i.string(),\n *     }),\n *     comments: i.entity({\n *       body: i.string(),\n *     })\n *   }\n */\nfunction entity(attrs) {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.EntityDef(attrs, {});\n}\nfunction string() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"string\", true);\n}\nfunction number() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"number\", true);\n}\nfunction boolean() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"boolean\", true);\n}\nfunction date() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"date\", true);\n}\nfunction json() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"json\", true);\n}\nfunction any() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"json\", true);\n}\n// ==========\n// internal\nfunction enrichEntitiesWithLinks(entities, links) {\n    var _a, _b, _c, _d;\n    const linksIndex = { fwd: {}, rev: {} };\n    for (const linkDef of Object.values(links)) {\n        (_a = linksIndex.fwd)[_b = linkDef.forward.on] || (_a[_b] = {});\n        (_c = linksIndex.rev)[_d = linkDef.reverse.on] || (_c[_d] = {});\n        linksIndex.fwd[linkDef.forward.on][linkDef.forward.label] = {\n            entityName: linkDef.reverse.on,\n            cardinality: linkDef.forward.has,\n        };\n        linksIndex.rev[linkDef.reverse.on][linkDef.reverse.label] = {\n            entityName: linkDef.forward.on,\n            cardinality: linkDef.reverse.has,\n        };\n    }\n    const enrichedEntities = Object.fromEntries(Object.entries(entities).map(([name, def]) => [\n        name,\n        new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.EntityDef(def.attrs, Object.assign(Object.assign({}, linksIndex.fwd[name]), linksIndex.rev[name])),\n    ]));\n    return enrichedEntities;\n}\n/**\n * Lets you define a schema for your database.\n *\n * You can define entities, links between entities, and if you use\n * presence, you can define rooms.\n *\n * You can push this schema to your database with the CLI,\n * or use it inside `init`, to get typesafety and autocompletion.\n *\n * @see https://instantdb.com/docs/schema\n * @example\n *   i.schema({\n *     entities: { },\n *     links: { },\n *     rooms: { }\n *   });\n */\nfunction schema({ entities, links, rooms, }) {\n    const linksDef = links !== null && links !== void 0 ? links : {};\n    const roomsDef = rooms !== null && rooms !== void 0 ? rooms : {};\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.InstantSchemaDef(enrichEntitiesWithLinks(entities, linksDef), \n    // (XXX): LinksDef<any> stems from TypeScript’s inability to reconcile the\n    // type EntitiesWithLinks<EntitiesWithoutLinks, Links> with\n    // EntitiesWithoutLinks. TypeScript is strict about ensuring that types are\n    // correctly aligned and does not allow for substituting a type that might\n    // be broader or have additional properties.\n    linksDef, roomsDef);\n}\nconst i = {\n    // constructs\n    graph,\n    schema,\n    entity,\n    // value types\n    string,\n    number,\n    boolean,\n    date,\n    json,\n    any,\n};\n//# sourceMappingURL=schema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3NjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3QkFBd0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMERBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtREFBUyxVQUFVO0FBQ2xDO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsT0FBTztBQUNoQztBQUNBLHNFQUFzRTtBQUN0RSxzRUFBc0U7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbURBQVMsMENBQTBDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQixpQkFBaUI7QUFDakI7QUFDQSxNQUFNO0FBQ047QUFDQSxrQkFBa0IseUJBQXlCO0FBQzNDO0FBQ0E7QUFDQSxlQUFlLDBEQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxzY2hlbWEuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW50aXR5RGVmLCBEYXRhQXR0ckRlZiwgSW5zdGFudFNjaGVtYURlZiwgfSBmcm9tIFwiLi9zY2hlbWFUeXBlc1wiO1xuLy8gPT09PT09PT09PVxuLy8gQVBJXG4vKipcbiAqIEBkZXByZWNhdGVkXG4gKiBgaS5ncmFwaGAgaXMgZGVwcmVjYXRlZC4gVXNlIGBpLnNjaGVtYWAgaW5zdGVhZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQmVmb3JlXG4gKiBpLmdyYXBoKGVudGl0aWVzLCBsaW5rcykud2l0aFJvb21TY2hlbWE8Um9vbVR5cGU+KCk7XG4gKlxuICogLy8gQWZ0ZXJcbiAqIGkuc2NoZW1hKHsgZW50aXRpZXMsIGxpbmtzLCByb29tcyB9KVxuICpcbiAqIEBzZWVcbiAqIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL3NjaGVtYVxuICovXG5mdW5jdGlvbiBncmFwaChlbnRpdGllcywgbGlua3MpIHtcbiAgICByZXR1cm4gbmV3IEluc3RhbnRTY2hlbWFEZWYoZW5yaWNoRW50aXRpZXNXaXRoTGlua3MoZW50aXRpZXMsIGxpbmtzKSwgXG4gICAgLy8gKFhYWCk6IExpbmtzRGVmPGFueT4gc3RlbXMgZnJvbSBUeXBlU2NyaXB04oCZcyBpbmFiaWxpdHkgdG8gcmVjb25jaWxlIHRoZVxuICAgIC8vIHR5cGUgRW50aXRpZXNXaXRoTGlua3M8RW50aXRpZXNXaXRob3V0TGlua3MsIExpbmtzPiB3aXRoXG4gICAgLy8gRW50aXRpZXNXaXRob3V0TGlua3MuIFR5cGVTY3JpcHQgaXMgc3RyaWN0IGFib3V0IGVuc3VyaW5nIHRoYXQgdHlwZXMgYXJlXG4gICAgLy8gY29ycmVjdGx5IGFsaWduZWQgYW5kIGRvZXMgbm90IGFsbG93IGZvciBzdWJzdGl0dXRpbmcgYSB0eXBlIHRoYXQgbWlnaHRcbiAgICAvLyBiZSBicm9hZGVyIG9yIGhhdmUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzLlxuICAgIGxpbmtzLCB1bmRlZmluZWQpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGFuIGVudGl0eSBkZWZpbml0aW9uLCB0byBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYGkuZ3JhcGhgLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3Mvc2NoZW1hXG4gKiBAZXhhbXBsZVxuICogICB7XG4gKiAgICAgcG9zdHM6IGkuZW50aXR5KHtcbiAqICAgICAgIHRpdGxlOiBpLnN0cmluZygpLFxuICogICAgICAgYm9keTogaS5zdHJpbmcoKSxcbiAqICAgICB9KSxcbiAqICAgICBjb21tZW50czogaS5lbnRpdHkoe1xuICogICAgICAgYm9keTogaS5zdHJpbmcoKSxcbiAqICAgICB9KVxuICogICB9XG4gKi9cbmZ1bmN0aW9uIGVudGl0eShhdHRycykge1xuICAgIHJldHVybiBuZXcgRW50aXR5RGVmKGF0dHJzLCB7fSk7XG59XG5mdW5jdGlvbiBzdHJpbmcoKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRhQXR0ckRlZihcInN0cmluZ1wiLCB0cnVlKTtcbn1cbmZ1bmN0aW9uIG51bWJlcigpIHtcbiAgICByZXR1cm4gbmV3IERhdGFBdHRyRGVmKFwibnVtYmVyXCIsIHRydWUpO1xufVxuZnVuY3Rpb24gYm9vbGVhbigpIHtcbiAgICByZXR1cm4gbmV3IERhdGFBdHRyRGVmKFwiYm9vbGVhblwiLCB0cnVlKTtcbn1cbmZ1bmN0aW9uIGRhdGUoKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRhQXR0ckRlZihcImRhdGVcIiwgdHJ1ZSk7XG59XG5mdW5jdGlvbiBqc29uKCkge1xuICAgIHJldHVybiBuZXcgRGF0YUF0dHJEZWYoXCJqc29uXCIsIHRydWUpO1xufVxuZnVuY3Rpb24gYW55KCkge1xuICAgIHJldHVybiBuZXcgRGF0YUF0dHJEZWYoXCJqc29uXCIsIHRydWUpO1xufVxuLy8gPT09PT09PT09PVxuLy8gaW50ZXJuYWxcbmZ1bmN0aW9uIGVucmljaEVudGl0aWVzV2l0aExpbmtzKGVudGl0aWVzLCBsaW5rcykge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICBjb25zdCBsaW5rc0luZGV4ID0geyBmd2Q6IHt9LCByZXY6IHt9IH07XG4gICAgZm9yIChjb25zdCBsaW5rRGVmIG9mIE9iamVjdC52YWx1ZXMobGlua3MpKSB7XG4gICAgICAgIChfYSA9IGxpbmtzSW5kZXguZndkKVtfYiA9IGxpbmtEZWYuZm9yd2FyZC5vbl0gfHwgKF9hW19iXSA9IHt9KTtcbiAgICAgICAgKF9jID0gbGlua3NJbmRleC5yZXYpW19kID0gbGlua0RlZi5yZXZlcnNlLm9uXSB8fCAoX2NbX2RdID0ge30pO1xuICAgICAgICBsaW5rc0luZGV4LmZ3ZFtsaW5rRGVmLmZvcndhcmQub25dW2xpbmtEZWYuZm9yd2FyZC5sYWJlbF0gPSB7XG4gICAgICAgICAgICBlbnRpdHlOYW1lOiBsaW5rRGVmLnJldmVyc2Uub24sXG4gICAgICAgICAgICBjYXJkaW5hbGl0eTogbGlua0RlZi5mb3J3YXJkLmhhcyxcbiAgICAgICAgfTtcbiAgICAgICAgbGlua3NJbmRleC5yZXZbbGlua0RlZi5yZXZlcnNlLm9uXVtsaW5rRGVmLnJldmVyc2UubGFiZWxdID0ge1xuICAgICAgICAgICAgZW50aXR5TmFtZTogbGlua0RlZi5mb3J3YXJkLm9uLFxuICAgICAgICAgICAgY2FyZGluYWxpdHk6IGxpbmtEZWYucmV2ZXJzZS5oYXMsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IGVucmljaGVkRW50aXRpZXMgPSBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoZW50aXRpZXMpLm1hcCgoW25hbWUsIGRlZl0pID0+IFtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgbmV3IEVudGl0eURlZihkZWYuYXR0cnMsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgbGlua3NJbmRleC5md2RbbmFtZV0pLCBsaW5rc0luZGV4LnJldltuYW1lXSkpLFxuICAgIF0pKTtcbiAgICByZXR1cm4gZW5yaWNoZWRFbnRpdGllcztcbn1cbi8qKlxuICogTGV0cyB5b3UgZGVmaW5lIGEgc2NoZW1hIGZvciB5b3VyIGRhdGFiYXNlLlxuICpcbiAqIFlvdSBjYW4gZGVmaW5lIGVudGl0aWVzLCBsaW5rcyBiZXR3ZWVuIGVudGl0aWVzLCBhbmQgaWYgeW91IHVzZVxuICogcHJlc2VuY2UsIHlvdSBjYW4gZGVmaW5lIHJvb21zLlxuICpcbiAqIFlvdSBjYW4gcHVzaCB0aGlzIHNjaGVtYSB0byB5b3VyIGRhdGFiYXNlIHdpdGggdGhlIENMSSxcbiAqIG9yIHVzZSBpdCBpbnNpZGUgYGluaXRgLCB0byBnZXQgdHlwZXNhZmV0eSBhbmQgYXV0b2NvbXBsZXRpb24uXG4gKlxuICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9zY2hlbWFcbiAqIEBleGFtcGxlXG4gKiAgIGkuc2NoZW1hKHtcbiAqICAgICBlbnRpdGllczogeyB9LFxuICogICAgIGxpbmtzOiB7IH0sXG4gKiAgICAgcm9vbXM6IHsgfVxuICogICB9KTtcbiAqL1xuZnVuY3Rpb24gc2NoZW1hKHsgZW50aXRpZXMsIGxpbmtzLCByb29tcywgfSkge1xuICAgIGNvbnN0IGxpbmtzRGVmID0gbGlua3MgIT09IG51bGwgJiYgbGlua3MgIT09IHZvaWQgMCA/IGxpbmtzIDoge307XG4gICAgY29uc3Qgcm9vbXNEZWYgPSByb29tcyAhPT0gbnVsbCAmJiByb29tcyAhPT0gdm9pZCAwID8gcm9vbXMgOiB7fTtcbiAgICByZXR1cm4gbmV3IEluc3RhbnRTY2hlbWFEZWYoZW5yaWNoRW50aXRpZXNXaXRoTGlua3MoZW50aXRpZXMsIGxpbmtzRGVmKSwgXG4gICAgLy8gKFhYWCk6IExpbmtzRGVmPGFueT4gc3RlbXMgZnJvbSBUeXBlU2NyaXB04oCZcyBpbmFiaWxpdHkgdG8gcmVjb25jaWxlIHRoZVxuICAgIC8vIHR5cGUgRW50aXRpZXNXaXRoTGlua3M8RW50aXRpZXNXaXRob3V0TGlua3MsIExpbmtzPiB3aXRoXG4gICAgLy8gRW50aXRpZXNXaXRob3V0TGlua3MuIFR5cGVTY3JpcHQgaXMgc3RyaWN0IGFib3V0IGVuc3VyaW5nIHRoYXQgdHlwZXMgYXJlXG4gICAgLy8gY29ycmVjdGx5IGFsaWduZWQgYW5kIGRvZXMgbm90IGFsbG93IGZvciBzdWJzdGl0dXRpbmcgYSB0eXBlIHRoYXQgbWlnaHRcbiAgICAvLyBiZSBicm9hZGVyIG9yIGhhdmUgYWRkaXRpb25hbCBwcm9wZXJ0aWVzLlxuICAgIGxpbmtzRGVmLCByb29tc0RlZik7XG59XG5leHBvcnQgY29uc3QgaSA9IHtcbiAgICAvLyBjb25zdHJ1Y3RzXG4gICAgZ3JhcGgsXG4gICAgc2NoZW1hLFxuICAgIGVudGl0eSxcbiAgICAvLyB2YWx1ZSB0eXBlc1xuICAgIHN0cmluZyxcbiAgICBudW1iZXIsXG4gICAgYm9vbGVhbixcbiAgICBkYXRlLFxuICAgIGpzb24sXG4gICAgYW55LFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVtYS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/schemaTypes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/schemaTypes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataAttrDef: () => (/* binding */ DataAttrDef),\n/* harmony export */   EntityDef: () => (/* binding */ EntityDef),\n/* harmony export */   InstantGraph: () => (/* binding */ InstantGraph),\n/* harmony export */   InstantSchemaDef: () => (/* binding */ InstantSchemaDef),\n/* harmony export */   LinkAttrDef: () => (/* binding */ LinkAttrDef)\n/* harmony export */ });\nclass DataAttrDef {\n    constructor(valueType, required, config = { indexed: false, unique: false }) {\n        this.valueType = valueType;\n        this.required = required;\n        this.config = config;\n    }\n    optional() {\n        return new DataAttrDef(this.valueType, false);\n    }\n    unique() {\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { unique: true }));\n    }\n    indexed() {\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { indexed: true }));\n    }\n}\nclass LinkAttrDef {\n    constructor(cardinality, entityName) {\n        this.cardinality = cardinality;\n        this.entityName = entityName;\n    }\n}\nclass EntityDef {\n    constructor(attrs, links) {\n        this.attrs = attrs;\n        this.links = links;\n    }\n    asType() {\n        return new EntityDef(this.attrs, this.links);\n    }\n}\nclass InstantSchemaDef {\n    constructor(entities, links, rooms) {\n        this.entities = entities;\n        this.links = links;\n        this.rooms = rooms;\n    }\n    /**\n     * @deprecated\n     * `withRoomSchema` is deprecated. Define your schema in `rooms` directly:\n     *\n     * @example\n     * // Before:\n     * const schema = i.schema({\n     *   // ...\n     * }).withRoomSchema<RoomSchema>()\n     *\n     * // After\n     * const schema = i.schema({\n     *  rooms: {\n     *    // ...\n     *  }\n     * })\n     *\n     * @see https://instantdb.com/docs/presence-and-topics#typesafety\n     */\n    withRoomSchema() {\n        return new InstantSchemaDef(this.entities, this.links, {});\n    }\n}\n/**\n * @deprecated\n * `i.graph` is deprecated. Use `i.schema` instead.\n *\n * @see https://instantdb.com/docs/modeling-data\n */\nclass InstantGraph {\n    constructor(entities, links) {\n        this.entities = entities;\n        this.links = links;\n    }\n    withRoomSchema() {\n        return new InstantGraph(this.entities, this.links);\n    }\n}\n//# sourceMappingURL=schemaTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3NjaGVtYVR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUCxnREFBZ0QsK0JBQStCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsa0JBQWtCLGNBQWM7QUFDNUg7QUFDQTtBQUNBLDRGQUE0RixrQkFBa0IsZUFBZTtBQUM3SDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcc2NoZW1hVHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIERhdGFBdHRyRGVmIHtcbiAgICBjb25zdHJ1Y3Rvcih2YWx1ZVR5cGUsIHJlcXVpcmVkLCBjb25maWcgPSB7IGluZGV4ZWQ6IGZhbHNlLCB1bmlxdWU6IGZhbHNlIH0pIHtcbiAgICAgICAgdGhpcy52YWx1ZVR5cGUgPSB2YWx1ZVR5cGU7XG4gICAgICAgIHRoaXMucmVxdWlyZWQgPSByZXF1aXJlZDtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgfVxuICAgIG9wdGlvbmFsKCkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGFBdHRyRGVmKHRoaXMudmFsdWVUeXBlLCBmYWxzZSk7XG4gICAgfVxuICAgIHVuaXF1ZSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRhQXR0ckRlZih0aGlzLnZhbHVlVHlwZSwgdGhpcy5yZXF1aXJlZCwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLmNvbmZpZyksIHsgdW5pcXVlOiB0cnVlIH0pKTtcbiAgICB9XG4gICAgaW5kZXhlZCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRhQXR0ckRlZih0aGlzLnZhbHVlVHlwZSwgdGhpcy5yZXF1aXJlZCwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCB0aGlzLmNvbmZpZyksIHsgaW5kZXhlZDogdHJ1ZSB9KSk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIExpbmtBdHRyRGVmIHtcbiAgICBjb25zdHJ1Y3RvcihjYXJkaW5hbGl0eSwgZW50aXR5TmFtZSkge1xuICAgICAgICB0aGlzLmNhcmRpbmFsaXR5ID0gY2FyZGluYWxpdHk7XG4gICAgICAgIHRoaXMuZW50aXR5TmFtZSA9IGVudGl0eU5hbWU7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEVudGl0eURlZiB7XG4gICAgY29uc3RydWN0b3IoYXR0cnMsIGxpbmtzKSB7XG4gICAgICAgIHRoaXMuYXR0cnMgPSBhdHRycztcbiAgICAgICAgdGhpcy5saW5rcyA9IGxpbmtzO1xuICAgIH1cbiAgICBhc1R5cGUoKSB7XG4gICAgICAgIHJldHVybiBuZXcgRW50aXR5RGVmKHRoaXMuYXR0cnMsIHRoaXMubGlua3MpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBJbnN0YW50U2NoZW1hRGVmIHtcbiAgICBjb25zdHJ1Y3RvcihlbnRpdGllcywgbGlua3MsIHJvb21zKSB7XG4gICAgICAgIHRoaXMuZW50aXRpZXMgPSBlbnRpdGllcztcbiAgICAgICAgdGhpcy5saW5rcyA9IGxpbmtzO1xuICAgICAgICB0aGlzLnJvb21zID0gcm9vbXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICogYHdpdGhSb29tU2NoZW1hYCBpcyBkZXByZWNhdGVkLiBEZWZpbmUgeW91ciBzY2hlbWEgaW4gYHJvb21zYCBkaXJlY3RseTpcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogLy8gQmVmb3JlOlxuICAgICAqIGNvbnN0IHNjaGVtYSA9IGkuc2NoZW1hKHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH0pLndpdGhSb29tU2NoZW1hPFJvb21TY2hlbWE+KClcbiAgICAgKlxuICAgICAqIC8vIEFmdGVyXG4gICAgICogY29uc3Qgc2NoZW1hID0gaS5zY2hlbWEoe1xuICAgICAqICByb29tczoge1xuICAgICAqICAgIC8vIC4uLlxuICAgICAqICB9XG4gICAgICogfSlcbiAgICAgKlxuICAgICAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3MvcHJlc2VuY2UtYW5kLXRvcGljcyN0eXBlc2FmZXR5XG4gICAgICovXG4gICAgd2l0aFJvb21TY2hlbWEoKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW5zdGFudFNjaGVtYURlZih0aGlzLmVudGl0aWVzLCB0aGlzLmxpbmtzLCB7fSk7XG4gICAgfVxufVxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICogYGkuZ3JhcGhgIGlzIGRlcHJlY2F0ZWQuIFVzZSBgaS5zY2hlbWFgIGluc3RlYWQuXG4gKlxuICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9tb2RlbGluZy1kYXRhXG4gKi9cbmV4cG9ydCBjbGFzcyBJbnN0YW50R3JhcGgge1xuICAgIGNvbnN0cnVjdG9yKGVudGl0aWVzLCBsaW5rcykge1xuICAgICAgICB0aGlzLmVudGl0aWVzID0gZW50aXRpZXM7XG4gICAgICAgIHRoaXMubGlua3MgPSBsaW5rcztcbiAgICB9XG4gICAgd2l0aFJvb21TY2hlbWEoKSB7XG4gICAgICAgIHJldHVybiBuZXcgSW5zdGFudEdyYXBoKHRoaXMuZW50aXRpZXMsIHRoaXMubGlua3MpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNjaGVtYVR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/schemaTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/store.js":
/*!***********************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/store.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allMapValues: () => (/* binding */ allMapValues),\n/* harmony export */   createStore: () => (/* binding */ createStore),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   getAsObject: () => (/* binding */ getAsObject),\n/* harmony export */   getAttrByFwdIdentName: () => (/* binding */ getAttrByFwdIdentName),\n/* harmony export */   getAttrByReverseIdentName: () => (/* binding */ getAttrByReverseIdentName),\n/* harmony export */   getPrimaryKeyAttr: () => (/* binding */ getPrimaryKeyAttr),\n/* harmony export */   getTriples: () => (/* binding */ getTriples),\n/* harmony export */   toJSON: () => (/* binding */ toJSON),\n/* harmony export */   transact: () => (/* binding */ transact)\n/* harmony export */ });\n/* harmony import */ var mutative__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mutative */ \"(ssr)/./node_modules/mutative/dist/mutative.esm.mjs\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n\n\nfunction hasEA(attr) {\n    return attr[\"cardinality\"] === \"one\";\n}\nfunction isRef(attr) {\n    return attr[\"value-type\"] === \"ref\";\n}\nfunction isBlob(attr) {\n    return attr[\"value-type\"] === \"blob\";\n}\nfunction getAttr(attrs, attrId) {\n    return attrs[attrId];\n}\nfunction getInMap(obj, path) {\n    return path.reduce((acc, key) => acc && acc.get(key), obj);\n}\nfunction deleteInMap(m, path) {\n    if (path.length === 0)\n        throw new Error(\"path must have at least one element\");\n    if (path.length === 1) {\n        m.delete(path[0]);\n        return;\n    }\n    const [head, ...tail] = path;\n    if (!m.has(head))\n        return;\n    deleteInMap(m.get(head), tail);\n}\nfunction setInMap(m, path, value) {\n    if (path.length === 0)\n        throw new Error(\"path must have at least one element\");\n    if (path.length === 1) {\n        m.set(path[0], value);\n        return;\n    }\n    const [head, ...tail] = path;\n    let nextM = m.get(head);\n    if (!nextM) {\n        nextM = new Map();\n        m.set(head, nextM);\n    }\n    setInMap(nextM, tail, value);\n}\nfunction createTripleIndexes(attrs, triples) {\n    const eav = new Map();\n    const aev = new Map();\n    const vae = new Map();\n    for (const triple of triples) {\n        const [eid, aid, v, t] = triple;\n        const attr = getAttr(attrs, aid);\n        if (!attr) {\n            console.warn(\"no such attr\", eid, attrs);\n            continue;\n        }\n        if (isRef(attr)) {\n            setInMap(vae, [v, aid, eid], triple);\n        }\n        setInMap(eav, [eid, aid, v], triple);\n        setInMap(aev, [aid, eid, v], triple);\n    }\n    return { eav, aev, vae };\n}\nfunction createAttrIndexes(attrs) {\n    const blobAttrs = new Map();\n    const primaryKeys = new Map();\n    const forwardIdents = new Map();\n    const revIdents = new Map();\n    for (const attr of Object.values(attrs)) {\n        const fwdIdent = attr[\"forward-identity\"];\n        const [_, fwdEtype, fwdLabel] = fwdIdent;\n        const revIdent = attr[\"reverse-identity\"];\n        setInMap(forwardIdents, [fwdEtype, fwdLabel], attr);\n        if (isBlob(attr)) {\n            setInMap(blobAttrs, [fwdEtype, fwdLabel], attr);\n        }\n        if (attr[\"primary?\"]) {\n            setInMap(primaryKeys, [fwdEtype], attr);\n        }\n        if (revIdent) {\n            const [_, revEtype, revLabel] = revIdent;\n            setInMap(revIdents, [revEtype, revLabel], attr);\n        }\n    }\n    return { blobAttrs, primaryKeys, forwardIdents, revIdents };\n}\nfunction toJSON(store) {\n    return {\n        __type: store.__type,\n        attrs: store.attrs,\n        triples: allMapValues(store.eav, 3),\n        cardinalityInference: store.cardinalityInference,\n        linkIndex: store.linkIndex,\n    };\n}\nfunction fromJSON(storeJSON) {\n    return createStore(storeJSON.attrs, storeJSON.triples, storeJSON.cardinalityInference, storeJSON.linkIndex);\n}\nfunction resetAttrIndexes(store) {\n    store.attrIndexes = createAttrIndexes(store.attrs);\n}\nfunction createStore(attrs, triples, enableCardinalityInference, linkIndex) {\n    const store = createTripleIndexes(attrs, triples);\n    store.attrs = attrs;\n    store.attrIndexes = createAttrIndexes(attrs);\n    store.cardinalityInference = enableCardinalityInference;\n    store.linkIndex = linkIndex;\n    store.__type = \"store\";\n    return store;\n}\n// We may have local triples with lookup refs in them,\n// we need to convert those lookup refs to eids to insert them\n// into the store. If we can't find the lookup ref locally,\n// then we drop the triple and have to wait for the server response\n// to see the optimistic updates.\nfunction resolveLookupRefs(store, triple) {\n    var _a, _b;\n    let eid;\n    // Check if `e` is a lookup ref\n    if (Array.isArray(triple[0])) {\n        const [a, v] = triple[0];\n        const eMaps = store.aev.get(a);\n        if (!eMaps) {\n            // We don't have the attr, so don't try to add the\n            // triple to the store\n            return null;\n        }\n        // This would be a lot more efficient with a ave index\n        const triples = allMapValues(eMaps, 2);\n        eid = (_a = triples.find((x) => x[2] === v)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    else {\n        eid = triple[0];\n    }\n    if (!eid) {\n        // We don't know the eid that the ref refers to, so\n        // we can't add the triple to the store.\n        return null;\n    }\n    // Check if v is a lookup ref\n    const lookupV = triple[2];\n    if (Array.isArray(lookupV) &&\n        lookupV.length === 2 &&\n        store.aev.get(lookupV[0])) {\n        const [a, v] = lookupV;\n        const eMaps = store.aev.get(a);\n        if (!eMaps) {\n            // We don't have the attr, so don't try to add the\n            // triple to the store\n            return null;\n        }\n        const triples = allMapValues(eMaps, 2);\n        const value = (_b = triples.find((x) => x[2] === v)) === null || _b === void 0 ? void 0 : _b[0];\n        if (!value) {\n            return null;\n        }\n        const [_e, aid, _v, ...rest] = triple;\n        return [eid, aid, value, ...rest];\n    }\n    else {\n        const [_, ...rest] = triple;\n        return [eid, ...rest];\n    }\n}\nfunction retractTriple(store, rawTriple) {\n    const triple = resolveLookupRefs(store, rawTriple);\n    if (!triple) {\n        return;\n    }\n    const [eid, aid, v] = triple;\n    const attr = getAttr(store.attrs, aid);\n    if (!attr) {\n        return;\n    }\n    deleteInMap(store.eav, [eid, aid, v]);\n    deleteInMap(store.aev, [aid, eid, v]);\n    if (isRef(attr)) {\n        deleteInMap(store.vae, [v, aid, eid]);\n    }\n}\nlet _seed = 0;\nfunction getCreatedAt(store, attr, triple) {\n    const [eid, aid, v] = triple;\n    let createdAt;\n    const t = getInMap(store.ea, [eid, aid, v]);\n    if (t) {\n        createdAt = t[3];\n    }\n    /**\n     * (XXX)\n     * Two hacks here, for generating a `createdAt`\n     *\n     * 1. We multiply Date.now() by 10, to make sure that\n     *  `createdAt` is always greater than anything the server\n     *   could return\n     *\n     *   We do this because right now we know we _only_ insert\n     *   triples as optimistic updates.\n     *\n     * 2. We increment by `_seed`, to make sure there are no\n     *    two triples with the same `createdAt`. This is\n     *    done to make tests more predictable.\n     *\n     * We may need to rethink this. Because we * 10, we can't\n     * use this value as an _actual_ `createdAt` timestamp.\n     * Eventually we may want too though; For example, we could\n     * use `createdAt` for each triple, to infer a `createdAt` and\n     * `updatedAt` value for each object.\n     */\n    return createdAt || Date.now() * 10 + _seed++;\n}\nfunction addTriple(store, rawTriple) {\n    var _a;\n    const triple = resolveLookupRefs(store, rawTriple);\n    if (!triple) {\n        return;\n    }\n    const [eid, aid, v] = triple;\n    const attr = getAttr(store.attrs, aid);\n    if (!attr) {\n        // (XXX): Due to the way we're handling attrs, it's\n        // possible to enter a state where we receive a triple without an attr.\n        // See: https://github.com/jsventures/instant-local/pull/132 for details.\n        // For now, if we receive a command without an attr, we no-op.\n        return;\n    }\n    const existingTriple = getInMap(store.eav, [eid, aid, v]);\n    // Reuse the created_at for a triple if it's already in the store.\n    // Prevents updates from temporarily pushing an entity to the top\n    // while waiting for the server response.\n    const t = (_a = existingTriple === null || existingTriple === void 0 ? void 0 : existingTriple[3]) !== null && _a !== void 0 ? _a : getCreatedAt(store, attr, triple);\n    const enhancedTriple = [eid, aid, v, t];\n    if (hasEA(attr)) {\n        setInMap(store.eav, [eid, aid], new Map([[v, enhancedTriple]]));\n        setInMap(store.aev, [aid, eid], new Map([[v, enhancedTriple]]));\n    }\n    else {\n        setInMap(store.eav, [eid, aid, v], enhancedTriple);\n        setInMap(store.aev, [aid, eid, v], enhancedTriple);\n    }\n    if (isRef(attr)) {\n        setInMap(store.vae, [v, aid, eid], enhancedTriple);\n    }\n}\nfunction mergeTriple(store, rawTriple) {\n    var _a;\n    const triple = resolveLookupRefs(store, rawTriple);\n    if (!triple) {\n        return;\n    }\n    const [eid, aid, update] = triple;\n    const attr = getAttr(store.attrs, aid);\n    if (!attr)\n        return;\n    if (!isBlob(attr))\n        throw new Error(\"merge operation is not supported for links\");\n    const eavValuesMap = getInMap(store.eav, [eid, aid]);\n    if (!eavValuesMap)\n        return;\n    const currentTriple = (_a = eavValuesMap.values().next()) === null || _a === void 0 ? void 0 : _a.value;\n    if (!currentTriple)\n        return;\n    const currentValue = currentTriple[2];\n    const updatedValue = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.immutableDeepMerge)(currentValue, update);\n    const enhancedTriple = [\n        eid,\n        aid,\n        updatedValue,\n        getCreatedAt(store, attr, currentTriple),\n    ];\n    setInMap(store.eav, [eid, aid], new Map([[updatedValue, enhancedTriple]]));\n}\nfunction deleteEntity(store, args) {\n    var _a, _b;\n    const [lookup, etype] = args;\n    const triple = resolveLookupRefs(store, [lookup]);\n    if (!triple) {\n        return;\n    }\n    const [id] = triple;\n    // delete forward links and attributes + cardinality one links\n    const eMap = store.eav.get(id);\n    if (eMap) {\n        for (const a of eMap.keys()) {\n            const attr = store.attrs[a];\n            if (\n            // Fall back to deleting everything if we've rehydrated tx-steps from\n            // the store that didn't set `etype` in deleteEntity\n            !etype ||\n                // If we don't know about the attr, let's just get rid of it\n                !attr ||\n                // Make sure it matches the etype\n                ((_a = attr[\"forward-identity\"]) === null || _a === void 0 ? void 0 : _a[1]) === etype) {\n                deleteInMap(store.aev, [a, id]);\n                deleteInMap(store.eav, [id, a]);\n            }\n        }\n        // Clear out the eav index for `id` if we deleted all of the attributes\n        if (eMap.size === 0) {\n            deleteInMap(store.eav, [id]);\n        }\n    }\n    // delete reverse links\n    const vaeTriples = store.vae.get(id) && allMapValues(store.vae.get(id), 2);\n    if (vaeTriples) {\n        vaeTriples.forEach((triple) => {\n            var _a;\n            const [e, a, v] = triple;\n            const attr = store.attrs[a];\n            if (!etype || !attr || ((_a = attr[\"reverse-identity\"]) === null || _a === void 0 ? void 0 : _a[1]) === etype) {\n                deleteInMap(store.eav, [e, a, v]);\n                deleteInMap(store.aev, [a, e, v]);\n                deleteInMap(store.vae, [v, a, e]);\n            }\n        });\n    }\n    // Clear out vae index for `id` if we deleted all the reverse attributes\n    if (((_b = store.vae.get(id)) === null || _b === void 0 ? void 0 : _b.size) === 0) {\n        deleteInMap(store.vae, [id]);\n    }\n}\n// (XXX): Whenever we change/delete attrs,\n// We indiscriminately reset the index map.\n// There are lots of opportunities for optimization:\n// * We _only_ need to run this indexes change. We could detect that\n// * We could batch this reset at the end\n// * We could add an ave index for all triples, so removing the\n//   right triples is easy and fast.\nfunction resetIndexMap(store, newTriples) {\n    const newIndexMap = createTripleIndexes(store.attrs, newTriples);\n    Object.keys(newIndexMap).forEach((key) => {\n        store[key] = newIndexMap[key];\n    });\n}\nfunction addAttr(store, [attr]) {\n    store.attrs[attr.id] = attr;\n    resetAttrIndexes(store);\n}\nfunction getAllTriples(store) {\n    return allMapValues(store.eav, 3);\n}\nfunction deleteAttr(store, [id]) {\n    if (!store.attrs[id])\n        return;\n    const newTriples = getAllTriples(store).filter(([_, aid]) => aid !== id);\n    delete store.attrs[id];\n    resetAttrIndexes(store);\n    resetIndexMap(store, newTriples);\n}\nfunction updateAttr(store, [partialAttr]) {\n    const attr = store.attrs[partialAttr.id];\n    if (!attr)\n        return;\n    store.attrs[partialAttr.id] = Object.assign(Object.assign({}, attr), partialAttr);\n    resetAttrIndexes(store);\n    resetIndexMap(store, getAllTriples(store));\n}\nfunction applyTxStep(store, txStep) {\n    const [action, ...args] = txStep;\n    switch (action) {\n        case \"add-triple\":\n            addTriple(store, args);\n            break;\n        case \"deep-merge-triple\":\n            mergeTriple(store, args);\n            break;\n        case \"retract-triple\":\n            retractTriple(store, args);\n            break;\n        case \"delete-entity\":\n            deleteEntity(store, args);\n            break;\n        case \"add-attr\":\n            addAttr(store, args);\n            break;\n        case \"delete-attr\":\n            deleteAttr(store, args);\n            break;\n        case \"update-attr\":\n            updateAttr(store, args);\n            break;\n        default:\n            throw new Error(`unhandled transaction action: ${action}`);\n    }\n}\nfunction allMapValues(m, level, res = []) {\n    if (!m) {\n        return res;\n    }\n    if (level === 0) {\n        return res;\n    }\n    if (level === 1) {\n        for (const v of m.values()) {\n            res.push(v);\n        }\n        return res;\n    }\n    for (const v of m.values()) {\n        allMapValues(v, level - 1, res);\n    }\n    return res;\n}\nfunction triplesByValue(store, m, v) {\n    var _a, _b;\n    const res = [];\n    if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$not\")) {\n        for (const candidate of m.keys()) {\n            if (v.$not !== candidate) {\n                res.push(m.get(candidate));\n            }\n        }\n        return res;\n    }\n    if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$isNull\")) {\n        const { attrId, isNull, reverse } = v.$isNull;\n        if (reverse) {\n            for (const candidate of m.keys()) {\n                const vMap = store.vae.get(candidate);\n                const isValNull = !vMap || ((_a = vMap.get(attrId)) === null || _a === void 0 ? void 0 : _a.get(null)) || !vMap.get(attrId);\n                if (isNull ? isValNull : !isValNull) {\n                    res.push(m.get(candidate));\n                }\n            }\n        }\n        else {\n            const aMap = store.aev.get(attrId);\n            for (const candidate of m.keys()) {\n                const isValNull = !aMap || ((_b = aMap.get(candidate)) === null || _b === void 0 ? void 0 : _b.get(null)) || !aMap.get(candidate);\n                if (isNull ? isValNull : !isValNull) {\n                    res.push(m.get(candidate));\n                }\n            }\n        }\n        return res;\n    }\n    if (v === null || v === void 0 ? void 0 : v.$comparator) {\n        // TODO: A sorted index would be nice here\n        return allMapValues(m, 1).filter(v.$op);\n    }\n    const values = v.in || v.$in || [v];\n    for (const value of values) {\n        const triple = m.get(value);\n        if (triple) {\n            res.push(triple);\n        }\n    }\n    return res;\n}\n// A poor man's pattern matching\n// Returns either eav, ea, ev, av, v, or ''\nfunction whichIdx(e, a, v) {\n    let res = \"\";\n    if (e !== undefined) {\n        res += \"e\";\n    }\n    if (a !== undefined) {\n        res += \"a\";\n    }\n    if (v !== undefined) {\n        res += \"v\";\n    }\n    return res;\n}\nfunction getTriples(store, [e, a, v]) {\n    var _a, _b;\n    const idx = whichIdx(e, a, v);\n    switch (idx) {\n        case \"e\": {\n            const eMap = store.eav.get(e);\n            return allMapValues(eMap, 2);\n        }\n        case \"ea\": {\n            const aMap = (_a = store.eav.get(e)) === null || _a === void 0 ? void 0 : _a.get(a);\n            return allMapValues(aMap, 1);\n        }\n        case \"eav\": {\n            const aMap = (_b = store.eav.get(e)) === null || _b === void 0 ? void 0 : _b.get(a);\n            if (!aMap) {\n                return [];\n            }\n            return triplesByValue(store, aMap, v);\n        }\n        case \"ev\": {\n            const eMap = store.eav.get(e);\n            if (!eMap) {\n                return [];\n            }\n            const res = [];\n            for (const aMap of eMap.values()) {\n                res.push(...triplesByValue(store, aMap, v));\n            }\n            return res;\n        }\n        case \"a\": {\n            const aMap = store.aev.get(a);\n            return allMapValues(aMap, 2);\n        }\n        case \"av\": {\n            const aMap = store.aev.get(a);\n            if (!aMap) {\n                return [];\n            }\n            const res = [];\n            for (const eMap of aMap.values()) {\n                res.push(...triplesByValue(store, eMap, v));\n            }\n            return res;\n        }\n        case \"v\": {\n            const res = [];\n            for (const eMap of store.eav.values()) {\n                for (const aMap of eMap.values()) {\n                    res.push(...triplesByValue(store, aMap, v));\n                }\n            }\n        }\n        default: {\n            return allMapValues(store.eav, 3);\n        }\n    }\n}\nfunction getAsObject(store, etype, e) {\n    var _a;\n    const blobAttrs = store.attrIndexes.blobAttrs.get(etype);\n    const obj = {};\n    for (const [label, attr] of blobAttrs.entries()) {\n        const aMap = (_a = store.eav.get(e)) === null || _a === void 0 ? void 0 : _a.get(attr.id);\n        const triples = allMapValues(aMap, 1);\n        for (const triple of triples) {\n            obj[label] = triple[2];\n        }\n    }\n    return obj;\n}\nfunction getAttrByFwdIdentName(store, inputEtype, inputLabel) {\n    var _a;\n    return (_a = store.attrIndexes.forwardIdents.get(inputEtype)) === null || _a === void 0 ? void 0 : _a.get(inputLabel);\n}\nfunction getAttrByReverseIdentName(store, inputEtype, inputLabel) {\n    var _a;\n    return (_a = store.attrIndexes.revIdents.get(inputEtype)) === null || _a === void 0 ? void 0 : _a.get(inputLabel);\n}\nfunction getPrimaryKeyAttr(store, etype) {\n    var _a;\n    const fromPrimary = store.attrIndexes.primaryKeys.get(etype);\n    if (fromPrimary) {\n        return fromPrimary;\n    }\n    return (_a = store.attrIndexes.forwardIdents.get(etype)) === null || _a === void 0 ? void 0 : _a.get(\"id\");\n}\nfunction transact(store, txSteps) {\n    return (0,mutative__WEBPACK_IMPORTED_MODULE_0__.create)(store, (draft) => {\n        txSteps.forEach((txStep) => {\n            applyTxStep(draft, txStep);\n        });\n    });\n}\n//# sourceMappingURL=store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/Deferred.js":
/*!********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/Deferred.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deferred: () => (/* binding */ Deferred)\n/* harmony export */ });\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n    resolve(value) {\n        this._resolve(value);\n    }\n    reject(reason) {\n        this._reject(reason);\n    }\n}\n//# sourceMappingURL=Deferred.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL0RlZmVycmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXHV0aWxzXFxEZWZlcnJlZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRGVmZXJyZWQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9yZXNvbHZlID0gcmVzb2x2ZTtcbiAgICAgICAgICAgIHRoaXMuX3JlamVjdCA9IHJlamVjdDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlc29sdmUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fcmVzb2x2ZSh2YWx1ZSk7XG4gICAgfVxuICAgIHJlamVjdChyZWFzb24pIHtcbiAgICAgICAgdGhpcy5fcmVqZWN0KHJlYXNvbik7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGVmZXJyZWQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/Deferred.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PersistedObject: () => (/* binding */ PersistedObject)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// PersistedObjects save data outside of memory.\n//\n// When we load a persisted object, it's possible we call `set`\n// before we finish loading. To address we handle set in two ways:\n//\n// 1. Before load\n// We simply update currentValue in memory\n//\n// 2. After load\n// We update currentValue in memory and in storage\n//\n// Each PersistedObject provides it's own `onMerge`\n// function to handle the merge of data from storage and memory\n// on load\nclass PersistedObject {\n    constructor(persister, key, defaultValue, onMerge, toJSON = (x) => {\n        return JSON.stringify(x);\n    }, fromJSON = (x) => {\n        return JSON.parse(x);\n    }, saveThrottleMs = 100) {\n        this._subs = [];\n        this._persister = persister;\n        this._key = key;\n        this._onMerge = onMerge;\n        this._loadedCbs = [];\n        this._isLoading = true;\n        this.currentValue = defaultValue;\n        this.toJSON = toJSON;\n        this.fromJSON = fromJSON;\n        this._saveThrottleMs = saveThrottleMs;\n        this._pendingSaveCbs = [];\n        this._version = 0;\n        this._load();\n    }\n    _load() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fromStorage = this.fromJSON(yield this._persister.getItem(this._key));\n            this._isLoading = false;\n            this._onMerge(fromStorage, this.currentValue);\n            for (const cb of this._loadedCbs) {\n                cb();\n            }\n        });\n    }\n    waitForLoaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._isLoading) {\n                return;\n            }\n            const loadedPromise = new Promise((resolve) => {\n                this._loadedCbs.push(resolve);\n            });\n            yield loadedPromise;\n        });\n    }\n    isLoading() {\n        return this._isLoading;\n    }\n    version() {\n        return this._version;\n    }\n    waitForSync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._nextSave) {\n                return;\n            }\n            const syncedPromise = new Promise((resolve) => {\n                this._pendingSaveCbs.push(resolve);\n            });\n            yield syncedPromise;\n        });\n    }\n    _writeToStorage() {\n        this._persister.setItem(this._key, this.toJSON(this.currentValue));\n        for (const cb of this._pendingSaveCbs) {\n            cb();\n        }\n        this._pendingSaveCbs.length = 0;\n    }\n    flush() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._nextSave) {\n                return;\n            }\n            clearTimeout(this._nextSave);\n            this._writeToStorage();\n        });\n    }\n    _enqueuePersist(cb) {\n        if (this._nextSave) {\n            if (cb) {\n                this._pendingSaveCbs.push(cb);\n            }\n            return;\n        }\n        this._nextSave = setTimeout(() => {\n            this._nextSave = null;\n            this._writeToStorage();\n        }, this._saveThrottleMs);\n    }\n    set(f, cb) {\n        this._version++;\n        this.currentValue = f(this.currentValue);\n        if (this._isLoading) {\n            this._loadedCbs.push(() => this._enqueuePersist(cb));\n        }\n        else {\n            this._enqueuePersist(cb);\n        }\n        for (const sub of this._subs) {\n            sub(this.currentValue);\n        }\n    }\n    subscribe(cb) {\n        this._subs.push(cb);\n        cb(this.currentValue);\n        return () => {\n            this._subs = this._subs.filter((x) => x !== cb);\n        };\n    }\n}\n//# sourceMappingURL=PersistedObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL1BlcnNpc3RlZE9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXHV0aWxzXFxQZXJzaXN0ZWRPYmplY3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG4vLyBQZXJzaXN0ZWRPYmplY3RzIHNhdmUgZGF0YSBvdXRzaWRlIG9mIG1lbW9yeS5cbi8vXG4vLyBXaGVuIHdlIGxvYWQgYSBwZXJzaXN0ZWQgb2JqZWN0LCBpdCdzIHBvc3NpYmxlIHdlIGNhbGwgYHNldGBcbi8vIGJlZm9yZSB3ZSBmaW5pc2ggbG9hZGluZy4gVG8gYWRkcmVzcyB3ZSBoYW5kbGUgc2V0IGluIHR3byB3YXlzOlxuLy9cbi8vIDEuIEJlZm9yZSBsb2FkXG4vLyBXZSBzaW1wbHkgdXBkYXRlIGN1cnJlbnRWYWx1ZSBpbiBtZW1vcnlcbi8vXG4vLyAyLiBBZnRlciBsb2FkXG4vLyBXZSB1cGRhdGUgY3VycmVudFZhbHVlIGluIG1lbW9yeSBhbmQgaW4gc3RvcmFnZVxuLy9cbi8vIEVhY2ggUGVyc2lzdGVkT2JqZWN0IHByb3ZpZGVzIGl0J3Mgb3duIGBvbk1lcmdlYFxuLy8gZnVuY3Rpb24gdG8gaGFuZGxlIHRoZSBtZXJnZSBvZiBkYXRhIGZyb20gc3RvcmFnZSBhbmQgbWVtb3J5XG4vLyBvbiBsb2FkXG5leHBvcnQgY2xhc3MgUGVyc2lzdGVkT2JqZWN0IHtcbiAgICBjb25zdHJ1Y3RvcihwZXJzaXN0ZXIsIGtleSwgZGVmYXVsdFZhbHVlLCBvbk1lcmdlLCB0b0pTT04gPSAoeCkgPT4ge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoeCk7XG4gICAgfSwgZnJvbUpTT04gPSAoeCkgPT4ge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh4KTtcbiAgICB9LCBzYXZlVGhyb3R0bGVNcyA9IDEwMCkge1xuICAgICAgICB0aGlzLl9zdWJzID0gW107XG4gICAgICAgIHRoaXMuX3BlcnNpc3RlciA9IHBlcnNpc3RlcjtcbiAgICAgICAgdGhpcy5fa2V5ID0ga2V5O1xuICAgICAgICB0aGlzLl9vbk1lcmdlID0gb25NZXJnZTtcbiAgICAgICAgdGhpcy5fbG9hZGVkQ2JzID0gW107XG4gICAgICAgIHRoaXMuX2lzTG9hZGluZyA9IHRydWU7XG4gICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICB0aGlzLnRvSlNPTiA9IHRvSlNPTjtcbiAgICAgICAgdGhpcy5mcm9tSlNPTiA9IGZyb21KU09OO1xuICAgICAgICB0aGlzLl9zYXZlVGhyb3R0bGVNcyA9IHNhdmVUaHJvdHRsZU1zO1xuICAgICAgICB0aGlzLl9wZW5kaW5nU2F2ZUNicyA9IFtdO1xuICAgICAgICB0aGlzLl92ZXJzaW9uID0gMDtcbiAgICAgICAgdGhpcy5fbG9hZCgpO1xuICAgIH1cbiAgICBfbG9hZCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGZyb21TdG9yYWdlID0gdGhpcy5mcm9tSlNPTih5aWVsZCB0aGlzLl9wZXJzaXN0ZXIuZ2V0SXRlbSh0aGlzLl9rZXkpKTtcbiAgICAgICAgICAgIHRoaXMuX2lzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5fb25NZXJnZShmcm9tU3RvcmFnZSwgdGhpcy5jdXJyZW50VmFsdWUpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBjYiBvZiB0aGlzLl9sb2FkZWRDYnMpIHtcbiAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgd2FpdEZvckxvYWRlZCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5faXNMb2FkaW5nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbG9hZGVkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbG9hZGVkQ2JzLnB1c2gocmVzb2x2ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHlpZWxkIGxvYWRlZFByb21pc2U7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpc0xvYWRpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0xvYWRpbmc7XG4gICAgfVxuICAgIHZlcnNpb24oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl92ZXJzaW9uO1xuICAgIH1cbiAgICB3YWl0Rm9yU3luYygpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5fbmV4dFNhdmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBzeW5jZWRQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wZW5kaW5nU2F2ZUNicy5wdXNoKHJlc29sdmUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB5aWVsZCBzeW5jZWRQcm9taXNlO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX3dyaXRlVG9TdG9yYWdlKCkge1xuICAgICAgICB0aGlzLl9wZXJzaXN0ZXIuc2V0SXRlbSh0aGlzLl9rZXksIHRoaXMudG9KU09OKHRoaXMuY3VycmVudFZhbHVlKSk7XG4gICAgICAgIGZvciAoY29uc3QgY2Igb2YgdGhpcy5fcGVuZGluZ1NhdmVDYnMpIHtcbiAgICAgICAgICAgIGNiKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcGVuZGluZ1NhdmVDYnMubGVuZ3RoID0gMDtcbiAgICB9XG4gICAgZmx1c2goKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX25leHRTYXZlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuX25leHRTYXZlKTtcbiAgICAgICAgICAgIHRoaXMuX3dyaXRlVG9TdG9yYWdlKCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfZW5xdWV1ZVBlcnNpc3QoY2IpIHtcbiAgICAgICAgaWYgKHRoaXMuX25leHRTYXZlKSB7XG4gICAgICAgICAgICBpZiAoY2IpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wZW5kaW5nU2F2ZUNicy5wdXNoKGNiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9uZXh0U2F2ZSA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fbmV4dFNhdmUgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5fd3JpdGVUb1N0b3JhZ2UoKTtcbiAgICAgICAgfSwgdGhpcy5fc2F2ZVRocm90dGxlTXMpO1xuICAgIH1cbiAgICBzZXQoZiwgY2IpIHtcbiAgICAgICAgdGhpcy5fdmVyc2lvbisrO1xuICAgICAgICB0aGlzLmN1cnJlbnRWYWx1ZSA9IGYodGhpcy5jdXJyZW50VmFsdWUpO1xuICAgICAgICBpZiAodGhpcy5faXNMb2FkaW5nKSB7XG4gICAgICAgICAgICB0aGlzLl9sb2FkZWRDYnMucHVzaCgoKSA9PiB0aGlzLl9lbnF1ZXVlUGVyc2lzdChjYikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fZW5xdWV1ZVBlcnNpc3QoY2IpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3Qgc3ViIG9mIHRoaXMuX3N1YnMpIHtcbiAgICAgICAgICAgIHN1Yih0aGlzLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3Vic2NyaWJlKGNiKSB7XG4gICAgICAgIHRoaXMuX3N1YnMucHVzaChjYik7XG4gICAgICAgIGNiKHRoaXMuY3VycmVudFZhbHVlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3N1YnMgPSB0aGlzLl9zdWJzLmZpbHRlcigoeCkgPT4geCAhPT0gY2IpO1xuICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBlcnNpc3RlZE9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/fetch.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonFetch: () => (/* binding */ jsonFetch)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction jsonFetch(input, init) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = yield fetch(input, init);\n        const json = yield res.json();\n        return res.status === 200\n            ? Promise.resolve(json)\n            : Promise.reject({ status: res.status, body: json });\n    });\n}\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsZ0NBQWdDO0FBQy9ELEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcdXRpbHNcXGZldGNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGpzb25GZXRjaChpbnB1dCwgaW5pdCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIGZldGNoKGlucHV0LCBpbml0KTtcbiAgICAgICAgY29uc3QganNvbiA9IHlpZWxkIHJlcy5qc29uKCk7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzID09PSAyMDBcbiAgICAgICAgICAgID8gUHJvbWlzZS5yZXNvbHZlKGpzb24pXG4gICAgICAgICAgICA6IFByb21pc2UucmVqZWN0KHsgc3RhdHVzOiByZXMuc3RhdHVzLCBib2R5OiBqc29uIH0pO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2guanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/linkIndex.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/linkIndex.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLinkIndex: () => (/* binding */ createLinkIndex)\n/* harmony export */ });\nfunction createLinkIndex(schema) {\n    return Object.values(schema.links).reduce((linkIndex, link) => {\n        var _a, _b;\n        var _c, _d;\n        (_a = linkIndex[_c = link.forward.on]) !== null && _a !== void 0 ? _a : (linkIndex[_c] = {});\n        linkIndex[link.forward.on][link.forward.label] = {\n            isForward: true,\n            isSingular: link.forward.has === \"one\",\n            link,\n        };\n        (_b = linkIndex[_d = link.reverse.on]) !== null && _b !== void 0 ? _b : (linkIndex[_d] = {});\n        linkIndex[link.reverse.on][link.reverse.label] = {\n            isForward: false,\n            isSingular: link.reverse.has === \"one\",\n            link,\n        };\n        return linkIndex;\n    }, {});\n}\n//# sourceMappingURL=linkIndex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL2xpbmtJbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1HQUFtRztBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUk7QUFDVDtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcdXRpbHNcXGxpbmtJbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY3JlYXRlTGlua0luZGV4KHNjaGVtYSkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHNjaGVtYS5saW5rcykucmVkdWNlKChsaW5rSW5kZXgsIGxpbmspID0+IHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgdmFyIF9jLCBfZDtcbiAgICAgICAgKF9hID0gbGlua0luZGV4W19jID0gbGluay5mb3J3YXJkLm9uXSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKGxpbmtJbmRleFtfY10gPSB7fSk7XG4gICAgICAgIGxpbmtJbmRleFtsaW5rLmZvcndhcmQub25dW2xpbmsuZm9yd2FyZC5sYWJlbF0gPSB7XG4gICAgICAgICAgICBpc0ZvcndhcmQ6IHRydWUsXG4gICAgICAgICAgICBpc1Npbmd1bGFyOiBsaW5rLmZvcndhcmQuaGFzID09PSBcIm9uZVwiLFxuICAgICAgICAgICAgbGluayxcbiAgICAgICAgfTtcbiAgICAgICAgKF9iID0gbGlua0luZGV4W19kID0gbGluay5yZXZlcnNlLm9uXSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogKGxpbmtJbmRleFtfZF0gPSB7fSk7XG4gICAgICAgIGxpbmtJbmRleFtsaW5rLnJldmVyc2Uub25dW2xpbmsucmV2ZXJzZS5sYWJlbF0gPSB7XG4gICAgICAgICAgICBpc0ZvcndhcmQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNTaW5ndWxhcjogbGluay5yZXZlcnNlLmhhcyA9PT0gXCJvbmVcIixcbiAgICAgICAgICAgIGxpbmssXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBsaW5rSW5kZXg7XG4gICAgfSwge30pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bGlua0luZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/linkIndex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/log.js":
/*!***************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/log.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nlet isEnabled = false;\nif (typeof window !== \"undefined\" &&\n    typeof window.localStorage !== \"undefined\") {\n    isEnabled =\n        !!window.localStorage.getItem(\"devBackend\") ||\n            !!window.localStorage.getItem(\"__instantLogging\");\n}\nconst log = {\n    info: isEnabled ? console.info.bind(console) : () => { },\n    debug: isEnabled ? console.debug.bind(console) : () => { },\n    error: isEnabled ? console.error.bind(console) : () => { },\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (log);\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL2xvZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RDtBQUM1RCw4REFBOEQ7QUFDOUQsOERBQThEO0FBQzlEO0FBQ0EsaUVBQWUsR0FBRyxFQUFDO0FBQ25CIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcdXRpbHNcXGxvZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgaXNFbmFibGVkID0gZmFsc2U7XG5pZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgIHR5cGVvZiB3aW5kb3cubG9jYWxTdG9yYWdlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgaXNFbmFibGVkID1cbiAgICAgICAgISF3aW5kb3cubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkZXZCYWNrZW5kXCIpIHx8XG4gICAgICAgICAgICAhIXdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIl9faW5zdGFudExvZ2dpbmdcIik7XG59XG5jb25zdCBsb2cgPSB7XG4gICAgaW5mbzogaXNFbmFibGVkID8gY29uc29sZS5pbmZvLmJpbmQoY29uc29sZSkgOiAoKSA9PiB7IH0sXG4gICAgZGVidWc6IGlzRW5hYmxlZCA/IGNvbnNvbGUuZGVidWcuYmluZChjb25zb2xlKSA6ICgpID0+IHsgfSxcbiAgICBlcnJvcjogaXNFbmFibGVkID8gY29uc29sZS5lcnJvci5iaW5kKGNvbnNvbGUpIDogKCkgPT4geyB9LFxufTtcbmV4cG9ydCBkZWZhdWx0IGxvZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js":
/*!******************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/object.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areObjectKeysEqual: () => (/* binding */ areObjectKeysEqual),\n/* harmony export */   areObjectsDeepEqual: () => (/* binding */ areObjectsDeepEqual),\n/* harmony export */   areObjectsShallowEqual: () => (/* binding */ areObjectsShallowEqual),\n/* harmony export */   immutableDeepMerge: () => (/* binding */ immutableDeepMerge),\n/* harmony export */   immutableDeepReplace: () => (/* binding */ immutableDeepReplace),\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\nfunction areObjectKeysEqual(a, b) {\n    const ak = Object.keys(a);\n    const bk = Object.keys(b);\n    return (ak.length === bk.length && Object.keys(a).every((k) => b.hasOwnProperty(k)));\n}\nfunction areObjectsShallowEqual(obj1, obj2) {\n    return (Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]));\n}\nfunction areObjectsDeepEqual(obj1, obj2) {\n    if (typeof obj1 !== \"object\" ||\n        typeof obj2 !== \"object\" ||\n        obj1 === null ||\n        obj2 === null) {\n        return obj1 === obj2;\n    }\n    if (!areObjectKeysEqual(obj1, obj2)) {\n        return false;\n    }\n    return Object.keys(obj1).every((key) => areObjectsDeepEqual(obj1[key], obj2[key]));\n}\nfunction immutableDeepMerge(target, source) {\n    if (!isObject(target) || !isObject(source)) {\n        return source;\n    }\n    const result = {};\n    for (const key of Object.keys(target)) {\n        if (source[key] === null)\n            continue;\n        result[key] = target[key];\n    }\n    for (const key of Object.keys(source)) {\n        if (source[key] === null)\n            continue;\n        const areBothObjects = isObject(target[key]) && isObject(source[key]);\n        result[key] = areBothObjects\n            ? immutableDeepMerge(target[key], source[key])\n            : source[key];\n    }\n    return result;\n}\nfunction immutableDeepReplace(target, replaceValue, replacementValue) {\n    if (!isObject(target)) {\n        return target;\n    }\n    const result = {};\n    for (const [key, value] of Object.entries(target)) {\n        result[key] = isObject(value)\n            ? immutableDeepReplace(value, replaceValue, replacementValue)\n            : value === replaceValue\n                ? replacementValue\n                : value;\n    }\n    return result;\n}\nfunction isObject(val) {\n    return typeof val === \"object\" && val !== null && !Array.isArray(val);\n}\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL29iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcdXRpbHNcXG9iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gYXJlT2JqZWN0S2V5c0VxdWFsKGEsIGIpIHtcbiAgICBjb25zdCBhayA9IE9iamVjdC5rZXlzKGEpO1xuICAgIGNvbnN0IGJrID0gT2JqZWN0LmtleXMoYik7XG4gICAgcmV0dXJuIChhay5sZW5ndGggPT09IGJrLmxlbmd0aCAmJiBPYmplY3Qua2V5cyhhKS5ldmVyeSgoaykgPT4gYi5oYXNPd25Qcm9wZXJ0eShrKSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFyZU9iamVjdHNTaGFsbG93RXF1YWwob2JqMSwgb2JqMikge1xuICAgIHJldHVybiAoT2JqZWN0LmtleXMob2JqMSkubGVuZ3RoID09PSBPYmplY3Qua2V5cyhvYmoyKS5sZW5ndGggJiZcbiAgICAgICAgT2JqZWN0LmtleXMob2JqMSkuZXZlcnkoKGtleSkgPT4gb2JqMi5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIG9iajFba2V5XSA9PT0gb2JqMltrZXldKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYXJlT2JqZWN0c0RlZXBFcXVhbChvYmoxLCBvYmoyKSB7XG4gICAgaWYgKHR5cGVvZiBvYmoxICE9PSBcIm9iamVjdFwiIHx8XG4gICAgICAgIHR5cGVvZiBvYmoyICE9PSBcIm9iamVjdFwiIHx8XG4gICAgICAgIG9iajEgPT09IG51bGwgfHxcbiAgICAgICAgb2JqMiA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gb2JqMSA9PT0gb2JqMjtcbiAgICB9XG4gICAgaWYgKCFhcmVPYmplY3RLZXlzRXF1YWwob2JqMSwgb2JqMikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqMSkuZXZlcnkoKGtleSkgPT4gYXJlT2JqZWN0c0RlZXBFcXVhbChvYmoxW2tleV0sIG9iajJba2V5XSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGltbXV0YWJsZURlZXBNZXJnZSh0YXJnZXQsIHNvdXJjZSkge1xuICAgIGlmICghaXNPYmplY3QodGFyZ2V0KSB8fCAhaXNPYmplY3Qoc291cmNlKSkge1xuICAgICAgICByZXR1cm4gc291cmNlO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyh0YXJnZXQpKSB7XG4gICAgICAgIGlmIChzb3VyY2Vba2V5XSA9PT0gbnVsbClcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICByZXN1bHRba2V5XSA9IHRhcmdldFtrZXldO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhzb3VyY2UpKSB7XG4gICAgICAgIGlmIChzb3VyY2Vba2V5XSA9PT0gbnVsbClcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICBjb25zdCBhcmVCb3RoT2JqZWN0cyA9IGlzT2JqZWN0KHRhcmdldFtrZXldKSAmJiBpc09iamVjdChzb3VyY2Vba2V5XSk7XG4gICAgICAgIHJlc3VsdFtrZXldID0gYXJlQm90aE9iamVjdHNcbiAgICAgICAgICAgID8gaW1tdXRhYmxlRGVlcE1lcmdlKHRhcmdldFtrZXldLCBzb3VyY2Vba2V5XSlcbiAgICAgICAgICAgIDogc291cmNlW2tleV07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaW1tdXRhYmxlRGVlcFJlcGxhY2UodGFyZ2V0LCByZXBsYWNlVmFsdWUsIHJlcGxhY2VtZW50VmFsdWUpIHtcbiAgICBpZiAoIWlzT2JqZWN0KHRhcmdldCkpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXModGFyZ2V0KSkge1xuICAgICAgICByZXN1bHRba2V5XSA9IGlzT2JqZWN0KHZhbHVlKVxuICAgICAgICAgICAgPyBpbW11dGFibGVEZWVwUmVwbGFjZSh2YWx1ZSwgcmVwbGFjZVZhbHVlLCByZXBsYWNlbWVudFZhbHVlKVxuICAgICAgICAgICAgOiB2YWx1ZSA9PT0gcmVwbGFjZVZhbHVlXG4gICAgICAgICAgICAgICAgPyByZXBsYWNlbWVudFZhbHVlXG4gICAgICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdCh2YWwpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gXCJvYmplY3RcIiAmJiB2YWwgIT09IG51bGwgJiYgIUFycmF5LmlzQXJyYXkodmFsKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/pick.js":
/*!****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/pick.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pick: () => (/* binding */ pick)\n/* harmony export */ });\nfunction pick(obj, keys) {\n    if (!keys)\n        return obj;\n    const ret = {};\n    keys.forEach((key) => {\n        ret[key] = obj[key];\n    });\n    return ret;\n}\n//# sourceMappingURL=pick.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL3BpY2suanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx1dGlsc1xccGljay5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGljayhvYmosIGtleXMpIHtcbiAgICBpZiAoIWtleXMpXG4gICAgICAgIHJldHVybiBvYmo7XG4gICAgY29uc3QgcmV0ID0ge307XG4gICAga2V5cy5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgcmV0W2tleV0gPSBvYmpba2V5XTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmV0O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGljay5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/pick.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js":
/*!****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/uuid.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   uuidCompare: () => (/* binding */ uuidCompare)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n\nfunction uuidToByteArray(uuid) {\n    const hex = uuid.replace(/-/g, \"\");\n    const bytes = [];\n    for (let i = 0; i < hex.length; i += 2) {\n        bytes.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n    return bytes;\n}\nfunction compareByteArrays(a, b) {\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] < b[i])\n            return -1;\n        if (a[i] > b[i])\n            return 1;\n    }\n    return 0;\n}\nfunction uuidCompare(uuid_a, uuid_b) {\n    return compareByteArrays(uuidToByteArray(uuid_a), uuidToByteArray(uuid_b));\n}\nfunction id() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (id);\n//# sourceMappingURL=uuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdEQUFFO0FBQ2I7QUFDQSxpRUFBZSxFQUFFLEVBQUM7QUFDbEIiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx1dGlsc1xcdXVpZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2NCB9IGZyb20gXCJ1dWlkXCI7XG5mdW5jdGlvbiB1dWlkVG9CeXRlQXJyYXkodXVpZCkge1xuICAgIGNvbnN0IGhleCA9IHV1aWQucmVwbGFjZSgvLS9nLCBcIlwiKTtcbiAgICBjb25zdCBieXRlcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaGV4Lmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgIGJ5dGVzLnB1c2gocGFyc2VJbnQoaGV4LnN1YnN0cmluZyhpLCBpICsgMiksIDE2KSk7XG4gICAgfVxuICAgIHJldHVybiBieXRlcztcbn1cbmZ1bmN0aW9uIGNvbXBhcmVCeXRlQXJyYXlzKGEsIGIpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGFbaV0gPCBiW2ldKVxuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICBpZiAoYVtpXSA+IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG59XG5leHBvcnQgZnVuY3Rpb24gdXVpZENvbXBhcmUodXVpZF9hLCB1dWlkX2IpIHtcbiAgICByZXR1cm4gY29tcGFyZUJ5dGVBcnJheXModXVpZFRvQnl0ZUFycmF5KHV1aWRfYSksIHV1aWRUb0J5dGVBcnJheSh1dWlkX2IpKTtcbn1cbmZ1bmN0aW9uIGlkKCkge1xuICAgIHJldHVybiB2NCgpO1xufVxuZXhwb3J0IGRlZmF1bHQgaWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js":
/*!********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/weakHash.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ weakHash)\n/* harmony export */ });\n/**\n *\n * Unique Hashing implementation inspired by djb2/fnv1a algorithms,\n * where we are not concerned with the hash being decoded.\n * Focuses on speed while maintaining good hash distribution\n *\n * Note: We could also use something like Murmurhash instead\n * https://github.com/jensyt/imurmurhash-js/blob/master/imurmurhash.js\n *\n * @param {any} input - Value to hash\n * @returns {string} - Hash in hex format\n */\nfunction weakHash(input) {\n    // Handle primitives without JSON stringify for better performance\n    if (typeof input === 'number') {\n        // Use a larger number space for numeric values\n        return (Math.abs(input * 2654435761) >>> 0).toString(16);\n    }\n    if (typeof input === 'boolean')\n        return input ? '1' : '0';\n    if (input === null)\n        return 'null';\n    if (input === undefined)\n        return 'undefined';\n    // For strings, use FNV-1a algorithm\n    if (typeof input === 'string') {\n        let hash = 0x811C9DC5; // FNV offset basis (32 bit)\n        for (let i = 0; i < input.length; i++) {\n            hash ^= input.charCodeAt(i);\n            hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n            hash = hash >>> 0; // Convert to unsigned 32-bit after each iteration\n        }\n        return hash.toString(16);\n    }\n    // For arrays, hash elements directly\n    if (Array.isArray(input)) {\n        let hash = 0x811C9DC5;\n        for (let i = 0; i < input.length; i++) {\n            // Add array position to hash calculation\n            hash ^= (i + 1) * 2654435761;\n            // Recursively hash array elements\n            const elementHash = weakHash(input[i]);\n            // Mix the element hash into the running hash\n            for (let j = 0; j < elementHash.length; j++) {\n                hash ^= elementHash.charCodeAt(j);\n                hash *= 16777619; // FNV prime (32 bit)\n                hash = hash >>> 0;\n            }\n        }\n        return hash.toString(16);\n    }\n    // For objects, hash keys and values\n    if (typeof input === 'object') {\n        let hash = 0x811C9DC5;\n        const keys = Object.keys(input).sort(); // Sort for consistency\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            // Hash the key using string hash\n            const keyHash = weakHash(key);\n            hash ^= parseInt(keyHash, 16);\n            hash *= 16777619;\n            hash = hash >>> 0;\n            // Hash the value recursively\n            const valueHash = weakHash(input[key]);\n            hash ^= parseInt(valueHash, 16);\n            hash *= 16777619;\n            hash = hash >>> 0;\n        }\n        return hash.toString(16);\n    }\n    // Fallback for other types\n    return weakHash(String(input));\n}\n//# sourceMappingURL=weakHash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL3dlYWtIYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQix3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHdCQUF3QjtBQUNwRDtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hELHdCQUF3QixpQkFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcdXRpbHNcXHdlYWtIYXNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIFVuaXF1ZSBIYXNoaW5nIGltcGxlbWVudGF0aW9uIGluc3BpcmVkIGJ5IGRqYjIvZm52MWEgYWxnb3JpdGhtcyxcbiAqIHdoZXJlIHdlIGFyZSBub3QgY29uY2VybmVkIHdpdGggdGhlIGhhc2ggYmVpbmcgZGVjb2RlZC5cbiAqIEZvY3VzZXMgb24gc3BlZWQgd2hpbGUgbWFpbnRhaW5pbmcgZ29vZCBoYXNoIGRpc3RyaWJ1dGlvblxuICpcbiAqIE5vdGU6IFdlIGNvdWxkIGFsc28gdXNlIHNvbWV0aGluZyBsaWtlIE11cm11cmhhc2ggaW5zdGVhZFxuICogaHR0cHM6Ly9naXRodWIuY29tL2plbnN5dC9pbXVybXVyaGFzaC1qcy9ibG9iL21hc3Rlci9pbXVybXVyaGFzaC5qc1xuICpcbiAqIEBwYXJhbSB7YW55fSBpbnB1dCAtIFZhbHVlIHRvIGhhc2hcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gSGFzaCBpbiBoZXggZm9ybWF0XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHdlYWtIYXNoKGlucHV0KSB7XG4gICAgLy8gSGFuZGxlIHByaW1pdGl2ZXMgd2l0aG91dCBKU09OIHN0cmluZ2lmeSBmb3IgYmV0dGVyIHBlcmZvcm1hbmNlXG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgLy8gVXNlIGEgbGFyZ2VyIG51bWJlciBzcGFjZSBmb3IgbnVtZXJpYyB2YWx1ZXNcbiAgICAgICAgcmV0dXJuIChNYXRoLmFicyhpbnB1dCAqIDI2NTQ0MzU3NjEpID4+PiAwKS50b1N0cmluZygxNik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdib29sZWFuJylcbiAgICAgICAgcmV0dXJuIGlucHV0ID8gJzEnIDogJzAnO1xuICAgIGlmIChpbnB1dCA9PT0gbnVsbClcbiAgICAgICAgcmV0dXJuICdudWxsJztcbiAgICBpZiAoaW5wdXQgPT09IHVuZGVmaW5lZClcbiAgICAgICAgcmV0dXJuICd1bmRlZmluZWQnO1xuICAgIC8vIEZvciBzdHJpbmdzLCB1c2UgRk5WLTFhIGFsZ29yaXRobVxuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGxldCBoYXNoID0gMHg4MTFDOURDNTsgLy8gRk5WIG9mZnNldCBiYXNpcyAoMzIgYml0KVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBoYXNoIF49IGlucHV0LmNoYXJDb2RlQXQoaSk7XG4gICAgICAgICAgICBoYXNoICs9IChoYXNoIDw8IDEpICsgKGhhc2ggPDwgNCkgKyAoaGFzaCA8PCA3KSArIChoYXNoIDw8IDgpICsgKGhhc2ggPDwgMjQpO1xuICAgICAgICAgICAgaGFzaCA9IGhhc2ggPj4+IDA7IC8vIENvbnZlcnQgdG8gdW5zaWduZWQgMzItYml0IGFmdGVyIGVhY2ggaXRlcmF0aW9uXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhhc2gudG9TdHJpbmcoMTYpO1xuICAgIH1cbiAgICAvLyBGb3IgYXJyYXlzLCBoYXNoIGVsZW1lbnRzIGRpcmVjdGx5XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XG4gICAgICAgIGxldCBoYXNoID0gMHg4MTFDOURDNTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgLy8gQWRkIGFycmF5IHBvc2l0aW9uIHRvIGhhc2ggY2FsY3VsYXRpb25cbiAgICAgICAgICAgIGhhc2ggXj0gKGkgKyAxKSAqIDI2NTQ0MzU3NjE7XG4gICAgICAgICAgICAvLyBSZWN1cnNpdmVseSBoYXNoIGFycmF5IGVsZW1lbnRzXG4gICAgICAgICAgICBjb25zdCBlbGVtZW50SGFzaCA9IHdlYWtIYXNoKGlucHV0W2ldKTtcbiAgICAgICAgICAgIC8vIE1peCB0aGUgZWxlbWVudCBoYXNoIGludG8gdGhlIHJ1bm5pbmcgaGFzaFxuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBlbGVtZW50SGFzaC5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgICAgIGhhc2ggXj0gZWxlbWVudEhhc2guY2hhckNvZGVBdChqKTtcbiAgICAgICAgICAgICAgICBoYXNoICo9IDE2Nzc3NjE5OyAvLyBGTlYgcHJpbWUgKDMyIGJpdClcbiAgICAgICAgICAgICAgICBoYXNoID0gaGFzaCA+Pj4gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGFzaC50b1N0cmluZygxNik7XG4gICAgfVxuICAgIC8vIEZvciBvYmplY3RzLCBoYXNoIGtleXMgYW5kIHZhbHVlc1xuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGxldCBoYXNoID0gMHg4MTFDOURDNTtcbiAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKGlucHV0KS5zb3J0KCk7IC8vIFNvcnQgZm9yIGNvbnNpc3RlbmN5XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIC8vIEhhc2ggdGhlIGtleSB1c2luZyBzdHJpbmcgaGFzaFxuICAgICAgICAgICAgY29uc3Qga2V5SGFzaCA9IHdlYWtIYXNoKGtleSk7XG4gICAgICAgICAgICBoYXNoIF49IHBhcnNlSW50KGtleUhhc2gsIDE2KTtcbiAgICAgICAgICAgIGhhc2ggKj0gMTY3Nzc2MTk7XG4gICAgICAgICAgICBoYXNoID0gaGFzaCA+Pj4gMDtcbiAgICAgICAgICAgIC8vIEhhc2ggdGhlIHZhbHVlIHJlY3Vyc2l2ZWx5XG4gICAgICAgICAgICBjb25zdCB2YWx1ZUhhc2ggPSB3ZWFrSGFzaChpbnB1dFtrZXldKTtcbiAgICAgICAgICAgIGhhc2ggXj0gcGFyc2VJbnQodmFsdWVIYXNoLCAxNik7XG4gICAgICAgICAgICBoYXNoICo9IDE2Nzc3NjE5O1xuICAgICAgICAgICAgaGFzaCA9IGhhc2ggPj4+IDA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhhc2gudG9TdHJpbmcoMTYpO1xuICAgIH1cbiAgICAvLyBGYWxsYmFjayBmb3Igb3RoZXIgdHlwZXNcbiAgICByZXR1cm4gd2Vha0hhc2goU3RyaW5nKGlucHV0KSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWFrSGFzaC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Autogenerated by publish_packages.clj\nconst version = \"v0.17.3\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxpRUFBZSxPQUFPLEVBQUM7QUFDdkIiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx2ZXJzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEF1dG9nZW5lcmF0ZWQgYnkgcHVibGlzaF9wYWNrYWdlcy5jbGpcbmNvbnN0IHZlcnNpb24gPSBcInYwLjE3LjNcIjtcbmV4cG9ydCBkZWZhdWx0IHZlcnNpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/Cursors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/Cursors.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cursors: () => (/* binding */ Cursors)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction Cursors({ as = \"div\", spaceId: _spaceId, room, className, style, userCursorColor, children, renderCursor, propagate, zIndex, }) {\n    const spaceId = _spaceId || `cursors-space-default--${String(room.type)}-${room.id}`;\n    const cursorsPresence = room.usePresence({\n        keys: [spaceId],\n    });\n    const fullPresence = room._core._reactor.getPresence(room.type, room.id);\n    function publishCursor(rect, touch) {\n        const x = touch.clientX;\n        const y = touch.clientY;\n        const xPercent = ((x - rect.left) / rect.width) * 100;\n        const yPercent = ((y - rect.top) / rect.height) * 100;\n        cursorsPresence.publishPresence({\n            [spaceId]: {\n                x,\n                y,\n                xPercent,\n                yPercent,\n                color: userCursorColor,\n            },\n        });\n    }\n    function onMouseMove(e) {\n        if (!propagate) {\n            e.stopPropagation();\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        publishCursor(rect, e);\n    }\n    function onMouseOut(e) {\n        cursorsPresence.publishPresence({\n            [spaceId]: undefined,\n        });\n    }\n    function onTouchMove(e) {\n        if (e.touches.length !== 1) {\n            return;\n        }\n        const touch = e.touches[0];\n        if (touch.target instanceof Element) {\n            if (!propagate) {\n                e.stopPropagation();\n            }\n            const rect = touch.target.getBoundingClientRect();\n            publishCursor(rect, touch);\n        }\n    }\n    function onTouchEnd(e) {\n        cursorsPresence.publishPresence({\n            [spaceId]: undefined,\n        });\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(as, {\n        onMouseMove,\n        onMouseOut,\n        onTouchMove,\n        onTouchEnd,\n        className,\n        style: Object.assign({ position: \"relative\" }, style),\n    }, [\n        children,\n        (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: Object.assign(Object.assign(Object.assign({}, absStyles), inertStyles), { zIndex: zIndex !== undefined ? zIndex : defaultZ }), children: Object.entries(cursorsPresence.peers).map(([id, presence]) => {\n                const cursor = presence[spaceId];\n                if (!cursor)\n                    return null;\n                return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: Object.assign(Object.assign({}, absStyles), { transform: `translate(${cursor.xPercent}%, ${cursor.yPercent}%)`, transformOrigin: \"0 0\", transition: \"transform 100ms\" }), children: renderCursor ? (renderCursor({\n                        color: cursor.color,\n                        presence: fullPresence.peers[id],\n                    })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Cursor, Object.assign({}, cursor))) }, id));\n            }) }, spaceId),\n    ]);\n}\nfunction Cursor({ color }) {\n    const size = 35;\n    const fill = color || \"black\";\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", { style: { height: size, width: size }, viewBox: `0 0 ${size} ${size}`, fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"g\", { fill: \"rgba(0,0,0,.2)\", transform: \"matrix(1, 0, 0, 1, -11.999999046325684, -8.406899452209473)\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"g\", { fill: \"white\", transform: \"matrix(1, 0, 0, 1, -11.999999046325684, -8.406899452209473)\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"g\", { fill: fill, transform: \"matrix(1, 0, 0, 1, -11.999999046325684, -8.406899452209473)\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m13 10.814v11.188l2.969-2.866.428-.139h4.768z\" })] })] }));\n}\nconst absStyles = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nconst inertStyles = {\n    overflow: \"hidden\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n};\nconst defaultZ = 99999;\n//# sourceMappingURL=Cursors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9DdXJzb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStEO0FBQ3hCO0FBQ2hDLG1CQUFtQixvSEFBb0g7QUFDOUksMERBQTBELGtCQUFrQixHQUFHLFFBQVE7QUFDdkY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHNCQUFzQjtBQUNyRCxLQUFLO0FBQ0w7QUFDQSxRQUFRLHNEQUFJLFVBQVUsbURBQW1ELDhCQUE4QixrREFBa0Q7QUFDeko7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNEQUFJLFVBQVUscUNBQXFDLGdCQUFnQix3QkFBd0IsZ0JBQWdCLEtBQUssZ0JBQWdCLDREQUE0RDtBQUNwTjtBQUNBO0FBQ0EscUJBQXFCLE1BQU0sc0RBQUkseUJBQXlCLGFBQWE7QUFDckUsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0EsWUFBWSx1REFBSyxVQUFVLFNBQVMsMkJBQTJCLGtCQUFrQixNQUFNLEVBQUUsS0FBSyxpRUFBaUUsdURBQUssUUFBUSw2R0FBNkcsc0RBQUksV0FBVywwREFBMEQsR0FBRyxzREFBSSxXQUFXLDZEQUE2RCxJQUFJLEdBQUcsdURBQUssUUFBUSxvR0FBb0csc0RBQUksV0FBVywwREFBMEQsR0FBRyxzREFBSSxXQUFXLDZEQUE2RCxJQUFJLEdBQUcsdURBQUssUUFBUSxpR0FBaUcsc0RBQUksV0FBVyxzREFBc0QsR0FBRyxzREFBSSxXQUFXLG9EQUFvRCxJQUFJLElBQUk7QUFDejhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxyZWFjdFxcZGlzdFxcbW9kdWxlXFxDdXJzb3JzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBjcmVhdGVFbGVtZW50LCB9IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIEN1cnNvcnMoeyBhcyA9IFwiZGl2XCIsIHNwYWNlSWQ6IF9zcGFjZUlkLCByb29tLCBjbGFzc05hbWUsIHN0eWxlLCB1c2VyQ3Vyc29yQ29sb3IsIGNoaWxkcmVuLCByZW5kZXJDdXJzb3IsIHByb3BhZ2F0ZSwgekluZGV4LCB9KSB7XG4gICAgY29uc3Qgc3BhY2VJZCA9IF9zcGFjZUlkIHx8IGBjdXJzb3JzLXNwYWNlLWRlZmF1bHQtLSR7U3RyaW5nKHJvb20udHlwZSl9LSR7cm9vbS5pZH1gO1xuICAgIGNvbnN0IGN1cnNvcnNQcmVzZW5jZSA9IHJvb20udXNlUHJlc2VuY2Uoe1xuICAgICAgICBrZXlzOiBbc3BhY2VJZF0sXG4gICAgfSk7XG4gICAgY29uc3QgZnVsbFByZXNlbmNlID0gcm9vbS5fY29yZS5fcmVhY3Rvci5nZXRQcmVzZW5jZShyb29tLnR5cGUsIHJvb20uaWQpO1xuICAgIGZ1bmN0aW9uIHB1Ymxpc2hDdXJzb3IocmVjdCwgdG91Y2gpIHtcbiAgICAgICAgY29uc3QgeCA9IHRvdWNoLmNsaWVudFg7XG4gICAgICAgIGNvbnN0IHkgPSB0b3VjaC5jbGllbnRZO1xuICAgICAgICBjb25zdCB4UGVyY2VudCA9ICgoeCAtIHJlY3QubGVmdCkgLyByZWN0LndpZHRoKSAqIDEwMDtcbiAgICAgICAgY29uc3QgeVBlcmNlbnQgPSAoKHkgLSByZWN0LnRvcCkgLyByZWN0LmhlaWdodCkgKiAxMDA7XG4gICAgICAgIGN1cnNvcnNQcmVzZW5jZS5wdWJsaXNoUHJlc2VuY2Uoe1xuICAgICAgICAgICAgW3NwYWNlSWRdOiB7XG4gICAgICAgICAgICAgICAgeCxcbiAgICAgICAgICAgICAgICB5LFxuICAgICAgICAgICAgICAgIHhQZXJjZW50LFxuICAgICAgICAgICAgICAgIHlQZXJjZW50LFxuICAgICAgICAgICAgICAgIGNvbG9yOiB1c2VyQ3Vyc29yQ29sb3IsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25Nb3VzZU1vdmUoZSkge1xuICAgICAgICBpZiAoIXByb3BhZ2F0ZSkge1xuICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZWN0ID0gZS5jdXJyZW50VGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICBwdWJsaXNoQ3Vyc29yKHJlY3QsIGUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbk1vdXNlT3V0KGUpIHtcbiAgICAgICAgY3Vyc29yc1ByZXNlbmNlLnB1Ymxpc2hQcmVzZW5jZSh7XG4gICAgICAgICAgICBbc3BhY2VJZF06IHVuZGVmaW5lZCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uVG91Y2hNb3ZlKGUpIHtcbiAgICAgICAgaWYgKGUudG91Y2hlcy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0b3VjaCA9IGUudG91Y2hlc1swXTtcbiAgICAgICAgaWYgKHRvdWNoLnRhcmdldCBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcbiAgICAgICAgICAgIGlmICghcHJvcGFnYXRlKSB7XG4gICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJlY3QgPSB0b3VjaC50YXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICBwdWJsaXNoQ3Vyc29yKHJlY3QsIHRvdWNoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBvblRvdWNoRW5kKGUpIHtcbiAgICAgICAgY3Vyc29yc1ByZXNlbmNlLnB1Ymxpc2hQcmVzZW5jZSh7XG4gICAgICAgICAgICBbc3BhY2VJZF06IHVuZGVmaW5lZCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVFbGVtZW50KGFzLCB7XG4gICAgICAgIG9uTW91c2VNb3ZlLFxuICAgICAgICBvbk1vdXNlT3V0LFxuICAgICAgICBvblRvdWNoTW92ZSxcbiAgICAgICAgb25Ub3VjaEVuZCxcbiAgICAgICAgY2xhc3NOYW1lLFxuICAgICAgICBzdHlsZTogT2JqZWN0LmFzc2lnbih7IHBvc2l0aW9uOiBcInJlbGF0aXZlXCIgfSwgc3R5bGUpLFxuICAgIH0sIFtcbiAgICAgICAgY2hpbGRyZW4sXG4gICAgICAgIF9qc3goXCJkaXZcIiwgeyBzdHlsZTogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGFic1N0eWxlcyksIGluZXJ0U3R5bGVzKSwgeyB6SW5kZXg6IHpJbmRleCAhPT0gdW5kZWZpbmVkID8gekluZGV4IDogZGVmYXVsdFogfSksIGNoaWxkcmVuOiBPYmplY3QuZW50cmllcyhjdXJzb3JzUHJlc2VuY2UucGVlcnMpLm1hcCgoW2lkLCBwcmVzZW5jZV0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJzb3IgPSBwcmVzZW5jZVtzcGFjZUlkXTtcbiAgICAgICAgICAgICAgICBpZiAoIWN1cnNvcilcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChfanN4KFwiZGl2XCIsIHsgc3R5bGU6IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYWJzU3R5bGVzKSwgeyB0cmFuc2Zvcm06IGB0cmFuc2xhdGUoJHtjdXJzb3IueFBlcmNlbnR9JSwgJHtjdXJzb3IueVBlcmNlbnR9JSlgLCB0cmFuc2Zvcm1PcmlnaW46IFwiMCAwXCIsIHRyYW5zaXRpb246IFwidHJhbnNmb3JtIDEwMG1zXCIgfSksIGNoaWxkcmVuOiByZW5kZXJDdXJzb3IgPyAocmVuZGVyQ3Vyc29yKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBjdXJzb3IuY29sb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcmVzZW5jZTogZnVsbFByZXNlbmNlLnBlZXJzW2lkXSxcbiAgICAgICAgICAgICAgICAgICAgfSkpIDogKF9qc3goQ3Vyc29yLCBPYmplY3QuYXNzaWduKHt9LCBjdXJzb3IpKSkgfSwgaWQpKTtcbiAgICAgICAgICAgIH0pIH0sIHNwYWNlSWQpLFxuICAgIF0pO1xufVxuZnVuY3Rpb24gQ3Vyc29yKHsgY29sb3IgfSkge1xuICAgIGNvbnN0IHNpemUgPSAzNTtcbiAgICBjb25zdCBmaWxsID0gY29sb3IgfHwgXCJibGFja1wiO1xuICAgIHJldHVybiAoX2pzeHMoXCJzdmdcIiwgeyBzdHlsZTogeyBoZWlnaHQ6IHNpemUsIHdpZHRoOiBzaXplIH0sIHZpZXdCb3g6IGAwIDAgJHtzaXplfSAke3NpemV9YCwgZmlsbDogXCJub25lXCIsIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsIGNoaWxkcmVuOiBbX2pzeHMoXCJnXCIsIHsgZmlsbDogXCJyZ2JhKDAsMCwwLC4yKVwiLCB0cmFuc2Zvcm06IFwibWF0cml4KDEsIDAsIDAsIDEsIC0xMS45OTk5OTkwNDYzMjU2ODQsIC04LjQwNjg5OTQ1MjIwOTQ3MylcIiwgY2hpbGRyZW46IFtfanN4KFwicGF0aFwiLCB7IGQ6IFwibTEyIDI0LjQyMTl2LTE2LjAxNWwxMS41OTEgMTEuNjE5aC02Ljc4MWwtLjQxMS4xMjR6XCIgfSksIF9qc3goXCJwYXRoXCIsIHsgZDogXCJtMjEuMDg0NSAyNS4wOTYyLTMuNjA1IDEuNTM1LTQuNjgyLTExLjA4OSAzLjY4Ni0xLjU1M3pcIiB9KV0gfSksIF9qc3hzKFwiZ1wiLCB7IGZpbGw6IFwid2hpdGVcIiwgdHJhbnNmb3JtOiBcIm1hdHJpeCgxLCAwLCAwLCAxLCAtMTEuOTk5OTk5MDQ2MzI1Njg0LCAtOC40MDY4OTk0NTIyMDk0NzMpXCIsIGNoaWxkcmVuOiBbX2pzeChcInBhdGhcIiwgeyBkOiBcIm0xMiAyNC40MjE5di0xNi4wMTVsMTEuNTkxIDExLjYxOWgtNi43ODFsLS40MTEuMTI0elwiIH0pLCBfanN4KFwicGF0aFwiLCB7IGQ6IFwibTIxLjA4NDUgMjUuMDk2Mi0zLjYwNSAxLjUzNS00LjY4Mi0xMS4wODkgMy42ODYtMS41NTN6XCIgfSldIH0pLCBfanN4cyhcImdcIiwgeyBmaWxsOiBmaWxsLCB0cmFuc2Zvcm06IFwibWF0cml4KDEsIDAsIDAsIDEsIC0xMS45OTk5OTkwNDYzMjU2ODQsIC04LjQwNjg5OTQ1MjIwOTQ3MylcIiwgY2hpbGRyZW46IFtfanN4KFwicGF0aFwiLCB7IGQ6IFwibTE5Ljc1MSAyNC40MTU1LTEuODQ0Ljc3NC0zLjEtNy4zNzQgMS44NDEtLjc3NXpcIiB9KSwgX2pzeChcInBhdGhcIiwgeyBkOiBcIm0xMyAxMC44MTR2MTEuMTg4bDIuOTY5LTIuODY2LjQyOC0uMTM5aDQuNzY4elwiIH0pXSB9KV0gfSkpO1xufVxuY29uc3QgYWJzU3R5bGVzID0ge1xuICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgdG9wOiAwLFxuICAgIGxlZnQ6IDAsXG4gICAgYm90dG9tOiAwLFxuICAgIHJpZ2h0OiAwLFxufTtcbmNvbnN0IGluZXJ0U3R5bGVzID0ge1xuICAgIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiLFxuICAgIHVzZXJTZWxlY3Q6IFwibm9uZVwiLFxufTtcbmNvbnN0IGRlZmF1bHRaID0gOTk5OTk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DdXJzb3JzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/Cursors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstantReactRoom: () => (/* binding */ InstantReactRoom),\n/* harmony export */   \"default\": () => (/* binding */ InstantReactAbstractDatabase),\n/* harmony export */   defaultActivityStopTimeout: () => (/* binding */ defaultActivityStopTimeout)\n/* harmony export */ });\n/* harmony import */ var _instantdb_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @instantdb/core */ \"(ssr)/./node_modules/@instantdb/core/dist/module/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _useQuery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useQuery */ \"(ssr)/./node_modules/@instantdb/react/dist/module/useQuery.js\");\n/* harmony import */ var _useTimeout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useTimeout */ \"(ssr)/./node_modules/@instantdb/react/dist/module/useTimeout.js\");\n\n\n\n\nconst defaultActivityStopTimeout = 1000;\nclass InstantReactRoom {\n    constructor(_core, type, id) {\n        /**\n         * Listen for broadcasted events given a room and topic.\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    db.room(roomType, roomId).useTopicEffect(\"chat\", (message, peer) => {\n         *      console.log(\"New message\", message, 'from', peer.name);\n         *    });\n         *\n         *    // ...\n         *  }\n         */\n        this.useTopicEffect = (topic, onEvent) => {\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n                const unsub = this._core._reactor.subscribeTopic(this.id, topic, (event, peer) => {\n                    onEvent(event, peer);\n                });\n                return unsub;\n            }, [this.id, topic]);\n        };\n        /**\n         * Broadcast an event to a room.\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         * function App({ roomId }) {\n         *   const publishTopic = db.room(roomType, roomId).usePublishTopic(\"clicks\");\n         *\n         *   return (\n         *     <button onClick={() => publishTopic({ ts: Date.now() })}>Click me</button>\n         *   );\n         * }\n         *\n         */\n        this.usePublishTopic = (topic) => {\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => this._core._reactor.joinRoom(this.id), [this.id]);\n            const publishTopic = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((data) => {\n                this._core._reactor.publishTopic({\n                    roomType: this.type,\n                    roomId: this.id,\n                    topic,\n                    data,\n                });\n            }, [this.id, topic]);\n            return publishTopic;\n        };\n        /**\n         * Listen for peer's presence data in a room, and publish the current user's presence.\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    const {\n         *      peers,\n         *      publishPresence\n         *    } = db.room(roomType, roomId).usePresence({ keys: [\"name\", \"avatar\"] });\n         *\n         *    // ...\n         *  }\n         */\n        this.usePresence = (opts = {}) => {\n            var _a, _b;\n            const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(() => {\n                var _a;\n                return ((_a = this._core._reactor.getPresence(this.type, this.id, opts)) !== null && _a !== void 0 ? _a : {\n                    peers: {},\n                    isLoading: true,\n                });\n            });\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n                const unsub = this._core._reactor.subscribePresence(this.type, this.id, opts, (data) => {\n                    setState(data);\n                });\n                return unsub;\n            }, [this.id, opts.user, (_a = opts.peers) === null || _a === void 0 ? void 0 : _a.join(), (_b = opts.keys) === null || _b === void 0 ? void 0 : _b.join()]);\n            return Object.assign(Object.assign({}, state), { publishPresence: (data) => {\n                    this._core._reactor.publishPresence(this.type, this.id, data);\n                } });\n        };\n        /**\n         * Publishes presence data to a room\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    db.room(roomType, roomId).useSyncPresence({ name, avatar, color });\n         *\n         *    // ...\n         *  }\n         */\n        this.useSyncPresence = (data, deps) => {\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => this._core._reactor.joinRoom(this.id), [this.id]);\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n                return this._core._reactor.publishPresence(this.type, this.id, data);\n            }, [this.type, this.id, deps !== null && deps !== void 0 ? deps : JSON.stringify(data)]);\n        };\n        /**\n         * Manage typing indicator state\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    const {\n         *      active,\n         *      setActive,\n         *      inputProps,\n         *    } = db.room(roomType, roomId).useTypingIndicator(\"chat-input\", opts);\n         *\n         *    return <input {...inputProps} />;\n         *  }\n         */\n        this.useTypingIndicator = (inputName, opts = {}) => {\n            const timeout = (0,_useTimeout__WEBPACK_IMPORTED_MODULE_3__.useTimeout)();\n            const onservedPresence = this.usePresence({\n                keys: [inputName],\n            });\n            const active = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n                var _a;\n                const presenceSnapshot = this._core._reactor.getPresence(this.type, this.id);\n                return (opts === null || opts === void 0 ? void 0 : opts.writeOnly)\n                    ? []\n                    : Object.values((_a = presenceSnapshot === null || presenceSnapshot === void 0 ? void 0 : presenceSnapshot.peers) !== null && _a !== void 0 ? _a : {}).filter((p) => p[inputName] === true);\n            }, [opts === null || opts === void 0 ? void 0 : opts.writeOnly, onservedPresence]);\n            const setActive = (isActive) => {\n                var _a;\n                this._core._reactor.publishPresence(this.type, this.id, {\n                    [inputName]: isActive,\n                });\n                if (!isActive)\n                    return;\n                if ((opts === null || opts === void 0 ? void 0 : opts.timeout) === null || (opts === null || opts === void 0 ? void 0 : opts.timeout) === 0)\n                    return;\n                timeout.set((_a = opts === null || opts === void 0 ? void 0 : opts.timeout) !== null && _a !== void 0 ? _a : defaultActivityStopTimeout, () => {\n                    this._core._reactor.publishPresence(this.type, this.id, {\n                        [inputName]: null,\n                    });\n                });\n            };\n            return {\n                active,\n                setActive: (a) => {\n                    setActive(a);\n                },\n                inputProps: {\n                    onKeyDown: (e) => {\n                        const isEnter = (opts === null || opts === void 0 ? void 0 : opts.stopOnEnter) && e.key === \"Enter\";\n                        const isActive = !isEnter;\n                        setActive(isActive);\n                    },\n                    onBlur: () => {\n                        setActive(false);\n                    },\n                },\n            };\n        };\n        this._core = _core;\n        this.type = type;\n        this.id = id;\n    }\n}\nconst defaultAuthState = {\n    isLoading: true,\n    user: undefined,\n    error: undefined,\n};\nclass InstantReactAbstractDatabase {\n    constructor(config, versions) {\n        this.tx = (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.txInit)();\n        this.getLocalId = (name) => {\n            return this._core.getLocalId(name);\n        };\n        /**\n         * Use this to write data! You can create, update, delete, and link objects\n         *\n         * @see https://instantdb.com/docs/instaml\n         *\n         * @example\n         *   // Create a new object in the `goals` namespace\n         *   const goalId = id();\n         *   db.transact(tx.goals[goalId].update({title: \"Get fit\"}))\n         *\n         *   // Update the title\n         *   db.transact(tx.goals[goalId].update({title: \"Get super fit\"}))\n         *\n         *   // Delete it\n         *   db.transact(tx.goals[goalId].delete())\n         *\n         *   // Or create an association:\n         *   todoId = id();\n         *   db.transact([\n         *    tx.todos[todoId].update({ title: 'Go on a run' }),\n         *    tx.goals[goalId].link({todos: todoId}),\n         *  ])\n         */\n        this.transact = (chunks) => {\n            return this._core.transact(chunks);\n        };\n        /**\n         * Use this to query your data!\n         *\n         * @see https://instantdb.com/docs/instaql\n         *\n         * @example\n         *  // listen to all goals\n         *  db.useQuery({ goals: {} })\n         *\n         *  // goals where the title is \"Get Fit\"\n         *  db.useQuery({ goals: { $: { where: { title: \"Get Fit\" } } } })\n         *\n         *  // all goals, _alongside_ their todos\n         *  db.useQuery({ goals: { todos: {} } })\n         *\n         *  // skip if `user` is not logged in\n         *  db.useQuery(auth.user ? { goals: {} } : null)\n         */\n        this.useQuery = (query) => {\n            return (0,_useQuery__WEBPACK_IMPORTED_MODULE_2__.useQueryInternal)(this._core, query).state;\n        };\n        /**\n         * Listen for the logged in state. This is useful\n         * for deciding when to show a login screen.\n         *\n         * Check out the docs for an example `Login` component too!\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *  function App() {\n         *    const { isLoading, user, error } = db.useAuth()\n         *    if (isLoading) {\n         *      return <div>Loading...</div>\n         *    }\n         *    if (error) {\n         *      return <div>Uh oh! {error.message}</div>\n         *    }\n         *    if (user) {\n         *      return <Main user={user} />\n         *    }\n         *    return <Login />\n         *  }\n         *\n         */\n        this.useAuth = () => {\n            // We use a ref to store the result of the query.\n            // This is becuase `useSyncExternalStore` uses `Object.is`\n            // to compare the previous and next state.\n            // If we don't use a ref, the state will always be considered different, so\n            // the component will always re-render.\n            const resultCacheRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(this._core._reactor._currentUserCached);\n            // Similar to `resultCacheRef`, `useSyncExternalStore` will unsubscribe\n            // if `subscribe` changes, so we use `useCallback` to memoize the function.\n            const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((cb) => {\n                const unsubscribe = this._core.subscribeAuth((auth) => {\n                    resultCacheRef.current = Object.assign({ isLoading: false }, auth);\n                    cb();\n                });\n                return unsubscribe;\n            }, []);\n            const state = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe, () => resultCacheRef.current, () => defaultAuthState);\n            return state;\n        };\n        /**\n         * Listen for connection status changes to Instant. Use this for things like\n         * showing connection state to users\n         *\n         * @see https://www.instantdb.com/docs/patterns#connection-status\n         * @example\n         *  function App() {\n         *    const status = db.useConnectionStatus()\n         *    const connectionState =\n         *      status === 'connecting' || status === 'opened'\n         *        ? 'authenticating'\n         *      : status === 'authenticated'\n         *        ? 'connected'\n         *      : status === 'closed'\n         *        ? 'closed'\n         *      : status === 'errored'\n         *        ? 'errored'\n         *      : 'unexpected state';\n         *\n         *    return <div>Connection state: {connectionState}</div>\n         *  }\n         */\n        this.useConnectionStatus = () => {\n            const statusRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(this._core._reactor.status);\n            const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((cb) => {\n                const unsubscribe = this._core.subscribeConnectionStatus((newStatus) => {\n                    if (newStatus !== statusRef.current) {\n                        statusRef.current = newStatus;\n                        cb();\n                    }\n                });\n                return unsubscribe;\n            }, []);\n            const status = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe, () => statusRef.current, \n            // For SSR, always return 'connecting' as the initial state\n            () => 'connecting');\n            return status;\n        };\n        /**\n         * Use this for one-off queries.\n         * Returns local data if available, otherwise fetches from the server.\n         * Because we want to avoid stale data, this method will throw an error\n         * if the user is offline or there is no active connection to the server.\n         *\n         * @see https://instantdb.com/docs/instaql\n         *\n         * @example\n         *\n         *  const resp = await db.queryOnce({ goals: {} });\n         *  console.log(resp.data.goals)\n         */\n        this.queryOnce = (query) => {\n            return this._core.queryOnce(query);\n        };\n        this._core = (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.init)(config, \n        // @ts-expect-error because TS can't resolve subclass statics\n        this.constructor.Storage, \n        // @ts-expect-error because TS can't resolve subclass statics\n        this.constructor.NetworkListener, versions);\n        this.auth = this._core.auth;\n        this.storage = this._core.storage;\n    }\n    /**\n     * Obtain a handle to a room, which allows you to listen to topics and presence data\n     *\n     * If you don't provide a `type` or `id`, Instant will default to `_defaultRoomType` and `_defaultRoomId`\n     * as the room type and id, respectively.\n     *\n     * @see https://instantdb.com/docs/presence-and-topics\n     *\n     * @example\n     *  const {\n     *   useTopicEffect,\n     *   usePublishTopic,\n     *   useSyncPresence,\n     *   useTypingIndicator,\n     * } = db.room(roomType, roomId);\n     */\n    room(type = \"_defaultRoomType\", id = \"_defaultRoomId\") {\n        return new InstantReactRoom(this._core, type, id);\n    }\n}\n//# sourceMappingURL=InstantReactAbstractDatabase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InstantReactWebDatabase)\n/* harmony export */ });\n/* harmony import */ var _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InstantReactAbstractDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js\");\n\nclass InstantReactWebDatabase extends _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n}\n//# sourceMappingURL=InstantReactWebDatabase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9JbnN0YW50UmVhY3RXZWJEYXRhYmFzZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRTtBQUMzRCxzQ0FBc0MscUVBQTRCO0FBQ2pGO0FBQ0EiLCJzb3VyY2VzIjpbIkY6XFxOZXcgZm9sZGVyXFxjaGF0LXN0eWxlLWVtYWlsLW1haW5cXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxccmVhY3RcXGRpc3RcXG1vZHVsZVxcSW5zdGFudFJlYWN0V2ViRGF0YWJhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEluc3RhbnRSZWFjdEFic3RyYWN0RGF0YWJhc2UgZnJvbSBcIi4vSW5zdGFudFJlYWN0QWJzdHJhY3REYXRhYmFzZVwiO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW5zdGFudFJlYWN0V2ViRGF0YWJhc2UgZXh0ZW5kcyBJbnN0YW50UmVhY3RBYnN0cmFjdERhdGFiYXNlIHtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluc3RhbnRSZWFjdFdlYkRhdGFiYXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cursors: () => (/* reexport safe */ _Cursors__WEBPACK_IMPORTED_MODULE_4__.Cursors),\n/* harmony export */   InstantReactAbstractDatabase: () => (/* reexport safe */ _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   InstantReactWebDatabase: () => (/* reexport safe */ _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   i: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   id: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.id),\n/* harmony export */   init: () => (/* reexport safe */ _init__WEBPACK_IMPORTED_MODULE_3__.init),\n/* harmony export */   init_experimental: () => (/* reexport safe */ _init__WEBPACK_IMPORTED_MODULE_3__.init_experimental),\n/* harmony export */   lookup: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.lookup),\n/* harmony export */   tx: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.tx)\n/* harmony export */ });\n/* harmony import */ var _instantdb_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @instantdb/core */ \"(ssr)/./node_modules/@instantdb/core/dist/module/index.js\");\n/* harmony import */ var _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InstantReactAbstractDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js\");\n/* harmony import */ var _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InstantReactWebDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js\");\n/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ \"(ssr)/./node_modules/@instantdb/react/dist/module/init.js\");\n/* harmony import */ var _Cursors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Cursors */ \"(ssr)/./node_modules/@instantdb/react/dist/module/Cursors.js\");\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFxRDtBQUNxQjtBQUNWO0FBQ2Y7QUFDYjtBQUdKO0FBQ2hDIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXHJlYWN0XFxkaXN0XFxtb2R1bGVcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlkLCB0eCwgbG9va3VwLCBpLCB9IGZyb20gXCJAaW5zdGFudGRiL2NvcmVcIjtcbmltcG9ydCBJbnN0YW50UmVhY3RBYnN0cmFjdERhdGFiYXNlIGZyb20gXCIuL0luc3RhbnRSZWFjdEFic3RyYWN0RGF0YWJhc2VcIjtcbmltcG9ydCBJbnN0YW50UmVhY3RXZWJEYXRhYmFzZSBmcm9tIFwiLi9JbnN0YW50UmVhY3RXZWJEYXRhYmFzZVwiO1xuaW1wb3J0IHsgaW5pdCwgaW5pdF9leHBlcmltZW50YWwgfSBmcm9tIFwiLi9pbml0XCI7XG5pbXBvcnQgeyBDdXJzb3JzIH0gZnJvbSBcIi4vQ3Vyc29yc1wiO1xuZXhwb3J0IHsgaWQsIHR4LCBsb29rdXAsIGluaXQsIGluaXRfZXhwZXJpbWVudGFsLCBJbnN0YW50UmVhY3RXZWJEYXRhYmFzZSwgQ3Vyc29ycywgaSwgXG4vLyBpbnRlcm5hbFxuSW5zdGFudFJlYWN0QWJzdHJhY3REYXRhYmFzZSwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/init.js":
/*!***********************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/init.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   init_experimental: () => (/* binding */ init_experimental)\n/* harmony export */ });\n/* harmony import */ var _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InstantReactWebDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@instantdb/react/dist/module/version.js\");\n\n\n/**\n *\n * The first step: init your application!\n *\n * Visit https://instantdb.com/dash to get your `appId` :)\n *\n * @example\n *  import { init } from \"@instantdb/react\"\n *\n *  const db = init({ appId: \"my-app-id\" })\n *\n *  // You can also provide a schema for type safety and editor autocomplete!\n *\n *  import { init } from \"@instantdb/react\"\n *  import schema from \"\"../instant.schema.ts\";\n *\n *  const db = init({ appId: \"my-app-id\", schema })\n *\n *  // To learn more: https://instantdb.com/docs/modeling-data\n */\nfunction init(config) {\n    return new _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"](config, {\n        \"@instantdb/react\": _version__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    });\n}\n/**\n * @deprecated\n * `init_experimental` is deprecated. You can replace it with `init`.\n *\n * @example\n *\n * // Before\n * import { init_experimental } from \"@instantdb/react\"\n * const db = init_experimental({  ...  });\n *\n * // After\n * import { init } from \"@instantdb/react\"\n * const db = init({ ...  });\n */\nconst init_experimental = init;\n//# sourceMappingURL=init.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9pbml0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0U7QUFDaEM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQSxzQkFBc0Isb0JBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0Esc0JBQXNCLDRCQUE0QjtBQUNsRDtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsZ0VBQXVCO0FBQ3RDLDRCQUE0QixnREFBTztBQUNuQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDLG1DQUFtQyxNQUFNO0FBQ3pDO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIscUJBQXFCLE1BQU07QUFDM0I7QUFDTztBQUNQIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXHJlYWN0XFxkaXN0XFxtb2R1bGVcXGluaXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEluc3RhbnRSZWFjdFdlYkRhdGFiYXNlIGZyb20gXCIuL0luc3RhbnRSZWFjdFdlYkRhdGFiYXNlXCI7XG5pbXBvcnQgdmVyc2lvbiBmcm9tIFwiLi92ZXJzaW9uXCI7XG4vKipcbiAqXG4gKiBUaGUgZmlyc3Qgc3RlcDogaW5pdCB5b3VyIGFwcGxpY2F0aW9uIVxuICpcbiAqIFZpc2l0IGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kYXNoIHRvIGdldCB5b3VyIGBhcHBJZGAgOilcbiAqXG4gKiBAZXhhbXBsZVxuICogIGltcG9ydCB7IGluaXQgfSBmcm9tIFwiQGluc3RhbnRkYi9yZWFjdFwiXG4gKlxuICogIGNvbnN0IGRiID0gaW5pdCh7IGFwcElkOiBcIm15LWFwcC1pZFwiIH0pXG4gKlxuICogIC8vIFlvdSBjYW4gYWxzbyBwcm92aWRlIGEgc2NoZW1hIGZvciB0eXBlIHNhZmV0eSBhbmQgZWRpdG9yIGF1dG9jb21wbGV0ZSFcbiAqXG4gKiAgaW1wb3J0IHsgaW5pdCB9IGZyb20gXCJAaW5zdGFudGRiL3JlYWN0XCJcbiAqICBpbXBvcnQgc2NoZW1hIGZyb20gXCJcIi4uL2luc3RhbnQuc2NoZW1hLnRzXCI7XG4gKlxuICogIGNvbnN0IGRiID0gaW5pdCh7IGFwcElkOiBcIm15LWFwcC1pZFwiLCBzY2hlbWEgfSlcbiAqXG4gKiAgLy8gVG8gbGVhcm4gbW9yZTogaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3MvbW9kZWxpbmctZGF0YVxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5pdChjb25maWcpIHtcbiAgICByZXR1cm4gbmV3IEluc3RhbnRSZWFjdFdlYkRhdGFiYXNlKGNvbmZpZywge1xuICAgICAgICBcIkBpbnN0YW50ZGIvcmVhY3RcIjogdmVyc2lvbixcbiAgICB9KTtcbn1cbi8qKlxuICogQGRlcHJlY2F0ZWRcbiAqIGBpbml0X2V4cGVyaW1lbnRhbGAgaXMgZGVwcmVjYXRlZC4gWW91IGNhbiByZXBsYWNlIGl0IHdpdGggYGluaXRgLlxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogLy8gQmVmb3JlXG4gKiBpbXBvcnQgeyBpbml0X2V4cGVyaW1lbnRhbCB9IGZyb20gXCJAaW5zdGFudGRiL3JlYWN0XCJcbiAqIGNvbnN0IGRiID0gaW5pdF9leHBlcmltZW50YWwoeyAgLi4uICB9KTtcbiAqXG4gKiAvLyBBZnRlclxuICogaW1wb3J0IHsgaW5pdCB9IGZyb20gXCJAaW5zdGFudGRiL3JlYWN0XCJcbiAqIGNvbnN0IGRiID0gaW5pdCh7IC4uLiAgfSk7XG4gKi9cbmV4cG9ydCBjb25zdCBpbml0X2V4cGVyaW1lbnRhbCA9IGluaXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbml0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/init.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/useQuery.js":
/*!***************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/useQuery.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQueryInternal: () => (/* binding */ useQueryInternal)\n/* harmony export */ });\n/* harmony import */ var _instantdb_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @instantdb/core */ \"(ssr)/./node_modules/@instantdb/core/dist/module/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst defaultState = {\n    isLoading: true,\n    data: undefined,\n    pageInfo: undefined,\n    error: undefined,\n};\nfunction stateForResult(result) {\n    return Object.assign({ isLoading: !Boolean(result), data: undefined, pageInfo: undefined, error: undefined }, (result ? result : {}));\n}\nfunction useQueryInternal(_core, _query) {\n    const query = _query ? (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.coerceQuery)(_query) : null;\n    const queryHash = (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.weakHash)(query);\n    // We use a ref to store the result of the query.\n    // This is becuase `useSyncExternalStore` uses `Object.is`\n    // to compare the previous and next state.\n    // If we don't use a ref, the state will always be considered different, so\n    // the component will always re-render.\n    const resultCacheRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(stateForResult(_core._reactor.getPreviousResult(query)));\n    // Similar to `resultCacheRef`, `useSyncExternalStore` will unsubscribe\n    // if `subscribe` changes, so we use `useCallback` to memoize the function.\n    const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((cb) => {\n        // Don't subscribe if query is null\n        if (!query) {\n            const unsubscribe = () => { };\n            return unsubscribe;\n        }\n        const unsubscribe = _core.subscribeQuery(query, (result) => {\n            resultCacheRef.current = Object.assign({ isLoading: !Boolean(result), data: undefined, pageInfo: undefined, error: undefined }, result);\n            cb();\n        });\n        return unsubscribe;\n    }, \n    // Build a new subscribe function if the query changes\n    [queryHash]);\n    const state = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe, () => resultCacheRef.current, () => defaultState);\n    return { state, query };\n}\n//# sourceMappingURL=useQuery.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS91c2VRdWVyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ1M7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUZBQXFGLHVCQUF1QjtBQUN2STtBQUNPO0FBQ1AsMkJBQTJCLDREQUFXO0FBQ3RDLHNCQUFzQix5REFBUTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDZDQUFNO0FBQ2pDO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHFGQUFxRjtBQUMxSTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFvQjtBQUN0QyxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxyZWFjdFxcZGlzdFxcbW9kdWxlXFx1c2VRdWVyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3ZWFrSGFzaCwgY29lcmNlUXVlcnksIH0gZnJvbSBcIkBpbnN0YW50ZGIvY29yZVwiO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiwgdXNlU3luY0V4dGVybmFsU3RvcmUgfSBmcm9tIFwicmVhY3RcIjtcbmNvbnN0IGRlZmF1bHRTdGF0ZSA9IHtcbiAgICBpc0xvYWRpbmc6IHRydWUsXG4gICAgZGF0YTogdW5kZWZpbmVkLFxuICAgIHBhZ2VJbmZvOiB1bmRlZmluZWQsXG4gICAgZXJyb3I6IHVuZGVmaW5lZCxcbn07XG5mdW5jdGlvbiBzdGF0ZUZvclJlc3VsdChyZXN1bHQpIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7IGlzTG9hZGluZzogIUJvb2xlYW4ocmVzdWx0KSwgZGF0YTogdW5kZWZpbmVkLCBwYWdlSW5mbzogdW5kZWZpbmVkLCBlcnJvcjogdW5kZWZpbmVkIH0sIChyZXN1bHQgPyByZXN1bHQgOiB7fSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZVF1ZXJ5SW50ZXJuYWwoX2NvcmUsIF9xdWVyeSkge1xuICAgIGNvbnN0IHF1ZXJ5ID0gX3F1ZXJ5ID8gY29lcmNlUXVlcnkoX3F1ZXJ5KSA6IG51bGw7XG4gICAgY29uc3QgcXVlcnlIYXNoID0gd2Vha0hhc2gocXVlcnkpO1xuICAgIC8vIFdlIHVzZSBhIHJlZiB0byBzdG9yZSB0aGUgcmVzdWx0IG9mIHRoZSBxdWVyeS5cbiAgICAvLyBUaGlzIGlzIGJlY3Vhc2UgYHVzZVN5bmNFeHRlcm5hbFN0b3JlYCB1c2VzIGBPYmplY3QuaXNgXG4gICAgLy8gdG8gY29tcGFyZSB0aGUgcHJldmlvdXMgYW5kIG5leHQgc3RhdGUuXG4gICAgLy8gSWYgd2UgZG9uJ3QgdXNlIGEgcmVmLCB0aGUgc3RhdGUgd2lsbCBhbHdheXMgYmUgY29uc2lkZXJlZCBkaWZmZXJlbnQsIHNvXG4gICAgLy8gdGhlIGNvbXBvbmVudCB3aWxsIGFsd2F5cyByZS1yZW5kZXIuXG4gICAgY29uc3QgcmVzdWx0Q2FjaGVSZWYgPSB1c2VSZWYoc3RhdGVGb3JSZXN1bHQoX2NvcmUuX3JlYWN0b3IuZ2V0UHJldmlvdXNSZXN1bHQocXVlcnkpKSk7XG4gICAgLy8gU2ltaWxhciB0byBgcmVzdWx0Q2FjaGVSZWZgLCBgdXNlU3luY0V4dGVybmFsU3RvcmVgIHdpbGwgdW5zdWJzY3JpYmVcbiAgICAvLyBpZiBgc3Vic2NyaWJlYCBjaGFuZ2VzLCBzbyB3ZSB1c2UgYHVzZUNhbGxiYWNrYCB0byBtZW1vaXplIHRoZSBmdW5jdGlvbi5cbiAgICBjb25zdCBzdWJzY3JpYmUgPSB1c2VDYWxsYmFjaygoY2IpID0+IHtcbiAgICAgICAgLy8gRG9uJ3Qgc3Vic2NyaWJlIGlmIHF1ZXJ5IGlzIG51bGxcbiAgICAgICAgaWYgKCFxdWVyeSkge1xuICAgICAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSAoKSA9PiB7IH07XG4gICAgICAgICAgICByZXR1cm4gdW5zdWJzY3JpYmU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSBfY29yZS5zdWJzY3JpYmVRdWVyeShxdWVyeSwgKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgcmVzdWx0Q2FjaGVSZWYuY3VycmVudCA9IE9iamVjdC5hc3NpZ24oeyBpc0xvYWRpbmc6ICFCb29sZWFuKHJlc3VsdCksIGRhdGE6IHVuZGVmaW5lZCwgcGFnZUluZm86IHVuZGVmaW5lZCwgZXJyb3I6IHVuZGVmaW5lZCB9LCByZXN1bHQpO1xuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB1bnN1YnNjcmliZTtcbiAgICB9LCBcbiAgICAvLyBCdWlsZCBhIG5ldyBzdWJzY3JpYmUgZnVuY3Rpb24gaWYgdGhlIHF1ZXJ5IGNoYW5nZXNcbiAgICBbcXVlcnlIYXNoXSk7XG4gICAgY29uc3Qgc3RhdGUgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShzdWJzY3JpYmUsICgpID0+IHJlc3VsdENhY2hlUmVmLmN1cnJlbnQsICgpID0+IGRlZmF1bHRTdGF0ZSk7XG4gICAgcmV0dXJuIHsgc3RhdGUsIHF1ZXJ5IH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VRdWVyeS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/useQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/useTimeout.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/useTimeout.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTimeout: () => (/* binding */ useTimeout)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useTimeout() {\n    const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        clear();\n    }, []);\n    function set(delay, fn) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(fn, delay);\n    }\n    function clear() {\n        clearTimeout(timeoutRef.current);\n    }\n    return { set, clear };\n}\n//# sourceMappingURL=useTimeout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS91c2VUaW1lb3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUNuQztBQUNQLHVCQUF1Qiw2Q0FBTTtBQUM3QixJQUFJLGdEQUFTO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsiRjpcXE5ldyBmb2xkZXJcXGNoYXQtc3R5bGUtZW1haWwtbWFpblxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxyZWFjdFxcZGlzdFxcbW9kdWxlXFx1c2VUaW1lb3V0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gdXNlVGltZW91dCgpIHtcbiAgICBjb25zdCB0aW1lb3V0UmVmID0gdXNlUmVmKG51bGwpO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNsZWFyKCk7XG4gICAgfSwgW10pO1xuICAgIGZ1bmN0aW9uIHNldChkZWxheSwgZm4pIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRSZWYuY3VycmVudCk7XG4gICAgICAgIHRpbWVvdXRSZWYuY3VycmVudCA9IHNldFRpbWVvdXQoZm4sIGRlbGF5KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0UmVmLmN1cnJlbnQpO1xuICAgIH1cbiAgICByZXR1cm4geyBzZXQsIGNsZWFyIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VUaW1lb3V0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/useTimeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/version.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Autogenerated by publish_packages.clj\nconst version = \"v0.17.3\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsaUVBQWUsT0FBTyxFQUFDO0FBQ3ZCIiwic291cmNlcyI6WyJGOlxcTmV3IGZvbGRlclxcY2hhdC1zdHlsZS1lbWFpbC1tYWluXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXHJlYWN0XFxkaXN0XFxtb2R1bGVcXHZlcnNpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQXV0b2dlbmVyYXRlZCBieSBwdWJsaXNoX3BhY2thZ2VzLmNsalxuY29uc3QgdmVyc2lvbiA9IFwidjAuMTcuM1wiO1xuZXhwb3J0IGRlZmF1bHQgdmVyc2lvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/version.js\n");

/***/ })

};
;